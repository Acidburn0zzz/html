<bugzilla version="4.2.4"
          urlbase="https://www.w3.org/Bugs/Public/"
          
          maintainer="sysbot+bugzilla@w3.org"
          exporter="mike@w3.org"
>

    <bug>
          <bug_id>7798</bug_id>
          
          <creation_ts>2009-10-03 16:17:00 +0000</creation_ts>
          <short_desc>More data from TextMetrics API</short_desc>
          <delta_ts>2012-03-28 21:58:32 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#text</bug_file_loc>
          <status_whiteboard>canvas v5</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>11342</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mail@gossimaniac.net</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>oliver@obeattie.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-5993acb2430664fd53d656ab301aa07a</token>

      

      

          <long_desc isprivate="0">
            <commentid>28033</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2009-10-03 16:17:23 +0000</bug_when>
            <thetext>Section: http://www.whatwg.org/specs/web-apps/current-work/#text

Comment:
I&apos;m missing the height property in TextMetrics

Posted from: 89.15.248.239</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>28491</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2009-10-19 07:32:13 +0000</bug_when>
            <thetext>Agreed, but I&apos;d rather we waited for browsers to catch up and implement &lt;canvas&gt; well before adding yet more things for them to get wrong. :-)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>38864</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-09-10 22:55:25 +0000</bug_when>
            <thetext>*** Bug 10335 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>39359</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-09-25 16:29:35 +0000</bug_when>
            <thetext>*** Bug 10457 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44072</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 00:37:10 +0000</bug_when>
            <thetext>*** Bug 11472 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49976</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:44:08 +0000</bug_when>
            <thetext>*** Bug 12536 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52779</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:11 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>59360</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-11-01 05:39:27 +0000</bug_when>
            <thetext>*** Bug 14580 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64765</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:10:50 +0000</bug_when>
            <thetext>See http://wiki.whatwg.org/wiki/Canvas#TextMetrics for proposal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>66189</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-03-28 21:46:26 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see wiki above
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>66201</commentid>
            <who name="gossi">mail@gossimaniac.net</who>
            <bug_when>2012-03-28 21:58:32 +0000</bug_when>
            <thetext>Hi there,

I was just wondering. From the Spec here: http://dev.w3.org/html5/2dcontext/#textmetrics the TextMetrics object contains a readonly width property which is missing on the whatwg wiki you linked to above: http://wiki.whatwg.org/wiki/Canvas#TextMetrics_-_DONE That confuses me a little, is that property now dropped or are these sources only out of sync?

Thanks for the job guys.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>10930</bug_id>
          
          <creation_ts>2010-10-01 01:09:00 +0000</creation_ts>
          <short_desc>CanvasPixelArray out of range behavior needs clarification</short_desc>
          <delta_ts>2011-08-06 13:15:58 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jatinder Mann [MSFT]">jmann@microsoft.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>excors@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>kbr@google.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>public-webapps@w3.org</cc>
    
    <cc>silviapfeiffer1@gmail.com</cc>
    
    <cc>vladimir@pobox.com</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-1314f2f68a0ccb41fd526ee30f57b07e</token>

      

      

          <long_desc isprivate="0">
            <commentid>40358</commentid>
            <who name="Jatinder Mann [MSFT]">jmann@microsoft.com</who>
            <bug_when>2010-10-01 01:09:23 +0000</bug_when>
            <thetext>The spec is clear that the CanvasPixelArray contains image data in the range of 0..255, representing the 8 bit value for that component. However, the spec is not clear on what the expected behavior should be when a value greater or less than the range of 0..255 is assigned to the array.

The spec should be updated to include the following text:

&quot;When a CanvasPixelArray object is indexed to modify an indexed property index, with value value, the value of the component occupying the position index, in the array must be set to value. If value is less than 0, it must be clamped to zero. If value is more than 255, it must be clamped to 255.&quot;

Firefox, Chrome and Safari follow the behavior described in the proposed text. This behavior is more inline with a previous version of the spec.

Rounding to the limits of 0 or 255 when out of range seems to be more logical to a web developer than wrapping the value. 

http://lists.w3.org/Archives/Public/public-canvas-api/2010AprJun/0001.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40372</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-10-01 03:27:23 +0000</bug_when>
            <thetext>To be clear, the &quot;wrapping the value&quot; behavior the previous comment refers to is the behavior required by WebIDL&apos;s octet type.

I agree that clamping rather than wrapping is much more intuitive, and matches current implementations.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40375</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-10-01 03:31:58 +0000</bug_when>
            <thetext>Er, yeah.  Webidl for octet also introduces a bias towards zero if your numbers actually fall into the 0-255 range (due to the use of floor()).  The spec here used to specify quite different clamping and rounding behavior; why did that get removed?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40376</commentid>
            <who name="Silvia Pfeiffer">silviapfeiffer1@gmail.com</who>
            <bug_when>2010-10-01 03:54:19 +0000</bug_when>
            <thetext>Also note that Opera wraps the value, which confused me highly recently.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40420</commentid>
            <who name="Philip Taylor">excors@gmail.com</who>
            <bug_when>2010-10-01 10:54:37 +0000</bug_when>
            <thetext>(In reply to comment #2)
&gt; The spec here
&gt; used to specify quite different clamping and rounding behavior; why did that
&gt; get removed?

http://lists.w3.org/Archives/Public/public-canvas-api/2010AprJun/0002.html

  &quot;This text was removed because it would never have been invoked, since Web IDL changes the value before the method is invoked, so you can&apos;t actually invoke the method with out-of-range values. So it was rather confusing!&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40450</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-10-01 15:51:05 +0000</bug_when>
            <thetext>But the right fix there would have been to not use the |octet| webIDL type, not to change the behavior....</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40581</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-10-04 23:12:15 +0000</bug_when>
            <thetext>Octet is the right type here, since the value is specifically intended to be one byte.

Reassigning to the WebIDL component so that heycam can fix WebIDL&apos;s rounding behaviour to match what browsers do here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40582</commentid>
            <who name="Cameron McCormack">cam@mcc.id.au</who>
            <bug_when>2010-10-04 23:16:41 +0000</bug_when>
            <thetext>I&apos;ll have to look in to what other octet-using APIs (are there any?) do, too.  Hopefully it&apos;s not the case that some clamp while others do a mod.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40583</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2010-10-04 23:27:23 +0000</bug_when>
            <thetext>A similar issue was discovered while designing the Typed Array specification (https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html). The original clamping behavior of CanvasPixelArray, rounding values less than 0 to 0 and values greater than 255 to 255, leads to extremely inefficient machine code for the set operation. It appears that the reason that ECMA-262&apos;s ToInt32 and similar operations are specified the way they are is that they are efficiently implementable with machine instructions. The same holds for Web IDL&apos;s octet conversion rules for ECMAScript.

The Typed Array specification follows the ECMA-262 and Web IDL conventions, for what it&apos;s worth.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40614</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-10-05 01:30:57 +0000</bug_when>
            <thetext>Extremely inefficient compared to what?  Compared to a single C cast to (unsigned char)?  Sure.  Note that you can&apos;t do that anyway in general because it might be NaN, etc, so you have to check for those.

But more importantly, this behavior is unstable.  Floating-point rounding errors can suddenly send your white &quot;almost 256&quot; value to black.  That seems _very_ undesirable.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40615</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2010-10-05 01:52:52 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; Extremely inefficient compared to what?  Compared to a single C cast to
&gt; (unsigned char)?  Sure.  Note that you can&apos;t do that anyway in general because
&gt; it might be NaN, etc, so you have to check for those.

Inefficient compared to C casts, the Web IDL conversion rules, and the definitions of ToInt32 and similar conversions in the ECMA-262 specification itself.

Yes, an explicit NaN test is still required, but that is a small cost compared to the clamping behavior that was previously specified by CanvasPixelArray, which required differentiating even between positive and negative infinity.

&gt; But more importantly, this behavior is unstable.  Floating-point rounding
&gt; errors can suddenly send your white &quot;almost 256&quot; value to black.  That seems
&gt; _very_ undesirable.

256 is an out-of-range value for CanvasPixelArray. If the value were nearly, but not quite, 255, which is what correct code should be producing for white, then any rounding mode (round to zero or round to nearest) will produce reasonable results.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40616</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-10-05 02:01:34 +0000</bug_when>
            <thetext>&gt; which is what correct code should be producing for white

Plenty of code out there wants to take 128 and double it to go from gray to white, in my experience.  And again, the proposal of using floor() will 0-bias even in the absence of this issue.

In any case, a number of engines implement this stuff and the cost of the code on the sets there doesn&apos;t seem to be holding them back much performance-wise.  (In fact, it&apos;s minuscule in every single profile of anything using imageData I have ever done compared to various other things that need to happen.)  So I really don&apos;t buy the efficiency argument; the mod behavior would in fact be faster than clamp+round, but it&apos;s not a hotspot for this stuff.

One other note on performance in case someone does think it matters; in practice, code will in fact want the clamping behavior.  So if it&apos;s not done in imageData, it will simply move out into boilerplate JS which will make things even slower.

(All this quite apart from the &quot;compatibility with deployed content&quot; issue...  I know I&apos;ve seen some canvas stuff rendering incorrectly in Opera due to its different behavior here.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>40751</commentid>
            <who name="Jatinder Mann [MSFT]">jmann@microsoft.com</who>
            <bug_when>2010-10-06 22:22:55 +0000</bug_when>
            <thetext>We are planning to change the IE9 implementation to the prior clamping approach for compatibility with other implementations and any existing web content that expects the previous behavior. I recommend we update the spec.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48687</commentid>
            <who name="Cameron McCormack">cam@mcc.id.au</who>
            <bug_when>2011-05-23 03:19:52 +0000</bug_when>
            <thetext>Given Opera&apos;s the only one that doesn&apos;t clamp now, I think we should just make the CanvasPixelArray special operations clamp their arguments.  I don&apos;t see a problem with wrapping in general.  Unless there strong objections, I&apos;ll add a [Clamp] extended attribute that overrides the default JS to IDL conversion behaviour, which Ian can then use in the HTML spec.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48945</commentid>
            <who name="Cameron McCormack">cam@mcc.id.au</who>
            <bug_when>2011-05-31 03:54:31 +0000</bug_when>
            <thetext>I&apos;ve added [Clamp] now:

http://dev.w3.org/2006/webapi/WebIDL/#Clamp
http://dev.w3.org/2006/webapi/WebIDL/#es-byte
http://dev.w3.org/2006/webapi/WebIDL/#es-octet etc.

Reassigning to Hixie for HTML treatment.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52700</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:43 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54290</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-06 03:52:02 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54291</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-06 03:52:23 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6381.
Check-in comment: Use [Clamp] to return this part of the spec to the real world.
http://html5.org/tools/web-apps-tracker?from=6380&amp;to=6381</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54292</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-06 03:54:12 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6382.
Check-in comment: Update previous checkin to actually be in the real WebIDL world instead of some crazy meaningless nonsense. Oops.
http://html5.org/tools/web-apps-tracker?from=6381&amp;to=6382</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11066</bug_id>
          
          <creation_ts>2010-10-15 13:33:00 +0000</creation_ts>
          <short_desc>Notice of &apos;out of date&apos; documentation links to same page</short_desc>
          <delta_ts>2011-08-04 05:03:58 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Aaron Winborn">aaron@culturefix.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>aaron@culturefix.org</cc>
    
    <cc>ayg@aryeh.name</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-7fec3b48bf610a1abb216e1defb1dae3</token>

      

      

          <long_desc isprivate="0">
            <commentid>41420</commentid>
            <who name="Aaron Winborn">aaron@culturefix.org</who>
            <bug_when>2010-10-15 13:33:37 +0000</bug_when>
            <thetext>When visiting http://dev.w3.org/html5/2dcontext/ (dated W3C Working Draft 12 October 2010), a large red notice floats at the bottom, reading, &quot;This is an out-of-date copy of this specification. For the up-to-date version, please view the latest editor&apos;s draft by following this link.&quot; The link points to the same page.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52742</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:58 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11172</bug_id>
          
          <creation_ts>2010-10-29 19:54:00 +0000</creation_ts>
          <short_desc>wouldn&apos;t it be better to return the context handler instead of void, making &quot;context.moveTo(x1,y1).lineTo(x2,y2).lineTo...&quot; possible and easier?</short_desc>
          <delta_ts>2011-08-04 05:03:48 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#the-canvas-state</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-8d01e945e54646b8adb7ffde97799597</token>

      

      

          <long_desc isprivate="0">
            <commentid>41844</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-10-29 19:54:10 +0000</bug_when>
            <thetext>Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#the-canvas-state

Comment:
wouldn&apos;t it be better to return the context handler instead of void, making
&quot;context.moveTo(x1,y1).lineTo(x2,y2).lineTo...&quot; possible and easier?

Posted from: 84.110.19.97</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41890</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-10-31 16:19:34 +0000</bug_when>
            <thetext>I don&apos;t see the point. If that&apos;s what you like, use jQuery.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41892</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-10-31 16:19:46 +0000</bug_when>
            <thetext>*** Bug 11173 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41927</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2010-11-01 20:00:30 +0000</bug_when>
            <thetext>This is nice in jQuery because it sometimes lets you avoid naming extra variables, e.g. (actual code sample I was just looking at)

  $(&quot;body&quot;).append(&quot;&lt;script&gt;&lt;/script&gt;&quot;).attr(&quot;src&quot;, foo);

rather than

  var script = document.createElement(&quot;script&quot;);
  script.src = foo;
  document.body.appendChild(script);

which is necessary when using DOM methods because &quot;script.src = foo&quot; and the equivalent setAttribute() call don&apos;t return the element they&apos;re operating on, so you need an explicit temporary variable.  But almost any real-world canvas use is going to want to keep around a context handler anyway, so it doesn&apos;t look like there&apos;s any gain here.  (Although I don&apos;t see the harm either.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43584</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-27 23:54:48 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: Returning self isn&apos;t a good design pattern IMHO. It leads to very odd APIs that favour syntactic sugar over conveying logic.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52717</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:48 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11173</bug_id>
          
          <creation_ts>2010-10-29 19:54:00 +0000</creation_ts>
          <short_desc>wouldn&apos;t it be better to return the context handler instead of void, making &quot;context.moveTo(x1,y1).lineTo(x2,y2).lineTo...&quot; possible and easier?</short_desc>
          <delta_ts>2011-08-04 05:03:39 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>11172</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#the-canvas-state</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-dbdeead92999464de18b74001c7108cc</token>

      

      

          <long_desc isprivate="0">
            <commentid>41845</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-10-29 19:54:26 +0000</bug_when>
            <thetext>Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#the-canvas-state

Comment:
wouldn&apos;t it be better to return the context handler instead of void, making
&quot;context.moveTo(x1,y1).lineTo(x2,y2).lineTo...&quot; possible and easier?

Posted from: 84.110.19.97</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41891</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-10-31 16:19:46 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 11172 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52688</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:39 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11203</bug_id>
          
          <creation_ts>2010-11-02 20:29:00 +0000</creation_ts>
          <short_desc>Canvas security model does not allow for same-origin relaxation</short_desc>
          <delta_ts>2011-11-01 16:35:54 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          <see_also>https://bugzilla.mozilla.org/show_bug.cgi?id=567511</see_also>
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Matt Schemmel">matt.schemmel@gmail.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>matt.schemmel@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-b77da0b5e5f6b6beec25309191ba77cb</token>

      

      

          <long_desc isprivate="0">
            <commentid>41986</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-02 20:29:00 +0000</bug_when>
            <thetext>There appears to be a gap in the security model specification between the &apos;canvas&apos; and &apos;script&apos; elements.

The canvas security model
http://www.w3.org/TR/html5/the-canvas-element.html#security-with-canvas-elements

offers no way to relax the security check from &quot;same origin&quot; to &quot;effective script origin&quot;, as defined here
http://www.w3.org/TR/html5/origin-0.html#relaxing-the-same-origin-restriction

More accurately, there appears to be no way for the canvas context to use an effective script origin other than the actual origin of the resource. This prevents any use of the canvas interface by scripts sourced from a Document with a relaxed domain.

The HTML5 specification has been carefully implemented in the Mozilla project, and it is clear to see the effect: scripts that use the canvas API to filter images from host.domain.com fail on Firefox 3.x, where they operate successfully using Chrome, IE, etc.

Goal of this request is to introduce an effective-script-origin analogue for the canvas element, perhaps by introducing a method to set the effective script of the canvas object similar to document.domain for the Document.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41994</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-11-03 01:59:43 +0000</bug_when>
            <thetext>The origin of the canvas in Mozilla is just the origin of the document it&apos;s in; this is affected by setting document.domain.

Your real issue is that you can&apos;t change the origin of the _images_ involved, no?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41996</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-03 02:19:56 +0000</bug_when>
            <thetext>(In reply to comment #1)
&gt; The origin of the canvas in Mozilla is just the origin of the document it&apos;s in;
&gt; this is affected by setting document.domain.
&gt; 
&gt; Your real issue is that you can&apos;t change the origin of the _images_ involved,
&gt; no?

Yes; that&apos;s more accurately phrased.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41997</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-03 02:20:57 +0000</bug_when>
            <thetext>(To be explicit, the HTMLImageElement or HTMLVideoElement or whatever other resource is planted in the canvas.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41998</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-11-03 02:24:22 +0000</bug_when>
            <thetext>It seems to me like CORS is the right way to go here, for what it&apos;s worth.  Because at the end, the server serving up the images needs to be the entity which controls whether their origin can be changed.... at which point using CORS seems like a simpler solution.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>41999</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-03 02:34:35 +0000</bug_when>
            <thetext>I&apos;m not sure that I agree with that.

In the general case of cross-domain sharing, absolutely - that&apos;s the problem statement CORS is intended to address.

Given the constrained flexibility offered through the same-origin restriction relaxation, though, offering the ability to share resources across different subdomains within the same domain feels like the right &quot;80%&quot; solution.

Put differently: why would it make sense to offer relaxed restrictions for scripts while denying it for the improved interface to static resources that HTML5&apos;s canvas offers?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42000</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-11-03 02:51:31 +0000</bug_when>
            <thetext>The thing with scripts is that the relaxation can be done completely on the client side: two scripts _both_ indicate that they want to relax the restrictions, and they can talk to each other.

Here, we&apos;d need the canvas and the image/video being drawn into it to _both_ indicate that they want to relax the restriction.  For the canvas, this can be done client-side in script by setting document.domain.  But for the others, there is no client-side anything happening; the relaxation needs to be either in image metadata chunks or in the HTTP response from the server, right?

If you&apos;re not proposing the image itself be changed, then you&apos;re proposing some configuration change to the HTTP response.  And if we&apos;re already doing that, then that change might as well be to send the proper CORS headers instead of inventing a new wheel that&apos;s attached the same way.  Or am I missing something?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42051</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-03 16:45:19 +0000</bug_when>
            <thetext>I see what you&apos;re saying - static resources don&apos;t have anyway to handshake their participation in the sharing.

I understand the reasoning, but it still seems a little strange. Since at least the Mozilla UA distinguishes between specified and inferred domains, this effectively means that document.domain and canvas are mutually incompatible until full CORS support is implemented.

It feels like there might be room for a pragmatic solution that allowed client-side script-based &quot;promotion&quot; of static resources to ancestral domains of the resource&apos;s own origin... but, yeah, I can see that that&apos;s a can of worms maybe best left unopened.

Maybe it makes sense to at least update the HTML5 spec to make the implicit dependency on CORS explicit? It looks like there was some early discussion of the same already...
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-March/018863.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42067</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-11-03 18:27:08 +0000</bug_when>
            <thetext>That would be fine yes.

I don&apos;t think we want a way for site A to say that content from some other site B should be treated as same-origin with site A without site B having opted into it.  That way lie bad things....</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42082</commentid>
            <who name="Matt Schemmel">matt.schemmel@gmail.com</who>
            <bug_when>2010-11-03 22:38:11 +0000</bug_when>
            <thetext>Normally I&apos;d slightly disagree with you there, so long as A and B are part of the same parent domain.

Definitely haven&apos;t thought through the repercussions in an EC2 age, though, so I&apos;ll defer to those that have :)


The biggest concern that I have with the CORS approach is that it seems like it depends on the UAs to properly set up the Origin header on the request, which I don&apos;t believe is generally the case today. (We&apos;re really not looking to &quot;*&quot; out the credentialing, though I guess that could be a workaround).

Am I reading the CORS spec right in that cookies can be passed with the request, just that UAs are expected to disregard any modifications that come by way of Set-Cookie in the response?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42094</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-11-04 00:06:01 +0000</bug_when>
            <thetext>&gt; so long as A and B are part of the same parent domain.

Unfortunately, no.  It&apos;s common to use separate subdomains for security isolation; changing that would lead to security holes in all sorts of existing sites.

&gt; depends on the UAs to properly set up the Origin header on the request,

I believe Webkit and Gecko have both been working on doing this for all requests.

I don&apos;t know the answer to your cookies question off the top of my head.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43598</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-29 08:06:09 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: If the request here is just to allow a site A to opt-in to allowing another site B to read image data from images on site A, then the intent is to do this using CORS in due course, but for now we&apos;re waiting for more implementation experience with CORS.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52663</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:29 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>59414</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-11-01 16:35:54 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: &lt;img crossorigin&gt;
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11217</bug_id>
          
          <creation_ts>2010-11-04 12:35:00 +0000</creation_ts>
          <short_desc>Footnotes I find it hard to believe, that even today, HTML does not include a specific element for including notes within the text. Notes are necessary for the full argumentation in the text without still belonging to the main text itself, and they includ</short_desc>
          <delta_ts>2011-08-04 05:04:05 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>jbdoug2@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054509-61e77ad45401a945359e89e63af4e79a</token>

      

      

          <long_desc isprivate="0">
            <commentid>42116</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-04 12:35:37 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
Footnotes

I find it hard to believe, that even today, HTML does not include a specific
element for including notes within the text. Notes are necessary for the full
argumentation in the text without still belonging to the main text itself, and
they include citations to sources and to the works of other authors,

In traditional publishing, these are usually reproduced as footnotes or
endnotes, occasionally even as margin notes. The note itself is a _structural_
element, independent of its typographical representation, and as such
definitively would need a _structural_ element of its own. In the section
&quot;Footnotes&quot; there are examples of how to represent notes usign HTML. These
examples are all focused on the way, how to produce visual effects that look
like footnotes/endnotes/margin notes. None of these examples goes to any way
of solving the problem of presenting notes _structurally_ within a HTML
document.

Footnotes are not going to disappear just because IT specialists do not use
them. A major part of the legal, social and humanistic professions do use
them, and the lack of a corresponding HTML element will have a strong adverse
effect on the useability of HTML as a document representation format.

Best Wishes,

Harri Kiiskinen

Posted from: 130.232.37.20</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42120</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-11-04 13:35:36 +0000</bug_when>
            <thetext>&lt;figure&gt; can be used to mark up a footnote.  The display of footnotes is a CSS issue, not an HTML issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42194</commentid>
            <who name="Doug Jones">jbdoug2@gmail.com</who>
            <bug_when>2010-11-05 16:25:17 +0000</bug_when>
            <thetext>(In reply to comment #0)
&gt; Specification: http://dev.w3.org/html5/spec/Overview.html
&gt; Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top
&gt; 
&gt; Comment:
&gt; Footnotes

Are you asking for an element such as &lt;note&gt; to specifically identify content as a footnote, etc? Otherwise, a note can be placed in a &lt;p&gt; or &lt;li&gt; element in an &lt;aside&gt; section. It seems to me that aside is a better choice than figure.

&lt;aside class=&quot;footnote&quot;&gt;
 &lt;ol&gt;
   &lt;li value=&quot;1&quot;&gt;First footnote.&lt;/li&gt;
   &lt;li value=&quot;2&quot;&gt;Second footnote.&lt;/li&gt;
 &lt;/ol&gt;
&lt;/aside&gt;

I agree that a note is a structural aspect of a document, but am not sure if a separate element is required. There are not elements for chapter or sentence.

Doug Jones</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43601</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-29 08:14:09 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: The spec lists a variety of ways of including inline notes already. It&apos;s not clear why they&apos;re not sufficient.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52765</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:05 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11239</bug_id>
          
          <creation_ts>2010-11-05 20:17:00 +0000</creation_ts>
          <short_desc>Canvas support accessible caret tracking independent of Focus Ring tracking</short_desc>
          <delta_ts>2011-08-05 15:34:04 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas, TrackerIssue, WGDecision</keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>10964</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>chuck@jumis.com</cc>
    
    <cc>eoconnor@apple.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mjs@apple.com</cc>
    
    <cc>Paul.Cotton@microsoft.com</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>rubys@intertwingly.net</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-95cd6fc4bb49ed3143ff6c68adca981b</token>

      

      

          <long_desc isprivate="0">
            <commentid>42204</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2010-11-05 20:17:59 +0000</bug_when>
            <thetext>Per Issue 74, we need an API that will let a magnifer be notified of caret screen location changes in response to editable text form elements in the Canvas DOM sub tree.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42315</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2010-11-09 14:51:12 +0000</bug_when>
            <thetext>This seems to be covered by http://www.w3.org/html/wg/tracker/issues/131</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42904</commentid>
            <who name="Michael Cooper">cooper@w3.org</who>
            <bug_when>2010-11-30 16:41:08 +0000</bug_when>
            <thetext>Bug triage sub-team thinks this bug is providing additional details on 10964, which was raised just at the Last Call cutoff deadline with the understanding that more precise information would be filed later. This bug constitutes part of that information and therefore we think this should be considered a pre-LC bug.

Also note that this bug relates to ISSUE-131 http://www.w3.org/html/wg/tracker/issues/131 and arguably ISSUE-74 http://www.w3.org/html/wg/tracker/issues/74.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44055</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-10 23:21:35 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: no spec change
Rationale: As far as I can tell drawFocusRing() already does this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44075</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-01-11 00:44:23 +0000</bug_when>
            <thetext>Ian, the spec. merges caret and focus ring. We don&apos;t want that for reasons stated. The group needs to reach consensus on the revision which it has not done. Yet, you keep closing it and wasting our time.

Give the canvas subteam a chance to send in the revised proposal. Let it be reviewed by the working group before closing this. 

We can only move this to tracker request when we have a final proposal on the table.  

Seriously, if you want to participate in the discussion we have meetings every Monday.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44152</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-01-11 16:57:25 +0000</bug_when>
            <thetext>Ian, the spec. merges caret and focus ring. We don&apos;t want that for reasons stated. The group needs to reach consensus on the revision which it has not done. Yet, you keep closing it and wasting our time.

Give the canvas subteam a chance to send in the revised proposal. Let it be reviewed by the working group before closing this. 

We can only move this to tracker request when we have a final proposal on the table.  

Seriously, if you want to participate in the discussion we have meetings every Monday.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44158</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-01-11 17:34:05 +0000</bug_when>
            <thetext>Richard, it seems this bug is already covered by ISSUE-131:

http://www.w3.org/html/wg/tracker/issues/131

More generally, if the editor has given a disposition and someone else wants to provide new information in the future, it&apos;s correct for the bug to stay resolved in the meantime.

For these reasons, I&apos;m making the following changes:

1) Moving bug back to RESOLVED/WORKSFORME
2) Adding TrackerIssue keyword
3) Moving to pre-LC component, since this is covered by a pre-LC issue resulting from older bugs</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45042</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-03 01:41:01 +0000</bug_when>
            <thetext>(In reply to comment #3)
&gt; Rationale: As far as I can tell drawFocusRing() already does this.


drawFocusRing does not include line height attributes for caret tracking; it only includes an x, y position. Caret height is used by some AT software to better indicate the position of the caret. For example, arrows may be positioned above and below the caret height to better indicate the current position of the caret. This is not covered by drawFocusRing. For caret tracking, it&apos;s unnecessary to redraw the focus path each time that the x, y position of caret needs to be updated.

I&apos;m not sure what the consensus is on Issue #131

Is the editor supportive of that issue?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45063</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-02-03 17:13:53 +0000</bug_when>
            <thetext>I would add that in all accessibility services layers caret is separated from a focus ring or rectangle in an object. Placing an X, Y coordinate for the caret position in the focus ring is confusing. We have a change proposal to canvas that we are working on that eliminates the X,Y coordinate from drawFocusRing(). 

Also, we have a new caret/selection position API modification to the canvas2DDrawingAPI. We are trying to decide if this is the best place for this API as we will also need this functionality for SVG.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45285</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-02-08 20:00:12 +0000</bug_when>
            <thetext>Charles: the status of issue 131 is that it is awaiting proposals:

http://lists.w3.org/Archives/Public/public-html/2011Jan/0200.html

Please feel free to submit one.  Meanwhile, please do NOT reopen bugs that have already been escalated as an issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45286</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-08 20:35:45 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; Please feel free to submit one.  Meanwhile, please do NOT reopen bugs that have
&gt; already been escalated as an issue.

Is &quot;WORKSFORME&quot; an appropriate sub-status? I may be picking nits here, but it seems like &quot;DUPLICATE&quot; is a better fit. I re-opened specifically because of the WORKSFORME status as stated by the editor.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45496</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-02-14 20:59:41 +0000</bug_when>
            <thetext>OK. duplicate of Issue 131</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47413</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-04-13 21:01:16 +0000</bug_when>
            <thetext>Working Group Decision:
http://lists.w3.org/Archives/Public/public-html/2011Apr/0271.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47414</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-04-13 21:52:40 +0000</bug_when>
            <thetext>(In reply to comment #12)
&gt; Working Group Decision:

In relation to this decision:
* The change to add baseline to the TextMetric interface is not adopted.
&quot;... noted the editor&apos;s question &apos;which baseline?&apos;&quot;

Naseline properties are defined by the textBaseline section of the existing specification.

When an author sets textBaseline to a value, that is the baseline which would be used for the TextMetric.baseline property.

Such information is easily accessible to implementers, see for example, drawTextInternal
http://trac.webkit.org/browser/trunk/Source/WebCore/html/canvas/CanvasRenderingContext2D.cpp

The value is calculated from a combination of the ascent, descent and font height metrics.


In relation to this decision:
* The change to remove the canDrawCustom parameter from drawFocusRing
  is not adopted.

It&apos;s my understanding that such a parameter would be specified via CSS, such as the css outline property, as is done on other HTML elements when they are focused. As in HTML, authors are not guaranteed that the UA/AT will &quot;skip&quot; drawing focus indicators. canDrawCustom seems only to duplicate the already existing semantics CSS provides.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47421</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-13 23:55:12 +0000</bug_when>
            <thetext>I&apos;m not sure I fully understand this decision. How am I intended to apply the exceptions? For example, what is the return value of drawFocusRing()?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47436</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-04-14 14:55:26 +0000</bug_when>
            <thetext>No changes need to be made. The function, in its entirety, is broken.

Please see my post for clarification: http://lists.w3.org/Archives/Public/public-html/2011Apr/0394.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47485</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-04-15 19:09:49 +0000</bug_when>
            <thetext>&gt; In relation to this decision:
&gt; * The change to remove the canDrawCustom parameter from drawFocusRing
&gt;   is not adopted.
&gt; 
&gt; It&apos;s my understanding that such a parameter would be specified via CSS, such as
&gt; the css outline property, as is done on other HTML elements when they are

Richard reminded me that the author can simply change the strokeStyle if they do not want the UA to draw a [visible] focus ring.

Ian, is there a question about that?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47490</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-15 20:19:14 +0000</bug_when>
            <thetext>I don&apos;t understand comment 15 and comment 16.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47495</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-04-15 21:24:44 +0000</bug_when>
            <thetext>(In reply to comment #17)
&gt; I don&apos;t understand comment 15 and comment 16.

&quot;The drawFocusRing(element) method, when invoked, must run the following steps:

... If the user has configured the operating system to draw focus rings in a certain way (e.g. high-contrast focus rings), then the user agent should draw a focus ring of the appropriate style along the drawing path otherwise the user agent must draw the focus ring based on the canvas line drawing settings along the current drawing path.&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47500</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-04-15 21:49:03 +0000</bug_when>
            <thetext>(In reply to comment #13)
&gt; (In reply to comment #12)
&gt; &gt; Working Group Decision:
&gt; 
&gt; In relation to this decision:
&gt; * The change to add baseline to the TextMetric interface is not adopted.
&gt; &quot;... noted the editor&apos;s question &apos;which baseline?&apos;&quot;


Implementing TextMetric baseline in Mozilla:

https://hg.mozilla.org/mozilla-central/file/ec809c159ad2/content/canvas/src/nsCanvasRenderingContext2D.cpp

DrawOrMeasureText
gfxFloat anchorY

Lines 2745 through 2767.

TextMetrics.baseline returns anchorY.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47629</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-04-23 03:48:54 +0000</bug_when>
            <thetext>(In reply to comment #14)
&gt; I&apos;m not sure I fully understand this decision. How am I intended to apply the
&gt; exceptions? For example, what is the return value of drawFocusRing()?

In general, if you are in doubt about how to correctly apply the decision, the recommended approach would be to post a diff to the WG for review.

You have pointed outelswhere that there is both a list of bullet point changes and spec text, and it&apos;s not necessarily clear which takes priority, so there could understandably be ambiguity.

Informally, on this specific issue, I think the reasonable thing to do is to treat the return value as tied to the canDrawFocusRing parameter, since that seems to be the case on a technical level.

But in any case, posting a diff up front should ensure that there is no misunderstanding.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47725</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-26 22:27:13 +0000</bug_when>
            <thetext>So I started doing as suggested in comment 20, and basically guess at what changes I had to make, but I still couldn&apos;t do it.

There are a number of changes in [1] that are simply unsupported by the CP and not mentioned by the decision [2], and which seem to me to be either unintentional mistakes or simply nonsensical.

For example:
 - The new API fails to handle magnification for interactive graphics that don&apos;t have a caret or selection, e.g. check boxes. Magnification only seems to occur if the script calls setCaretSelectionRect().
 - drawFocusRing() is described sometimes as only working if the focused element is what is passed to the method, and sometimes as working even if the element passed to the method has a focused ancestor, even if the ancestor is also an ancestor of the &lt;canvas&gt; itself (e.g. &lt;body&gt;).
 - caretBlinkRate() is defined to return a rate in milliseconds, which doesn&apos;t make sense.
 - caretBlinkRate() is required to return a non-specified negative value in certain cases. This is an interoperability nightmare.
 - The example is far bigger than could possibly be useful.
 - The example in the proposed text is explicitly marked as needing changes!
 - The proposed spec text uses terms like &quot;rectangular left edge&quot; which are meaningless (a side&apos;s edge can&apos;t be rectangular, by definition).
 - The &quot;selection position&quot; term&apos;s definition doesn&apos;t handle bidi.
 - The caret API isn&apos;t sufficient for addressing modern accessibility and internationalisation needs, because it requires that the caret blinking be drawn by the app, which means it can&apos;t support Windows accessibility wide carets, bidi carets, or indeed anything other than what the author draws (e.g. on RISCOS an app wouldn&apos;t follow the platform-specific caret convention).
 - The entire caret aspect of this API simply won&apos;t work, because it doesn&apos;t do anything useful for authors who aren&apos;t trying to address accessibility issues. We know this is a problem, just look at longdesc.
 - The RFC2119 requirements make no sense. For example, there is a &quot;must&quot; requirement on what authors are to render!

I&apos;ve tried to get answers about these things from the chairs, but without much luck. At one point Maciej even said &quot;I guess I should have read the text&quot;. It is simply absurd that decisions would be made by people who are not even reading the proposals.

I cannot in good faith make this edit. It&apos;s not that I disagree with the decision, it&apos;s that the decision makes no sense.


(For the record, there&apos;s also some issues that I disagree with and that I think are poor design, but that aren&apos;t nonsensical:

 - caretBlinkRate() is a method, not an attribute.
 - caretBlinkRate() only returns one number, whereas a blinking behaviour needs two numbers to be fully described, and that&apos;s assuming simple blinking carets.
 - The &quot;caret position&quot; term clashes with an existing term in the HTML spec.

These wouldn&apos;t stop me making the edit, though; I&apos;d just file bugs on them or put up with them, as I have with some of the other decisions.)

[1] http://lists.w3.org/Archives/Public/public-html/2011Apr/att-0657/canvascarseldecision20110426.html#dom-context-2d-setCaretSelectionRect
[2] http://lists.w3.org/Archives/Public/public-html/2011Apr/0271.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47726</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-04-26 22:35:42 +0000</bug_when>
            <thetext>Blink rates on all OS platforms return a rate in milliseconds. They do not return two values. 

A negative number is means there is no setting in the OS applied. What is the problem?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47729</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-27 01:39:44 +0000</bug_when>
            <thetext>(In reply to comment #22)
&gt; Blink rates on all OS platforms return a rate in milliseconds. They do not
&gt; return two values. 

A time in milliseconds is not a rate. It&apos;s an interval. Rates are in Hertz (or some other unit with dimension [1/T]). The proposal doesn&apos;t say what the return value is other than to say it must be a rate and must be in milliseconds, which is self-contradictory and leaves the reader wondering what the number means: the complete period, a half period, the time the caret is on, the time the caret is off, the frequency? It&apos;s simply not defined well enough to be interoperably implementable.


&gt; A negative number is means there is no setting in the OS applied. What is the
&gt; problem?

Which negative number? We can&apos;t leave things undefined. It&apos;s not 1995 any more. (Also, how can the OS not have a blink rate? Do you have an example of such an OS?)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47730</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-04-27 02:45:13 +0000</bug_when>
            <thetext>(In reply to comment #23)
&gt; (In reply to comment #22)
&gt; &gt; Blink rates on all OS platforms return a rate in milliseconds. They do not
&gt; &gt; return two values. 
&gt; 
&gt; A time in milliseconds is not a rate. It&apos;s an interval. Rates are in Hertz (or
&gt; some other unit with dimension [1/T]). The proposal doesn&apos;t say what the return
&gt; value is other than to say it must be a rate and must be in milliseconds, which
&gt; is self-contradictory and leaves the reader wondering what the number means:
&gt; the complete period, a half period, the time the caret is on, the time the
&gt; caret is off, the frequency? It&apos;s simply not defined well enough to be
&gt; interoperably implementable.
&gt; 

For what it&apos;s worth, the relevant setting on Mac OS X is called NSTextInsertionPointBlinkPeriod and on Windows it&apos;s called CursorBlinkRate. There are also APIs that call it &quot;CaretBlinkTime&quot;. This seems to be informally referred to as the &quot;caret blink rate&quot; in developer docs, even though logically that may be a misnomer.

Though no one objected on the basis of interval vs. rate, if you and Rich agree that the property should be named something with Time, Period or Interval rather than Rate, then I don&apos;t foresee a problem with that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47739</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-04-27 13:27:56 +0000</bug_when>
            <thetext>Ian, I don&apos;t have a problem with calling it caretBlinkInterval or caretBlinkPeriod. Ian, you are welcome to choose one of the two names. We will just need to educate authors on the new name as neither is similar to existing OS settings.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47756</commentid>
              <attachid>979</attachid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-28 03:25:27 +0000</bug_when>
            <thetext>Created attachment 979
attempt at applying decision</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47759</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-04-28 05:36:49 +0000</bug_when>
            <thetext>Per Ian&apos;s comments, the drawFocusRing example should be updated. The example provided has additional arguments and other content designed for compatibility and testing in existing implementations and can be simplified when targeting the CP.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47780</commentid>
              <attachid>980</attachid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-28 18:17:39 +0000</bug_when>
            <thetext>Created attachment 980
attempt at applying decision</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47814</commentid>
              <attachid>981</attachid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-29 20:01:21 +0000</bug_when>
            <thetext>Created attachment 981
attempt at applying decision</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47836</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-01 23:52:14 +0000</bug_when>
            <thetext>- I accept the changes for caretBlinkPeriod. 
- I have not tried the code change the editor has made, when I see the full change I will try it out. We had found defects in the prior code which did not run and we added commments. Please refer to the change request adapted for the chairs decision at it: http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html
If the editor could adapt his changes to our code it would run and pick up the performance issues addressed by the editor. 

The changes to drawFocusRing are still inaccurate for these reasons:

- DrawFocusRing must be able to draw a focus ring around an element with focus or descendant of an element with focus. Often, in rich internet applications an element with focus will managed visual rendering of focus for its children. Examples of this are grids, radio groups, listboxes, and tree widgets. 

See the text in: http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html

A note to the editor:
In the canvas subtree authors can use aria-activedescendant on one of these element to convey the focus location of a descendant to an assistive technology.

example: 
&lt;table role=&quot;grid&quot; aria-activedescendant=&quot;foo&quot;&gt;
...
&lt;tr role=&quot;row&quot;&gt;
&lt;td role=&quot;gridcell&quot; id=&quot;foo&quot;&gt; ... &lt;/tr&gt;
...
&lt;/table&gt; 

- caretSelectionPos still has some problems. I don&apos;t have an issue with the name change or the use of a path to produce the rectangle
-- The accessibility API mapping must step must be provided. 
-- The text does not address when the user agent window is moved or resized

Please see the steps in the change proposal: http://lists.w3.org/Archives/Public/public-html/2011Apr/att-0657/canvascarseldecision20110426.html#caret-selection</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47845</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-02 20:47:45 +0000</bug_when>
            <thetext>
Ian, can you provide a revised diff that addresses these comments?

(In reply to comment #30)
&gt; - I accept the changes for caretBlinkPeriod. 
&gt; - I have not tried the code change the editor has made, when I see the full
&gt; change I will try it out. We had found defects in the prior code which did not
&gt; run and we added commments. Please refer to the change request adapted for the
&gt; chairs decision at it:
&gt; http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html
&gt; If the editor could adapt his changes to our code it would run and pick up the
&gt; performance issues addressed by the editor. 
&gt; 
&gt; The changes to drawFocusRing are still inaccurate for these reasons:
&gt; 
&gt; - DrawFocusRing must be able to draw a focus ring around an element with focus
&gt; or descendant of an element with focus. Often, in rich internet applications an
&gt; element with focus will managed visual rendering of focus for its children.
&gt; Examples of this are grids, radio groups, listboxes, and tree widgets. 
&gt; 
&gt; See the text in:
&gt; http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html
&gt; 
&gt; A note to the editor:
&gt; In the canvas subtree authors can use aria-activedescendant on one of these
&gt; element to convey the focus location of a descendant to an assistive
&gt; technology.
&gt; 
&gt; example: 
&gt; &lt;table role=&quot;grid&quot; aria-activedescendant=&quot;foo&quot;&gt;
&gt; ...
&gt; &lt;tr role=&quot;row&quot;&gt;
&gt; &lt;td role=&quot;gridcell&quot; id=&quot;foo&quot;&gt; ... &lt;/tr&gt;
&gt; ...
&gt; &lt;/table&gt; 
&gt; 
&gt; - caretSelectionPos still has some problems. I don&apos;t have an issue with the
&gt; name change or the use of a path to produce the rectangle
&gt; -- The accessibility API mapping must step must be provided. 
&gt; -- The text does not address when the user agent window is moved or resized
&gt; 
&gt; Please see the steps in the change proposal:
&gt; http://lists.w3.org/Archives/Public/public-html/2011Apr/att-0657/canvascarseldecision20110426.html#caret-selection</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47870</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-03 18:44:10 +0000</bug_when>
            <thetext>(In reply to comment #30)
&gt; - I have not tried the code change the editor has made, when I see the full
&gt; change I will try it out. We had found defects in the prior code which did not
&gt; run and we added commments. Please refer to the change request adapted for the
&gt; chairs decision at it:
&gt; http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html
&gt; If the editor could adapt his changes to our code it would run and pick up the
&gt; performance issues addressed by the editor. 

Could you be more specific? The code in the CP has multiple problems (as it in fact admits up-front), as does the code in the spec; the code in the patch is an attempt to address both sets of problems.


&gt; - DrawFocusRing must be able to draw a focus ring around an element with focus
&gt; or descendant of an element with focus.

That makes no sense (it would mean that multiple elements would be rendered as having focus if, e.g., the &lt;body&gt; had focus), and is not supported by the CP. I don&apos;t think we should be making changes unsupported by the CP, and I don&apos;t think we should be making changes that break the API.


&gt; Often, in rich internet applications an
&gt; element with focus will managed visual rendering of focus for its children.

Before I go through the examples, let me just say up front that trying to create any of these using &lt;canvas&gt; is simply inappropriate and that we should absolutely be pushing back on authors who try to do such things. We should not be promoting bad practices.

&gt; Examples of this are grids,

In a grid, it is individual cells that would be focused, not the whole grid, when you want the focus ring around a single cell. This is already supported.

&gt; radio groups,

Radio groups aren&apos;t focused, radio buttons are. This is already supported.

&gt; listboxes,

In a list box, the focus ring is drawn around the list box, not the options, so this is already supported.

&gt; and tree widgets. 

I don&apos;t understand why tree widgets would be a problem here. If you want the focus ring around the whole tree widget, and you just focus the whole tree widget, that&apos;s what you would pass as an argument. If you have a tree widget where individual subparts get focus rings, then those are what get focused and those should be the ones you pass in. It again seems quite well supported.


&gt; A note to the editor:
&gt; In the canvas subtree authors can use aria-activedescendant on one of these
&gt; element to convey the focus location of a descendant to an assistive
&gt; technology.
&gt; 
&gt; example: 
&gt; &lt;table role=&quot;grid&quot; aria-activedescendant=&quot;foo&quot;&gt;
&gt; ...
&gt; &lt;tr role=&quot;row&quot;&gt;
&gt; &lt;td role=&quot;gridcell&quot; id=&quot;foo&quot;&gt; ... &lt;/tr&gt;
&gt; ...
&gt; &lt;/table&gt; 

There&apos;s no need to use something as complicated as ARIA for this kind of thing. You can just use tabindex.


&gt; - caretSelectionPos still has some problems. I don&apos;t have an issue with the
&gt; name change or the use of a path to produce the rectangle
&gt; -- The accessibility API mapping must step must be provided. 

I strongly disagree. This is neither supported by the CP nor necessary. We should not be defining precise UI.


&gt; -- The text does not address when the user agent window is moved or resized

It is unnecessary to even mention that windows exist. This is a UI implementation issue. It&apos;s only a problem in the spec if we make the text say how to implement UI, which we shouldn&apos;t in the first place.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47871</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-05-03 19:11:43 +0000</bug_when>
            <thetext>(In reply to comment #32)
&gt; (In reply to comment #30)
&gt; &gt; - DrawFocusRing must be able to draw a focus ring around an element with focus
&gt; &gt; or descendant of an element with focus.
&gt; 
&gt; That makes no sense (it would mean that multiple elements would be rendered as
&gt; having focus if, e.g., the &lt;body&gt; had focus), and is not supported by the CP. I
&gt; don&apos;t think we should be making changes unsupported by the CP, and I don&apos;t
&gt; think we should be making changes that break the API.

I&apos;ve seen this objection multiple times: what on earth are you referring to?
Focus is restricted to the shadow dom, and can only be used when the canvas element or a descendant is in focus. Is there ambiguous wording in the CP? There&apos;s been no change (from what I recall) in that shadow+focus dynamic from the existing spec. It&apos;s implemented and tested by one vendor (MS) with WebKit slowly coming on board.


&gt; &gt; Often, in rich internet applications an
&gt; &gt; element with focus will managed visual rendering of focus for its children.
&gt; 
&gt; Before I go through the examples, let me just say up front that trying to
&gt; create any of these using &lt;canvas&gt; is simply inappropriate and that we should
&gt; absolutely be pushing back on authors who try to do such things. We should not
&gt; be promoting bad practices.

Your position of authority does not extend so far as to declare the &lt;canvas&gt; tag should not be used for visual rendering of children. This statement seems to discount the very purpose of the canvas shadow dom and drawFocusRing. I&apos;m baffled by both of these replies, as you were clearly on board with drawFocusRing in your prior drafts of HTML Living.

We&apos;re trying to promote GOOD practices, per WCAG 2.0. It&apos;d be nice to have you on board with that intention.

&gt; Radio groups aren&apos;t focused, radio buttons are. This is already supported.
&gt; 
...
&gt; In a list box, the focus ring is drawn around the list box, not the options, so
&gt; this is already supported.
...
&gt; I don&apos;t understand why tree widgets would be a problem here. If you want the
&gt; focus ring around the whole tree widget, and you just focus the whole tree
&gt; widget, that&apos;s what you would pass as an argument. If you have a tree widget
&gt; where individual subparts get focus rings, then those are what get focused and
&gt; those should be the ones you pass in. It again seems quite well supported.

This seems to be an extension of the misunderstanding about the language in the CP regarding &quot;focus&quot; on descendants of the canvas element. Yes, it&apos;s quite well supported, and it is not a feature that the CP attempts to change.

Perhaps this is just my misunderstanding of the situation, but it seems that both you and Richard are arguing the same point.

&gt; 
&gt; 
&gt; &gt; A note to the editor:
&gt; &gt; In the canvas subtree authors can use aria-activedescendant on one of these
&gt; &gt; element to convey the focus location of a descendant to an assistive
&gt; &gt; technology.
&gt; &gt; 
&gt; &gt; example: 
&gt; &gt; &lt;table role=&quot;grid&quot; aria-activedescendant=&quot;foo&quot;&gt;
&gt; &gt; ...
&gt; &gt; &lt;tr role=&quot;row&quot;&gt;
&gt; &gt; &lt;td role=&quot;gridcell&quot; id=&quot;foo&quot;&gt; ... &lt;/tr&gt;
&gt; &gt; ...
&gt; &gt; &lt;/table&gt; 
&gt; 
&gt; There&apos;s no need to use something as complicated as ARIA for this kind of thing.
&gt; You can just use tabindex.

That&apos;s absurd -- this grid example is widely used in ARIA docs -- the purpose is to allow a user to press arrow keys on their keyboard, to change focus. There&apos;s little reason for the merits of ARIA itself to be challenged in this post.


&gt; &gt; -- The accessibility API mapping must step must be provided. 
&gt; 
&gt; I strongly disagree. This is neither supported by the CP nor necessary. We
&gt; should not be defining precise UI.

Are you disagreeing with this latter point?

&gt; &gt; -- The text does not address when the user agent window is moved or resized
&gt; 
&gt; It is unnecessary to even mention that windows exist. This is a UI
&gt; implementation issue. It&apos;s only a problem in the spec if we make the text say
&gt; how to implement UI, which we shouldn&apos;t in the first place.

Again, you are challenging the purpose of ARIA itself, and related, WCAG standards. These are required by U.S. law, and their absence is an active attempt at stifling competition. I appreciate your intent, and your role in the community, but you are unwittingly misusing your authority as the only editor of the HTML5 spec.

Again, I&apos;m willing to say that I may be misunderstanding the situation -- but by and large, these implementation mentions are directly related to accessibility -- the primary purpose of the CP. Universal design requires active participation from the author -- a point you seem to disagree with. Where are your credentials in accessibility, to back these statements? At present, your hope that the entirety of a11y can be handled without active author involvement is misguided and arguably, under-informed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47900</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-03 20:29:15 +0000</bug_when>
            <thetext>(In reply to comment #33)
&gt; &gt; 
&gt; &gt; Before I go through the examples, let me just say up front that trying to
&gt; &gt; create any of these using &lt;canvas&gt; is simply inappropriate and that we should
&gt; &gt; absolutely be pushing back on authors who try to do such things. We should not
&gt; &gt; be promoting bad practices.
&gt; 
&gt; Your position of authority does not extend so far as to declare the &lt;canvas&gt;
&gt; tag should not be used for visual rendering of children. This statement seems
&gt; to discount the very purpose of the canvas shadow dom and drawFocusRing. I&apos;m
&gt; baffled by both of these replies, as you were clearly on board with
&gt; drawFocusRing in your prior drafts of HTML Living.

drawFocusRing() is fine for things like buttons, which one could legitimately expect to see on a canvas. But UI beyond anything as simple as a button quickly becomes highly inappropriate.

&lt;canvas&gt; isn&apos;t supposed to replace HTML. I really don&apos;t understand why anyone who considers themselves to be advocates of accessibility would even remotely want to encourage authoring practices such as implementing entire tree widgets, grids, text editors, or list boxes inside &lt;canvas&gt;.


&gt; We&apos;re trying to promote GOOD practices, per WCAG 2.0. It&apos;d be nice to have you
&gt; on board with that intention.

I&apos;m trying to promote GOOD practices too. It&apos;d be really nice to have _you_ on board with that intention. Apparently we disagree about what is a good practice.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47906</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-05-03 21:47:28 +0000</bug_when>
            <thetext>(In reply to comment #34)
&gt; drawFocusRing() is fine for things like buttons, which one could legitimately
&gt; expect to see on a canvas. But UI beyond anything as simple as a button quickly
&gt; becomes highly inappropriate.

What standard are you following in these claims? The HTML Forms select element is quite commonly re-implemented by other methods, such as div tags mixed with ARIA attributes. Your claim comes with no sources nor technical reasoning, nor is it particularly on the topic of the change proposal.

&gt; &lt;canvas&gt; isn&apos;t supposed to replace HTML. I really don&apos;t understand why anyone
&gt; who considers themselves to be advocates of accessibility would even remotely
&gt; want to encourage authoring practices such as implementing entire tree widgets,
&gt; grids, text editors, or list boxes inside &lt;canvas&gt;.

The grid example uses HTML. Canvas is an HTML tag. Advocates of accessibility engage in the ARIA standard and the WCAG document, by definition. If you would like to understand, I recommend reviewing WAI documents.

Whatever motivations that accessibility vendors, and general web app vendors have for using canvas as a method for progressive enhancement, is really not under your purview. An example I often bring up: When Mozilla decides to castigate its Bespin authors, that&apos;s an internal decision. If they take that policy further, and &quot;push back&quot; against other entities, it&apos;s an act of hegemony.

&gt; 
&gt; &gt; We&apos;re trying to promote GOOD practices, per WCAG 2.0. It&apos;d be nice to have you
&gt; &gt; on board with that intention.
&gt; 
&gt; I&apos;m trying to promote GOOD practices too. It&apos;d be really nice to have _you_ on
&gt; board with that intention. Apparently we disagree about what is a good
&gt; practice.

I&apos;ve put citations forward in my arguments; you have not. Regardless, we&apos;re trying to accomplish the items outlined in this CP, for the sake of assistive technology. You&apos;ve often claimed that such support can be handled automatically. I disagree. It must be handled with intent.

Your opinions about authors creating complex widgets, interaction with ATs and the ARIA spec, are lacking authority. Please provide citations, lest you under-serve the community and the arguments we&apos;ve been carrying for a good part of the last twelve months.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47943</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-04 13:41:30 +0000</bug_when>
            <thetext>Ian,

I am not going to go point by point with you and waste another hour of my day on what was already agreed upon by the chairs. 

It is a common practice to have Rich Internet Application components manage the visual focus for the descendants they manage. The intent of drawFocusRing is to allow elements that have focus to show visible focus and for those elements to show the visual focus around the child that they manage. This happens in UI component libraries, like Dojo. 

To illustrate further, while I understand that keyboard focus is on a tree widget the visual focus should be on the descendant that it manages. When you operate a tree widget you are not visually operating on the container yet the author has given a visual point of regard on the managed descendant. This is indeed consistent with WCAG 2. Authors can then use aria-activedescendant to notify the assistive technology what child is the one they should operate on with focus. This works and it works in Chrome, Firefox, Safari, and IE. I can provide you numerous code examples from the Open Ajax Alliance that we will be using for browser testing for ARIA.

There is nothing wrong with this authoring practice and it is used extensively throughout the Web. Since the canvas subtree is being used to generate the accessibility API mapping in browsers and these are common and accepted authoring practices that are also accessible and supported accessibly on multiple browsers then canvas&apos;s drawFocusRing must support this functionality.

Now, if your concern is over the name &quot;focus&quot; in drawFocusRing I would support a name change or some clarity in its description.  

If this is unacceptable you are welcome to open a defect post last call but the capability to support drawing of a visible focus ring or point of regard must be supported for accessibility. 

For the record, my job is not to promote idealistic authoring practices. My job is to ensure that authors have the tools to produce accessible solutions as consistent with their development goals as is technically possible.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48042</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 06:51:55 +0000</bug_when>
            <thetext>Hi Rich,

(In reply to comment #36)
&gt; Ian,
&gt; 
&gt; I am not going to go point by point with you and waste another hour of my day
&gt; on what was already agreed upon by the chairs. 
&gt; 
&gt; It is a common practice to have Rich Internet Application components manage the
&gt; visual focus for the descendants they manage. The intent of drawFocusRing is to
&gt; allow elements that have focus to show visible focus and for those elements to
&gt; show the visual focus around the child that they manage. This happens in UI
&gt; component libraries, like Dojo. 
&gt; 
&gt; To illustrate further, while I understand that keyboard focus is on a tree
&gt; widget the visual focus should be on the descendant that it manages. When you
&gt; operate a tree widget you are not visually operating on the container yet the
&gt; author has given a visual point of regard on the managed descendant. This is
&gt; indeed consistent with WCAG 2. Authors can then use aria-activedescendant to
&gt; notify the assistive technology what child is the one they should operate on
&gt; with focus. This works and it works in Chrome, Firefox, Safari, and IE. I can
&gt; provide you numerous code examples from the Open Ajax Alliance that we will be
&gt; using for browser testing for ARIA.

It is indeed the case that complex widgets often have a &quot;point of regard&quot; that is more fine-grained than the element with focus. However, on operating systems I am familiar with, it is not normal to draw a focus ring with the standard system look in such a case. For example, on Mac OS X, the keyboard-active item in a tree view is drawn selected, not with the blue glowing focus ring that represents focus. Perhaps a new API is needed is needed for this use car, since using drawFocusRing to indicate focus of an individual tree or grid item would result in visually wrong behavior.

&gt; 
&gt; There is nothing wrong with this authoring practice and it is used extensively
&gt; throughout the Web. Since the canvas subtree is being used to generate the
&gt; accessibility API mapping in browsers and these are common and accepted
&gt; authoring practices that are also accessible and supported accessibly on
&gt; multiple browsers then canvas&apos;s drawFocusRing must support this functionality.
&gt; 
&gt; Now, if your concern is over the name &quot;focus&quot; in drawFocusRing I would support
&gt; a name change or some clarity in its description.  

I think the problem is not just the name, but the behavior. It is actually specified to draw a focused appearance. That is not done for aria-activedescendant type point-of-regard items, either in Web content or in native apps. Drawing focus rings around two separate items would violate the Mac OS X HI guidelines.

Do you agree that this is an issue? If so, can we agree on a separate mechanism to identify a &quot;point of regard&quot; that is not actually meant to be drawn with focused appearance? If not, then I guess we will have to address it via a Last Call comment.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48044</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 06:55:39 +0000</bug_when>
            <thetext>(In reply to comment #37)
&gt; Hi Rich,
&gt; 
&gt; 
&gt; I think the problem is not just the name, but the behavior. It is actually
&gt; specified to draw a focused appearance. That is not done for
&gt; aria-activedescendant type point-of-regard items, either in Web content or in
&gt; native apps. Drawing focus rings around two separate items would violate the
&gt; Mac OS X HI guidelines.
&gt; 
&gt; Do you agree that this is an issue? If so, can we agree on a separate mechanism
&gt; to identify a &quot;point of regard&quot; that is not actually meant to be drawn with
&gt; focused appearance? If not, then I guess we will have to address it via a Last
&gt; Call comment.

Another thing to note: the setCaretSelection API can already be used to identify a magnifier-relevant point of regard without drawing a focus ring or changing focus, so despite the name, it seems like it would address the aria-activedescendant use case. What do you think?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48049</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 07:14:57 +0000</bug_when>
            <thetext>I noticed that the Change Proposals says that the Accessibility API Mappings document should give the full details of how selection and focus are mapped to accessibility APIs. I filed the following bug:

http://www.w3.org/Bugs/Public/show_bug.cgi?id=12604

It seems like details of connecting to accessibility APIs are more in scope for the Accessibility API Mappings document. Would it make sense to ask Steve to add them there?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48054</commentid>
              <attachid>982</attachid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-05 07:23:57 +0000</bug_when>
            <thetext>Created attachment 982
attempt at applying decision</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48055</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 07:36:56 +0000</bug_when>
            <thetext>To illustrate what I&apos;m attaching two examples of a focused Mac OS X table view with a sub-item as the current &quot;point of regard&quot;. When nothing is selected for editing, the table view has focus. When a cell is selected for editing, the cell has focus. At no time do two different things have focus.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48056</commentid>
              <attachid>983</attachid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 07:38:10 +0000</bug_when>
            <thetext>Created attachment 983
Table view - cells selected but not focused</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48057</commentid>
              <attachid>984</attachid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-05-05 07:38:39 +0000</bug_when>
            <thetext>Created attachment 984
Table view - cell focused for editing</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48090</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-05 16:27:35 +0000</bug_when>
            <thetext>Hi Maciej, 

Incidentally, I am at Apple this week if you would like to discuss this in person we can do that. 

How aria-activdescendant works is that aria-activedescendant sends a focus change to the assistive technology. This focus does not match DOM focus and perhaps there is some of the confusion. This notifies the AT of the point of regard.

The proposal specifies that the focus ring be drawn consistent with the element type. So, if an element (menu item), does not support operating system conventions for focus ring then, as in my proposal, would use the drawing ring they provided in the drawing path. An example of this might be the Mac system menu whereby when the menu is dropped a focus ring is not drawn for the menu item. 

If you see a flaw in this we could put together a point of regard function. 

As for the caret selection function solving the activedescendant problem. Magnifiers are not accustomed to using it for that purpose. The semantics don&apos;t quite match in that a magnifier will position the magnification point based on:
- they type of element (which they will get)
- the state the element is in
- the type of event being generated (caret/selection/focus)
- the dimensions of the caret/selection.

... but they might be able to make this work for these reasons:
- they have the element and thus the corresponding semantics (role)
- they have the states of the element (selected, checked, etc.)
- the dimensions (as we do provide a rectangle)
- logical caret/selection/focus events are generated from the accessibility API

The two challenges/changes we would need to have are: 

- We will not know if the rectangle being passed is a bounding rectangle or caret/selection position. We would need to add another parameter to the call and change the name. Something like:

setPointofRegard(x, y, w, h, element, type);

type = caretpos/selectionpos/bounds

- Since this is canvas we will need the author to be able to draw different shapes than rectangles. So, we would need to set up the draw path like we do for drawFocusRing().</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48361</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-09 16:06:46 +0000</bug_when>
            <thetext>A major I have with Ian&apos;s latest patch is that it removes notification of the point of regard for managed descendants of the focused element that was provided for in the chair&apos;s decision.

After meeting with Maciej, the general issue is that although the proposed changes to drawFocusRing() would work for both focused elements and activedescendants (managed descendents) for drawing the &quot;point of regard&quot; it would be clearer to separate the functionality of drawing a the active descendant into a separate method. This, for example, would be clearer to Mac developers. 

This issue, combined with the fact that there are issues raised with canDrawCustom that prevents a magnifier from being notified that I have raised to the chairs (http://lists.w3.org/Archives/Public/public-html/2011Apr/0394.html), that if we were to apply the new method now and the changes Ian&apos;s changes to drawFocusRing that it would obfuscate the issues we are having with canDrawCustom. I would like to note that I have added clarity on the points I made to the decision in the change proposal as seen here: http://lists.w3.org/Archives/Public/public-html/2011Apr/0423.html

Therefore, I would ask that:

- Ian apply the deltas described in http://lists.w3.org/Archives/Public/public-html/2011Apr/0657.html to drawFocusRing and setCaretSelectionPos 
- Maciej open a separate bug on drawFocusRing to separate out rendering of the activedescendant point of regard.I will develop a change proposal and review it with Maciej.

I am OK with Ian&apos;s changes to acquiring the blink period.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48374</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-09 20:06:52 +0000</bug_when>
            <thetext>(In reply to comment #45)
&gt; A major I have with Ian&apos;s latest patch is that it removes notification of the
&gt; point of regard for managed descendants of the focused element that was
&gt; provided for in the chair&apos;s decision.

The normative text in my diff in this regard is the same as in your proposed text, and is consistent with the CP details list (which is what the chairs decided on  the chairs have stated they did not read your proposed diff text prior to the decision). I strenuously object to this retroactive attempt at changing the decision.


&gt; This issue, combined with the fact that there are issues raised with
&gt; canDrawCustom that prevents a magnifier from being notified

I think you misunderstand how the API works. I&apos;m happy to try to clarify it, but I really don&apos;t understand how you think the API works so it&apos;s not easy for me to clarify it for you.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48428</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-10 13:48:22 +0000</bug_when>
            <thetext>Let me explain. When you removed the point in the process that allowed a ring to be wrong when it was not a descendant of the focused element things broke. Here is why it is broken:

&lt;div role=&quot;grid&quot; tabindex=&quot;0&quot; aria-activedescendant=&quot;idz&quot;&gt;
...
&lt;div role=&quot;row&quot;&gt;
... &lt;span id=&quot;idz&quot; role=&quot;gridcell&quot;&gt;
...
&lt;/div&gt;
&lt;/div&gt;

In this scenario the container grid managed the visual point of regard for the descendant gridcell. DOM focus is on the grid and the active descendant is the gridcell. When the id of the activedescendant changes a system focus change is sent to the assistive technology which processes the new active descendant. 

This is very similar to desktop applications. Now, an author could also implement a roving tabindex on gridcells in which case what you have would mostly work. Now, in general active children (managed children) do not always use system conventions for drawing a focus (Maciej&apos;s earlier point) and it would be more intuitive to separate out this function.

So, to separate them out we would enter a separate bug against the chairs decision which would remove limit drawFocusRing to only drawing rings on focus elements and create a separate function that is something like drawPointofRegard or drawNonFocusRing that only deals with managed children. I don&apos;t want to start separating them out now, by making your change to eliminate the active descendant on drawFocusRing, as it would obfuscate the error in the next paragraph. 

The other problem we have and which I have asked the chairs to review is the issue with canDrawCustom. If the system does not provide a setting for drawing focus rings in a certain way and the author sets the canCrawCustom flag then drawFocusRing does nothing to allow the author to draw the custom ring. However, doing nothing also means that the magnifier is not notified where the point of regard is and the low vision user will be unable to track their location.

Our change proposal required an author to configure the drawing path and the style before drawFocusRing was called. If the system did not have a feature that drew focus rings for the element type in a certain way then the custom ring would be drawn and the magnifier would be notified. If the OS did have a feature that was applied to draw a focus ring a certain way then the user agent would apply that styling instead. 

Does that help? If we still have a disconnect then sure I would be happy to talk.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48456</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-10 19:55:25 +0000</bug_when>
            <thetext>(In reply to comment #47)
&gt; Let me explain. When you removed the point in the process that allowed a ring
&gt; to be wrong when it was not a descendant of the focused element things broke.

I didn&apos;t remove any such thing, it was never there. Neither your diff&apos;s normatice text nor the CP nor the chair decision do anything that allows you to pass a descendant of the focused element to drawFocusRing().


&gt; Here is why it is broken:
&gt; 
&gt; &lt;div role=&quot;grid&quot; tabindex=&quot;0&quot; aria-activedescendant=&quot;idz&quot;&gt;
&gt; ...
&gt; &lt;div role=&quot;row&quot;&gt;
&gt; ... &lt;span id=&quot;idz&quot; role=&quot;gridcell&quot;&gt;
&gt; ...
&gt; &lt;/div&gt;
&gt; &lt;/div&gt;
&gt; 
&gt; In this scenario the container grid managed the visual point of regard for the
&gt; descendant gridcell.

And this works fine with the spec as written. You draw the path around the grid, then call drawFocusRing() to render the focus ring around the grid (as seen in attachment 983), and then you use setCaretSelectionPos() and give it the x,y,w,h of the rectangle that is the &quot;visual point of regard&quot;. In both cases, the element you pass is the focused grid element.


&gt; So, to separate them out we would enter a separate bug against the chairs
&gt; decision which would remove limit drawFocusRing to only drawing rings on focus
&gt; elements and create a separate function that is something like
&gt; drawPointofRegard or drawNonFocusRing that only deals with managed children.

That&apos;s exactly what this decision did. It provides drawFocusRing() for the focus, and setCaretSelectionPos() for the &quot;visual point of regard&quot;.


&gt; The other problem we have and which I have asked the chairs to review is the
&gt; issue with canDrawCustom. If the system does not provide a setting for drawing
&gt; focus rings in a certain way and the author sets the canCrawCustom flag then
&gt; drawFocusRing does nothing to allow the author to draw the custom ring.

It doesn&apos;t do nothing. It still notifies the accessibility API. That&apos;s the entire point of the API!


&gt; Our change proposal required an author to configure the drawing path and the
&gt; style before drawFocusRing was called. If the system did not have a feature
&gt; that drew focus rings for the element type in a certain way then the custom
&gt; ring would be drawn [...]

Which is a huge problem, because it only handles custom focus rings that can be drawn with a single stroke() call, which is completely inadequate. Custom focus might be handled by just drawing the text in a different font size, by using a variety of colours, by drawing an arrow, any number of different techniques. The whole point of the method is that it lets you draw the focus indicator as you want.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48459</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-05-10 21:43:34 +0000</bug_when>
            <thetext>(In reply to comment #47)
&gt;&gt; Let me explain. When you removed the point in the process that allowed a ring
&gt;&gt; to be wrong when it was not a descendant of the focused element things broke.
&gt;
&gt;I didn&apos;t remove any such thing, it was never there. Neither your diff&apos;s
&gt;normatice text nor the CP nor the chair decision do anything that allows you to
&gt;pass a descendant of the focused element to drawFocusRing().

If you review my change proposal you will see that I allowed a focused element or a descendant of it to pass drawing the focus ring. The chairs did not exclude this from the decision. 

&gt;&gt; Here is why it is broken:
&gt;&gt; 
&gt;&gt; &lt;div role=&quot;grid&quot; tabindex=&quot;0&quot; aria-activedescendant=&quot;idz&quot;&gt;
&gt;&gt; ...
&gt;&gt; &lt;div role=&quot;row&quot;&gt;
&gt;&gt; ... &lt;span id=&quot;idz&quot; role=&quot;gridcell&quot;&gt;
&gt;&gt; ...
&gt;&gt; &lt;/div&gt;
&gt;&gt; &lt;/div&gt;
&gt;&gt; 
&gt;&gt; In this scenario the container grid managed the visual point of regard for the
&gt;&gt; descendant gridcell.

&gt;And this works fine with the spec as written. You draw the path around the
&gt;grid, then call drawFocusRing() to render the focus ring around the grid (as
&gt;seen in attachment 983 [details]), and then you use setCaretSelectionPos() and &gt;give it
&gt;the x,y,w,h of the rectangle that is the &quot;visual point of regard&quot;. In both
&gt;cases, the element you pass is the focused grid element.

OK. So, I discussed that with Maciej and we agreed that overloading something that drew a caret and selection position was a problem for authors. The second problem with this is that you were limiting the drawing of the focus rings to a rectangle was wrong. This was a comment that you and Josh Graham both told me would be a problem and that we should use a drawing path. The author might want a circle for all we know.

I would prefer to create a separate function that allows for this and this would be part of a separate change proposal when we file a bug. This is what I thought Maciej and I agreed to in Cupertino last Friday. 


&gt;&gt; So, to separate them out we would enter a separate bug against the chairs
&gt;&gt; decision which would remove limit drawFocusRing to only drawing rings on focus
&gt;&gt; elements and create a separate function that is something like
&gt;&gt; drawPointofRegard or drawNonFocusRing that only deals with managed children.
&gt;
&gt;That&apos;s exactly what this decision did. It provides drawFocusRing() for the
&gt;focus, and setCaretSelectionPos() for the &quot;visual point of regard&quot;.

Please see my point above. We are actually in violent agreement. The only difference is that we need to do this with a function that does not limit the drawing to a rectangle.

&gt;&gt; The other problem we have and which I have asked the chairs to review is the
&gt;&gt; issue with canDrawCustom. If the system does not provide a setting for drawing
&gt;&gt; focus rings in a certain way and the author sets the canCrawCustom flag then
&gt;&gt; drawFocusRing does nothing to allow the author to draw the custom ring.
&gt;
&gt;It doesn&apos;t do nothing. It still notifies the accessibility API. That&apos;s the
&gt;entire point of the API!

But, that is not accurate. The author could say canDrawCustom, the function returns without drawing the focus ring and the author could create and draw an entirely new path that does not fit the one passed to the magnifier. Is that incorrect?


&gt;&gt; Our change proposal required an author to configure the drawing path and the
&gt;&gt; style before drawFocusRing was called. If the system did not have a feature
&gt;&gt; that drew focus rings for the element type in a certain way then the custom
&gt;&gt; ring would be drawn [...]
&gt;
&gt;Which is a huge problem, because it only handles custom focus rings that can be
&gt;drawn with a single stroke() call, which is completely inadequate. Custom focus
&gt;might be handled by just drawing the text in a different font size, by using a
&gt;variety of colours, by drawing an arrow, any number of different techniques.
&gt;The whole point of the method is that it lets you draw the focus indicator as
&gt;you want.

Having a text be a different size is not a focus &quot;ring&quot;. This sounds like a new requirement. Ian, the problem I want to avoid is dropping out of the function and allowing an author to then draw a custom ring that does not match the one generated in drawFocusRing().</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48460</commentid>
            <who name="Paul Cotton">Paul.Cotton@microsoft.com</who>
            <bug_when>2011-05-10 21:53:20 +0000</bug_when>
            <thetext>The Chairs have issued their final decision on ISSUE-131 and this bug.  

Please see:
http://lists.w3.org/Archives/Public/public-html/2011May/0138.html

/paulc</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48462</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-10 22:30:16 +0000</bug_when>
            <thetext>&gt; If you review my change proposal you will see that I allowed a focused element
&gt; or a descendant of it to pass drawing the focus ring. The chairs did not
&gt; exclude this from the decision. 

You really didn&apos;t. You might think you did, but that isn&apos;t what the diff&apos;s normative text said, and it&apos;s not what the &quot;details&quot; section of the CP said.


&gt; OK. So, I discussed that with Maciej and we agreed that overloading something
&gt; that drew a caret and selection position was a problem for authors.

setCaretSelectionPos() doesn&apos;t draw a caret. All it does, in both your text and mine, is move the magnifier.


&gt; The second
&gt; problem with this is that you were limiting the drawing of the focus rings to a
&gt; rectangle was wrong. This was a comment that you and Josh Graham both told me
&gt; would be a problem and that we should use a drawing path. The author might want
&gt; a circle for all we know.

I have no idea what you&apos;re referring to here. No version of drawFocusRing() has ever been limited to rectangles.


&gt; Please see my point above. We are actually in violent agreement. The only
&gt; difference is that we need to do this with a function that does not limit the
&gt; drawing to a rectangle.

There is nothing limiting anything to a rectangle except the function that moves the magnifier (which is a rectangle purely because that&apos;s what accessibility tools _do_, there&apos;s not much point trying to magnify a circle or whatnot if the magnifiers don&apos;t do that).


&gt; But, that is not accurate. The author could say canDrawCustom, the function
&gt; returns without drawing the focus ring and the author could create and draw an
&gt; entirely new path that does not fit the one passed to the magnifier. Is that
&gt; incorrect?

It would be a pointless use of the function. The whole point of the function is to indicate to the accessibility APIs what area is going to be focused, and allow users who need special focus rings to get their focus rings, while other users can get the author&apos;s preferred look.


&gt; Having a text be a different size is not a focus &quot;ring&quot;. This sounds like a new
&gt; requirement.

Yet it&apos;s how many games (the main use case for canvas) draw focus when the user doesn&apos;t need custom focus rings.


&gt; Ian, the problem I want to avoid is dropping out of the function
&gt; and allowing an author to then draw a custom ring that does not match the one
&gt; generated in drawFocusRing().

That makes no sense. The whole point of the API is to allow that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54248</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-05 15:34:04 +0000</bug_when>
            <thetext>Marking FIXED since chair decision was applied.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>979</attachid>
            <date>2011-04-28 03:25:00 +0000</date>
            <delta_ts>2011-04-28 18:17:39 +0000</delta_ts>
            <desc>attempt at applying decision</desc>
            <filename>temp.html</filename>
            <type>text/plain</type>
            <size>24601</size>
            <attacher>ian@hixie.ch</attacher>
            
              <token>1354054510-83fbafb3d92edc2de90497e96eb8a808</token>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>980</attachid>
            <date>2011-04-28 18:17:00 +0000</date>
            <delta_ts>2011-04-29 20:01:21 +0000</delta_ts>
            <desc>attempt at applying decision</desc>
            <filename>caret.diff</filename>
            <type>text/plain</type>
            <size>22390</size>
            <attacher>ian@hixie.ch</attacher>
            
              <token>1354054510-55fa65508ccb0336109e15a56a97d1ce</token>

          </attachment>
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>981</attachid>
            <date>2011-04-29 20:01:00 +0000</date>
            <delta_ts>2011-05-05 07:23:57 +0000</delta_ts>
            <desc>attempt at applying decision</desc>
            <filename>caret.diff</filename>
            <type>text/plain</type>
            <size>34914</size>
            <attacher>ian@hixie.ch</attacher>
            
              <token>1354054510-b4fbb5c0be69098ed97a66bd7b692ab5</token>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>982</attachid>
            <date>2011-05-05 07:23:00 +0000</date>
            <delta_ts>2011-05-05 07:23:57 +0000</delta_ts>
            <desc>attempt at applying decision</desc>
            <filename>temp</filename>
            <type>text/plain</type>
            <size>37295</size>
            <attacher>ian@hixie.ch</attacher>
            
              <token>1354054510-7a2e49588f0aa1cebe89b71373be950a</token>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>983</attachid>
            <date>2011-05-05 07:38:00 +0000</date>
            <delta_ts>2011-05-05 07:38:10 +0000</delta_ts>
            <desc>Table view - cells selected but not focused</desc>
            <filename>Table view - cell unfocused.png</filename>
            <type>image/png</type>
            <size>14886</size>
            <attacher>mjs@apple.com</attacher>
            
              <token>1354054510-bfb289538747f7ba8d4f69039e7af223</token>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>984</attachid>
            <date>2011-05-05 07:38:00 +0000</date>
            <delta_ts>2011-05-05 07:38:39 +0000</delta_ts>
            <desc>Table view - cell focused for editing</desc>
            <filename>Table view - cell focused.png</filename>
            <type>image/png</type>
            <size>14699</size>
            <attacher>mjs@apple.com</attacher>
            
              <token>1354054510-6842d3eaa8afd3632114c1fde018faca</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>11241</bug_id>
          
          <creation_ts>2010-11-05 20:27:00 +0000</creation_ts>
          <short_desc>Canvas support accessible Focus Ring tracking independent of caret or selection tracking</short_desc>
          <delta_ts>2011-08-04 05:04:09 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas, TrackerIssue</keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>10964</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mjs@apple.com</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-0f84168aadf86997cbcef149dca699d3</token>

      

      

          <long_desc isprivate="0">
            <commentid>42206</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2010-11-05 20:27:15 +0000</bug_when>
            <thetext>Per Issue 74, we need an API that will draw a focus ring based on system conventions and the current focus location in the &lt;canvas&gt; DOM subtree that is independent caret and selection tracking that will support driving a screen magnifier based on the screen location and corresponding &lt;canvas&gt; subtree element semantics.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42907</commentid>
            <who name="Michael Cooper">cooper@w3.org</who>
            <bug_when>2010-11-30 16:41:12 +0000</bug_when>
            <thetext>Bug triage sub-team thinks this bug is providing additional details on 10964, which was raised just at the Last Call cutoff deadline with the understanding that more precise information would be filed later. This bug constitutes part of that information and therefore we think this should be considered a pre-LC bug.

Also note that this bug relates to ISSUE-131 http://www.w3.org/html/wg/tracker/issues/131 and arguably ISSUE-74 http://www.w3.org/html/wg/tracker/issues/74.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44058</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-10 23:39:32 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: no spec change
Rationale: drawFocusRing() seems to provide this, unless I&apos;ve misunderstood comment 0.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44186</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-01-11 19:19:00 +0000</bug_when>
            <thetext>We have a revision to drawFocusRing we would like to submit for review in response to this defect. We are waiting on group consensus from the canvas accessibility sub team.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44188</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-01-11 19:20:38 +0000</bug_when>
            <thetext>I have reopened this so that a change proposal can be submitted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44202</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2011-01-11 19:41:37 +0000</bug_when>
            <thetext>Richard, it seems this bug is already covered by ISSUE-131:

http://www.w3.org/html/wg/tracker/issues/131

More generally, if the editor has given a disposition and someone else wants to provide new information in the future, it&apos;s correct for the bug to stay resolved in the meantime.

For these reasons, I&apos;m making the following changes:

1) Moving bug back to RESOLVED/WORKSFORME
2) Adding TrackerIssue keyword
3) Moving to pre-LC component, since this is covered by a pre-LC issue resulting from older bugs</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52774</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:09 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11245</bug_id>
          
          <creation_ts>2010-11-05 22:54:00 +0000</creation_ts>
          <short_desc>I cannot find an explicit statement about XML compatibility of empty attributes. In former XHTML standards, the syntax used to be &lt;input checked=&quot;checked&quot;.../&gt; Now with the implied value &quot;&quot; of empty attributes, the syntax is &lt;input checked=&quot;&quot;/&gt; as I under</short_desc>
          <delta_ts>2011-08-04 05:04:12 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-67c23b58ae1bb75f1602976892ad2d16</token>

      

      

          <long_desc isprivate="0">
            <commentid>42212</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-05 22:54:02 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
I cannot find an explicit statement about XML compatibility of empty
attributes. In former XHTML standards, the syntax used to be
&lt;input checked=&quot;checked&quot;.../&gt;
Now with the implied value &quot;&quot; of empty attributes, the syntax is
&lt;input checked=&quot;&quot;/&gt;
as I understand it. This should be stated explicitly in the appropriate
sections to avoid confusion.
Please let me know whether my interpretation is correct: aquapuma@msn.com
Thank you very much for your work!

Posted from: 213.142.183.127</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42215</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-11-06 15:38:55 +0000</bug_when>
            <thetext>http://www.whatwg.org/html/#boolean-attributes

WFM</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52786</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:12 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11263</bug_id>
          
          <creation_ts>2010-11-08 16:04:00 +0000</creation_ts>
          <short_desc>Most browsers seem to clear to transparent -white- by default, since this results in much nicer blended edges in antialiased-graphics.</short_desc>
          <delta_ts>2011-08-04 05:03:37 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#simple-shapes-(rectangles)</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>excors@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-d25170c03b8fc75d7d813bde1a79c5e6</token>

      

      

          <long_desc isprivate="0">
            <commentid>42277</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-08 16:04:54 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#simple-shapes-(rectangles)

Comment:
Most browsers seem to clear to transparent -white- by default, since this
results in much nicer blended edges in antialiased-graphics. 

Posted from: 82.170.157.116</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43615</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-29 08:28:21 +0000</bug_when>
            <thetext>Do you have a test case demonstrating this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44537</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-21 02:11:21 +0000</bug_when>
            <thetext>Philip`: Can you comment on this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44538</commentid>
            <who name="Philip Taylor">excors@gmail.com</who>
            <bug_when>2011-01-21 02:31:25 +0000</bug_when>
            <thetext>Most browsers use premultiplied alpha so transparent white and transparent black both get encoded as (0,0,0,0) which gets decoded into rgba(0,0,0,0) - they can never distinctly represent transparent white. It shouldn&apos;t affect correctly-implemented antialiasing either way, anyway. I guess it&apos;s most likely that the original reporter was confused.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45361</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:31:27 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Short a testcase demonstrating the issue, I&apos;m at a loss as to how to evaluate this proposal, and my go-to guy for &lt;canvas&gt; was unable to divine the reporter&apos;s intent either.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52684</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:37 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11275</bug_id>
          
          <creation_ts>2010-11-09 16:49:00 +0000</creation_ts>
          <short_desc>ikjljjpñpñopñiñklñklñklñ djdjfjd djfd kf e elr e kdf dsfj df iasjd asdlk wejied kjsd ijkjqwe ijwq sad iasjd oasjdoasjd asodjqowd</short_desc>
          <delta_ts>2011-08-04 05:03:51 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-11bbfb04a3ce1aaddb1598b347d61014</token>

      

      

          <long_desc isprivate="0">
            <commentid>42320</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-09 16:49:09 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
ikjljjpñpñopñiñklñklñklñ djdjfjd djfd kf e elr e kdf dsfj df iasjd
asdlk wejied kjsd ijkjqwe ijwq
sad iasjd oasjdoasjd asodjqowd

Posted from: 152.74.121.178</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52723</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:51 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11281</bug_id>
          
          <creation_ts>2010-11-10 06:53:00 +0000</creation_ts>
          <short_desc>It work very well. But it have any problem about SVN .  If you have some help please suggested me. Thank you very much.</short_desc>
          <delta_ts>2011-08-04 05:03:59 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>por5842@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-3923fc84add1d2566cfcc734b586ea3e</token>

      

      

          <long_desc isprivate="0">
            <commentid>42336</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-10 06:53:07 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
It work very well. But it have any problem about SVN .	If you have some help
please suggested me. Thank you very much.

Posted from: 1.47.159.92</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52745</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:59 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11291</bug_id>
          
          <creation_ts>2010-11-11 06:34:00 +0000</creation_ts>
          <short_desc>fuck you bitch suck my cock</short_desc>
          <delta_ts>2011-08-04 05:03:28 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-74d95e79a91830925aec14e9c73afcfa</token>

      

      

          <long_desc isprivate="0">
            <commentid>42411</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-11 06:34:16 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
fuck you bitch suck my cock

Posted from: 88.204.74.110</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42413</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-11-11 07:29:07 +0000</bug_when>
            <thetext>WONTFIX</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52659</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:28 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11308</bug_id>
          
          <creation_ts>2010-11-12 09:39:00 +0000</creation_ts>
          <short_desc>$(function() {     $(&apos;.rollover&apos;).hover(function() {         var currentImg = $(this).attr(&apos;src&apos;);         $(this).attr(&apos;src&apos;, $(this).attr(&apos;hover&apos;));         $(this).attr(&apos;hover&apos;, currentImg);     }, function() {         var currentImg = $(this).attr(&apos;sr</short_desc>
          <delta_ts>2011-08-04 05:04:14 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-1bfb63a2b4a390c75d46a711a0207e71</token>

      

      

          <long_desc isprivate="0">
            <commentid>42484</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-12 09:39:13 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
$(function() {
    $(&apos;.rollover&apos;).hover(function() {
	var currentImg = $(this).attr(&apos;src&apos;);
	$(this).attr(&apos;src&apos;, $(this).attr(&apos;hover&apos;));
	$(this).attr(&apos;hover&apos;, currentImg);
    }, function() {
	var currentImg = $(this).attr(&apos;src&apos;);
	$(this).attr(&apos;src&apos;, $(this).attr(&apos;hover&apos;));
	$(this).attr(&apos;hover&apos;, currentImg);
    });
});


Posted from: 122.116.92.103</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52792</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:14 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11316</bug_id>
          
          <creation_ts>2010-11-14 05:46:00 +0000</creation_ts>
          <short_desc>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;/head&gt; &lt;body leftmargin=&quot;0&quot; margin=&quot;0&quot; topmargin=&quot;0&quot; marginheight=&quot;0&quot; offset=&quot;0&quot; bgcolor=&apos;#ffffff&apos; &gt; &lt;table width=&quot;100%&quot; cellpadding=&quot;10&quot; cellspacing=&quot;0&quot; bgcolor=&apos;#ffffff&apos; &gt; &lt;tr&gt; &lt;td valign=&quot;top&quot; align=&quot;</short_desc>
          <delta_ts>2011-08-04 05:04:13 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-8fe396a5d898a14d5c64e51c2dbc7d66</token>

      

      

          <long_desc isprivate="0">
            <commentid>42516</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-14 05:46:23 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;

&lt;/head&gt;

&lt;body leftmargin=&quot;0&quot; margin=&quot;0&quot; topmargin=&quot;0&quot; marginheight=&quot;0&quot; offset=&quot;0&quot;
bgcolor=&apos;#ffffff&apos; &gt;

&lt;table width=&quot;100%&quot; cellpadding=&quot;10&quot; cellspacing=&quot;0&quot; bgcolor=&apos;#ffffff&apos; &gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; align=&quot;center&quot;&gt;

&lt;table width=&quot;612&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; bgcolor=&apos;#C6D92C&apos;
style=&quot;padding-bottom:20px;&quot;&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot; valign=&quot;middle&quot; style=&quot;border-bottom:30px solid #C6D92C;
border-top:30px solid #C6D92C; padding-left: 26px;&quot;&gt;&lt;a
href=&quot;http://www.artasiafair.com&quot;&gt;&lt;img
src=&quot;https://origin.ih.constantcontact.com/fs095/1102808931010/img/23.png&quot;
border=&quot;0&quot; alt=&quot;Art Asia Fair Logo&quot; titel=&quot;Art Asia Fair Logo&quot; width=&quot;560&quot;
height=&quot;87&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;

&lt;table width=&quot;560&quot; align=&quot;center&quot; bgcolor=&quot;#444446&quot;&gt;
&lt;tr&gt;
&lt;td style = &quot;height: 30px; font-family: Impact,&apos;Arial Black&apos;,sans-serif;
font-size:24px; color:#ffffff; padding:0px 20px; text-align:center&quot;&gt;Vernissage
November 30&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;table width = &quot;560&quot; align=&quot;center&quot; bgcolor=&apos;#ffffff&apos;&gt;

&lt;tr&gt;&lt;td&gt;

&lt;table width=&quot;514&quot; align=&quot;center&quot; style=&quot;padding-top:10px;&quot;&gt;
&lt;tr&gt;

&lt;td valign=&quot;top&quot; style =&quot;width: 330px; text-align:left; font-size:10px;
font-family: &apos;Trebuchet MS&apos;, Arial, Helvetica, sans-serif; color:#444446;&quot;&gt;
&lt;h1 style=&quot;margin:0px; font-weight:bold; font-size: 17px; line-height:
105%;&quot;&gt;DIALOGUE SPACE&lt;br /&gt;CORDIALLY INVITES YOU TO&lt;/h1&gt;
&lt;h1 style=&quot;margin: 0px; font-family: Impact, &apos;Arial Black&apos;, sans-serif; color:
#C6D92C; font-size: 22px; font-weight: 400; line-height: 105%;&quot;&gt;Art Asia Miami
2010&lt;br /&gt;December 1-5 2010&lt;/h1&gt;
&lt;p style=&quot;margin:0px; font-size: 15px;&quot;&gt;2901 North Miami Avenue&lt;/p&gt;
&lt;p style=&quot;margin: 0px; font-size: 12px;&quot;&gt;&lt;a style=&quot;text-decoration: none;
color: #444446;&quot; href=&quot;http://www.artasiafair.com&quot;&gt;www.artasiafair.com&lt;/a&gt;&lt;/p&gt;

&lt;p style=&quot;margin: 0px; font-size: 10px;&quot;&gt;Entrance is located on the Midtown
Boulevard&lt;/p&gt;
&lt;h1 style=&quot;margin-top:8px; margin-right: 0px; margin-left: 0px; margin-bottom:
0px; font-weight:bold; font-size: 17px; line-height: 105%;&quot;&gt;DIALOGUE SPACE&lt;br
/&gt;BOOTH C14&lt;/h1&gt;
&lt;p style=&quot;margin: 0; font-size: 12px;&quot;&gt;For further information, inquiries,
or&lt;br /&gt;to RSVP please contact Dialogue Space: &lt;a style=&quot;text-decoration:
none; color: #444446;&quot; href=&quot;mailto:
dialoguespace@gmail.com&quot;&gt;dialoguespace@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h1 style=&quot;margin-top:8px; margin-right: 0px; margin-left: 0px; margin-bottom:
0px; font-weight:bold; font-size: 17px; line-height: 105%;&quot;&gt;VERNISSAGE&lt;br
/&gt;NOVEMBER 30, 2010&lt;/h1&gt;
&lt;table cellspacing =&quot;0&quot; cellpadding =&quot;0&quot; border =&quot;0&quot; style=&quot;margin: 0;
font-size: 12px; color: #444446;&quot;&gt;&lt;tr&gt;&lt;td style=&quot;width: 100px; text-align:
left; padding: 0;&quot;&gt;Tuesday&lt;/td&gt;&lt;td style=&quot;width: 230px; text-align: right;
padding: 0;&quot;&gt;3 pm - 9 pm&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h1 style=&quot;margin-top:4px; margin-right: 0px; margin-left: 0px; margin-bottom:
0px; font-weight:bold; font-size: 17px;&quot;&gt;DECEMBER 1 - 5, 2010&lt;/h1&gt;
&lt;table cellspacing =&quot;0&quot; cellpadding =&quot;0&quot; border =&quot;0&quot; style=&quot;margin: 0;
font-size: 12px; color: #444446;&quot;&gt;&lt;tr&gt;&lt;td style=&quot;width: 200px; text-align:
left; padding: 0;&quot;&gt;Wednesday&lt;/td&gt;&lt;td style=&quot;width: 130px; text-align: right;
padding: 0;&quot;&gt;11 am - 6 pm&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 200px; text-align: left; padding: 0;&quot;&gt;Thursday -
Saturday&lt;/td&gt;&lt;td style=&quot;width: 130px; text-align: right; padding: 0;&quot;&gt;11 am -
7 pm&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 200px; text-align: left; padding: 0;&quot;&gt;Sunday&lt;/td&gt;&lt;td
style=&quot;width: 130px; text-align: right; padding: 0;&quot;&gt;11 am - 6
pm&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;/td&gt;
&lt;td valign=&quot;top&quot;  style = &quot;width: 250px; text-align: right; &quot;&gt;&lt;img
src=&quot;https://origin.ih.constantcontact.com/fs095/1102808931010/img/22.jpg&quot;
alt=&quot;Dialogue Space&quot; width=&quot;247&quot; height=&quot;320&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;
&lt;table width=&quot;514&quot; align=&quot;center&quot;&gt;&lt;tr&gt;&lt;td style = &quot;font-size:12px;
font-family:&apos;Trebuchet MS&apos;, Arial, Helvetica, sans-serif; color:#444446;
line-height: 120%;&quot; &gt;
&lt;p&gt;To purchase tickets in advance please visit: &lt;a style=&quot;text-decoration:
none; color: #444446;&quot;
href=&quot;http://www.artasiafair.com/ticketing&quot;&gt;www.artasiafair.com/ticketing&lt;/a&gt;.
Tickets will also be available for purchase at the fair.&lt;/p&gt;

&lt;p&gt;The premier Asian contemporary art fair in America, ART ASIA is a platform
for galleries from 
around the world to showcase the best of both established and emerging Asian
contemporary 
artists.&lt;/p&gt;

&lt;p&gt;Over the past several years, the fair has positioned itself as a forum for
international galleries, 
curators, artists, collectors and educators to exchange ideas and enable new
audiences from the 
international art scene to see innovate and exciting works by contemporary
Asian artists.&lt;/p&gt;

&lt;p&gt;ART ASIA was established in 2008 and has hosted fairs in Miami and Basel.
In only  its third edition, 
ART ASIA has welcomed more than 30,000 visitors, including top collectors,
curators, critics, and 
artists.&lt;/p&gt;

&lt;p&gt;For press inquiries please contact Vicki Paloympis at &lt;a
style=&quot;text-decoration: none; color: #444446;&quot;
href=&quot;mailto:vpaloympis@artasiafair.com&quot;&gt;vpaloympis@artasiafair.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For real-time updates on ART ASIA Miami 2010 please visit &lt;a
style=&quot;text-decoration: none; color: #444446;&quot;
href=&quot;http://www.twitter.com/artasia&quot;&gt;www.twitter.com/artasia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;forward style=&quot;text-decoration:none; color: #444446;&quot;&gt;Forward this
email&lt;/forward&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;&lt;table width = &quot;530&quot; align=&quot;center&quot;&gt;&lt;tr&gt;&lt;td style = &quot;border-top: solid
#dedfe0 2px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;

&lt;table width=&quot;560&quot; align=&quot;center&quot; bgcolor=&quot;#444446&quot;&gt;
&lt;tr&gt;
&lt;td style = &quot;height: 20px; font-family:Arial, Helvetica, sans-serif;
font-size:12px; font-weight:bold;color:#fff; padding:0px 20px;
text-align:center&quot;&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;





&lt;/body&gt;
&lt;/html&gt;

Posted from: 218.241.231.98</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52788</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:13 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11318</bug_id>
          
          <creation_ts>2010-11-14 22:29:00 +0000</creation_ts>
          <short_desc>Get rid of the obnoxious &quot;This is a word in progress&quot;</short_desc>
          <delta_ts>2011-08-04 05:03:50 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>11324</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-42f149a3cc77ceb3a9c45adc57fa0837</token>

      

      

          <long_desc isprivate="0">
            <commentid>42531</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-14 22:29:48 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
Get rid of the obnoxious &quot;This is a word in progress&quot;

Posted from: 216.87.95.81</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42690</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-11-22 11:30:36 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 11324 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52722</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:50 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11332</bug_id>
          
          <creation_ts>2010-11-17 12:09:00 +0000</creation_ts>
          <short_desc>The term &quot;streaming user agent&quot; is used in several places throughout the spec but its meaning is not defined and not immediately clear. Would be good to define it.</short_desc>
          <delta_ts>2011-08-04 05:03:44 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-f183554edf1f3f74b72f4bafc80e790f</token>

      

      

          <long_desc isprivate="0">
            <commentid>42584</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-17 12:09:51 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
The term &quot;streaming user agent&quot; is used in several places throughout the spec
but its meaning is not defined and not immediately clear. Would be good to
define it.

Posted from: 88.131.66.80</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43663</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-30 06:00:28 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: see diff given below
Rationale: It&apos;s used twice, and only in one place. But I&apos;ve added a parenthetical there to clarify it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43664</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-30 06:01:06 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r5727.
Check-in comment: clarify &apos;streaming&apos;
http://html5.org/tools/web-apps-tracker?from=5726&amp;to=5727</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52703</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:44 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11333</bug_id>
          
          <creation_ts>2010-11-17 16:18:00 +0000</creation_ts>
          <short_desc>The usage of the title tag is outdated. Please update with a new name for the tag.</short_desc>
          <delta_ts>2011-08-04 05:04:11 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-17431d0ff7114a03500d7ce52e8ad7a6</token>

      

      

          <long_desc isprivate="0">
            <commentid>42587</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-17 16:18:21 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
The usage of the title tag is outdated. Please update with a new name for the
tag.

Posted from: 81.6.225.20</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52781</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:11 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11339</bug_id>
          
          <creation_ts>2010-11-18 12:19:00 +0000</creation_ts>
          <short_desc>hola queria decir que chupas poyas a raudales</short_desc>
          <delta_ts>2011-08-04 05:03:39 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-8c84ed3441bc20f33bdbd9191f5bdbf3</token>

      

      

          <long_desc isprivate="0">
            <commentid>42610</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-18 12:19:53 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
hola queria decir que chupas poyas a raudales

Posted from: 80.26.15.175</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52690</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:39 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11342</bug_id>
          
          <creation_ts>2010-11-18 22:57:00 +0000</creation_ts>
          <short_desc>TextMetrics should include distance from textBaseline to each of the baselines in the text</short_desc>
          <delta_ts>2012-11-27 17:46:34 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>REOPENED</bug_status>
          <resolution></resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas RFE</status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas, TrackerIssue</keywords>
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>7798</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="This bug has no owner yet - up for the taking">dave.null@w3.org</assigned_to>
          <cc>cabanier@adobe.com</cc>
    
    <cc>chuck@jumis.com</cc>
    
    <cc>cooper@w3.org</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>oliver@obeattie.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>rubys@intertwingly.net</cc>
    
    <cc>tink@tink.co.uk</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-486e9f0a28c4c89883e33be507f20db1</token>

      

      

          <long_desc isprivate="0">
            <commentid>42622</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2010-11-18 22:57:27 +0000</bug_when>
            <thetext>In order to properly replace text to support rich text editing it is important that we be able to ascertain the baseline position of text in order to perform proper text placement. 

Consequently it is essential that &apos;baseline&apos; be added to the TextMetrics object
returned from .measureText.

We recommend returning the float y-offset the baseline will be set at from the origin based on the current value of textBaseline, font and the content
of the measureText DOMString argument.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43682</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2010-12-31 04:07:38 +0000</bug_when>
            <thetext>Which baseline? And why do you need this through the metrics mechanism rather than the rendering mechanism (where it is already available)?

If you could provide a simple page with a canvas script showing the problem that would be ideal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44643</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-24 04:29:52 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: See comment 1.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44972</commentid>
            <who name="Michael Cooper">cooper@w3.org</who>
            <bug_when>2011-02-01 16:40:20 +0000</bug_when>
            <thetext>Bug triage sub-team assigning to Rich Schwerdtfeger to provide the requested info.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45044</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-03 01:54:07 +0000</bug_when>
            <thetext>One can not surround inline text with a focus ring as is done with a focusable [span], using Canvas, as the baseline information is not shared, only the width. This defect inhibits text decorations, highlighting, and drawFocusRing. The baseline value is valuable for aligning text of different font sizes or styles, as well as annotating text with indicators. Such flexibility is generally why Canvas is used in the first place. As for focus rings, that is part of the work here, and baseline would allow Canvas the same accuracy of drawFocusRing as span currently does.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45047</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-03 05:13:43 +0000</bug_when>
            <thetext>That doesn&apos;t answer the question in comment 1. Which baseline? Could you provide a sample canvas script showing the problem?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45050</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-03 05:23:35 +0000</bug_when>
            <thetext>(In reply to comment #5)
&gt; That doesn&apos;t answer the question in comment 1. Which baseline? Could you
&gt; provide a sample canvas script showing the problem?

My thinking was just to provide the baseline offset based on the current setting of textBaseline. Usually, I&apos;d grab the descent, based on alphabetic and bottom (or top) metrics.

Here&apos;s an example script -- very hackish, but it shows an adjusted baseline being used with the outline made via strokeRect. (I used CSS hacks to pull the data):

http://dl.dropbox.com/u/17337752/text-legibility-script.html

Were baseline information available, based on the setting of textBaseline, an various baseline metrics could be pulled by switching textBaseline then running measureText for each value (top, bottom, etc).

An image similar to the following could be generated; though that&apos;s not a primary use case.
http://www.whatwg.org/specs/web-apps/current-work/images/baselines.png</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45065</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-03 18:31:10 +0000</bug_when>
            <thetext>Aah, so basically you need the distance from the current textBaseline to each of the possible baselines, for a particular span of text.

Hmm.

That&apos;s actually somewhat non-trivial to define, since a single string can have multiple distances for each baseline (that&apos;s why we need to provide a way to align to each baseline to start with).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45111</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-03 22:20:10 +0000</bug_when>
            <thetext>(In reply to comment #7)
&gt; Aah, so basically you need the distance from the current textBaseline to each
&gt; of the possible baselines, for a particular span of text.
&gt; Hmm.
&gt; That&apos;s actually somewhat non-trivial to define, since a single string can have
&gt; multiple distances for each baseline (that&apos;s why we need to provide a way to
&gt; align to each baseline to start with).

You&apos;ve got it.

When you say &quot;non-trivial to define&quot;, are you referring to defining it in the specs, or are you talking about actual implementation?

As for the specs, I think it&apos;s self-contained. It&apos;d return the calculated baseline for the content passed through measureText given the current textBaseline.

For implementation, you&apos;re absolutely correct: a single string may rely upon multiple fonts; especially a multilingual string. I&apos;m all-but-certain, though, that those cases are handled by underlying font layout engines.

If the font engine is inaccurate/strange, that&apos;s perfectly fine... we don&apos;t need to define what &quot;bottom&quot; means in the spec, merely that the measureText baseline attribute returns whatever the font engine has calculated.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45367</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:37:04 +0000</bug_when>
            <thetext>I meant both for specs and implementations. It&apos;s more or less the same problem either way.

EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: Since this is a new feature request, I&apos;m marking this LATER for the time being. This, as well as a number of other TextMetric issues such as the proposal in bug 7798, are likely to be the first things we add to the canvas API when we next add features to the canvas API. In the meantime, we really need to wait for implementations to catch up with what&apos;s been specified so far.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45489</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-02-14 19:11:30 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; I meant both for specs and implementations. It&apos;s more or less the same problem
&gt; either way.
&gt; 

Would two implementations fulfill requirements to have this added to the spec? It&apos;s a very simple issue in implementations, as the code is already available from textBaseline and/or fillText setters and methods.

I don&apos;t see the difficulty in writing wording for this, for the spec. I&apos;ll write up patches and a spec wording submitted in the near future, and re-open this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47486</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-04-15 19:25:30 +0000</bug_when>
            <thetext>See bug report 11239 for a reference to source code to make this change on April 13 by Charles Pritchard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52712</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:46 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62631</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-12 23:30:43 +0000</bug_when>
            <thetext>Ian, I was asked by the accessibility task force to make this a tracker request.

This pertains to Issue 131. Here is a link the request to the chairs and the change proposal:

http://lists.w3.org/Archives/Public/public-html-a11y/2012Jan/0087.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62676</commentid>
            <who name="Michael Cooper">cooper@w3.org</who>
            <bug_when>2012-01-13 19:05:41 +0000</bug_when>
            <thetext>Proposed wording for tracker issue:

canvas-text-baseline: Modify existing Canvas 2D API to expose text baseline and facilitate drawing of focus rings 

There is an existing change proposal for this: http://www.w3.org/html/wg/wiki/ChangeProposals/FocusRingTextBaseline</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62790</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-01-16 23:00:24 +0000</bug_when>
            <thetext>Added to http://www.w3.org/html/wg/tracker/issues/131</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64710</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 00:07:57 +0000</bug_when>
            <thetext>Reclosing since this is marked TrackerIssue. I&apos;m tracking this as part of bug 7798.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>78365</commentid>
            <who name="Léonie Watson">tink@tink.co.uk</who>
            <bug_when>2012-11-15 17:41:32 +0000</bug_when>
            <thetext>Comment via Rich Schwerdtfeger:

This does not appear to have been addressed by the chairs. We have focus rings functions but it would be valuable to have this addition to text metrics in order to compute the path for drawing the focus rings. At one point they had asked for additional information and it was provided.

http://www.w3.org/html/wg/wiki/ChangeProposals/FocusRingTextBaseline</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>78930</commentid>
            <who name="rcabanie">cabanier@adobe.com</who>
            <bug_when>2012-11-27 17:46:34 +0000</bug_when>
            <thetext>(In reply to comment #17)
&gt; Comment via Rich Schwerdtfeger:
&gt; 
&gt; This does not appear to have been addressed by the chairs. We have focus
&gt; rings functions but it would be valuable to have this addition to text
&gt; metrics in order to compute the path for drawing the focus rings. At one
&gt; point they had asked for additional information and it was provided.
&gt; 
&gt; http://www.w3.org/html/wg/wiki/ChangeProposals/FocusRingTextBaseline

The current textmetrics API returns a set of baselines.
Does this API not fulfill your use=case?</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11374</bug_id>
          
          <creation_ts>2010-11-22 12:02:00 +0000</creation_ts>
          <short_desc>i want to do it web..can u teach me..</short_desc>
          <delta_ts>2011-08-04 05:03:50 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-cc0015b0f5fda09e56ffd0b1f922c0f1</token>

      

      

          <long_desc isprivate="0">
            <commentid>42693</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-22 12:02:55 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
i want to do it web..can u teach me..

Posted from: 60.52.64.92</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52719</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:50 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11377</bug_id>
          
          <creation_ts>2010-11-22 16:28:00 +0000</creation_ts>
          <short_desc>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; &lt;!-- vim:ts=2: --&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Angelo Arrifano :: Home Page&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;global.css&quot;</short_desc>
          <delta_ts>2011-08-04 05:03:56 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-7fc625f15fa7eebb7e6d1cf1f5d152fc</token>

      

      

          <long_desc isprivate="0">
            <commentid>42698</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-22 16:28:03 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;!-- vim:ts=2:
--&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Angelo Arrifano :: Home Page&lt;/title&gt;
	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;global.css&quot; /&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div id=&quot;header&quot;&gt;
	&lt;img src=&quot;images/header.png&quot; /&gt;
&lt;/div&gt;

&lt;div id=&quot;menubar&quot;&gt;&lt;div id=&quot;menu&quot;&gt;
	&lt;a href=&quot;index.php&quot;&gt;
		&lt;div&gt;&lt;img src=&quot;images/menu-home.png&quot; /&gt;&lt;br /&gt;Home&lt;/div&gt;
	&lt;/a&gt;
	&lt;a href=&quot;index.php?t=about&quot;&gt;
		&lt;div&gt;&lt;img src=&quot;images/menu-about.png&quot; /&gt;&lt;br /&gt;About Me&lt;/div&gt;
	&lt;/a&gt;
	&lt;a href=&quot;index.php?t=projs&quot;&gt;

		&lt;div&gt;&lt;img src=&quot;images/menu-projs.png&quot; /&gt;&lt;br /&gt;Projects&lt;/div&gt;
	&lt;/a&gt;
	&lt;a href=&quot;index.php?t=media&quot;&gt;
		&lt;div&gt;&lt;img src=&quot;images/menu-media.png&quot; /&gt;&lt;br /&gt;Media&lt;/div&gt;
	&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div id=&quot;body&quot;&gt;
&lt;/div&gt;

&lt;div id=&quot;footer&quot;&gt;
Homepage of &lt;a href=&quot;mailto:miknix@gmail.com&quot;&gt;Angelo M. Arrifano&lt;/a&gt; ::
Copyright (C) 2010 Angelo Arrifano :: Last Updated on 22 Nov. 2010
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;


Posted from: 188.80.122.111</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52737</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:56 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11397</bug_id>
          
          <creation_ts>2010-11-24 17:08:00 +0000</creation_ts>
          <short_desc>Additional compositing operations such as &apos;max-alpha&apos; and &apos;min-alpha&apos; would make it much easier to make soft brush and eraser tools in painting applications.</short_desc>
          <delta_ts>2012-02-29 22:41:13 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#compositing</bug_file_loc>
          <status_whiteboard>canvas RFE</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>dbaron@dbaron.org</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>richard@sycora.com</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-894e82f320e45fc28852d384640b0d3f</token>

      

      

          <long_desc isprivate="0">
            <commentid>42750</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-24 17:08:28 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#compositing

Comment:
Additional compositing operations such as &apos;max-alpha&apos; and &apos;min-alpha&apos; would
make it much easier to make soft brush and eraser tools in painting
applications.

Posted from: 87.114.199.5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42755</commentid>
            <who name="L. David Baron (Mozilla)">dbaron@dbaron.org</who>
            <bug_when>2010-11-24 20:32:26 +0000</bug_when>
            <thetext>Do you have documentation for (a) how they work and (b) whether major 2D graphics systems support them?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42780</commentid>
            <who name="Richard Poole">richard@sycora.com</who>
            <bug_when>2010-11-25 16:19:54 +0000</bug_when>
            <thetext>I couldn&apos;t find any graphics library support for &apos;max-alpha&apos; or &apos;min-alpha&apos; unfortunately, but Cairo and Qt do support a broader set of compositing modes:

- http://cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
- http://doc.qt.nokia.com/4.7/qpainter.html#CompositionMode-enum</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44034</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-10 22:12:09 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: This seems reasonable, if we could get definitions of the new composition operators, but we should probably wait until we have the existing composition operators defined and implemented consistently before adding more!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52669</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:31 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64760</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 20:43:55 +0000</bug_when>
            <thetext>To add this, we need a precise description of what the operators are.

See also bug 9307.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64779</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:41:13 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: see comment 5</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11405</bug_id>
          
          <creation_ts>2010-11-25 12:38:00 +0000</creation_ts>
          <short_desc>Why You Guys Taking So Much Time for HTML5....</short_desc>
          <delta_ts>2011-08-04 05:04:02 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>julian.reschke@gmx.de</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-5148deec4813f1b301d0f20ca2b806fe</token>

      

      

          <long_desc isprivate="0">
            <commentid>42773</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-11-25 12:38:03 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
Why You Guys Taking So Much Time for HTML5.... 

Posted from: 202.164.34.114</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52755</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:02 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11449</bug_id>
          
          <creation_ts>2010-12-01 13:57:00 +0000</creation_ts>
          <short_desc>The current specification and implementation of &lt;input type=&quot;date&quot;&gt; using yyyy-mm-dd format will be unacceptable to many of our corporate customers. Also, only allowing times in &lt;input type=&quot;date&quot;&gt; to be in 24 hour clock will cause serious delays in our b</short_desc>
          <delta_ts>2011-08-04 05:03:21 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>dbaron@dbaron.org</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>kornel@geekhood.net</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mounir@lamouri.fr</cc>
    
    <cc>philipj@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>shelleyp@burningbird.net</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-2abf5aeff6d00f468aa2e8d0923e7b0d</token>

      

      

          <long_desc isprivate="0">
            <commentid>42957</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-01 13:57:45 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
The current specification and implementation of &lt;input type=&quot;date&quot;&gt; using
yyyy-mm-dd format will be unacceptable to many of our corporate customers.

Also, only allowing times in &lt;input type=&quot;date&quot;&gt; to be in 24 hour clock will
cause serious delays in our being able to implement HTML 5.  On many occasions
we have had Large USA Corporates and Government departments insisting on the
use of 12 hour clock due to the lack of penetration of 24 hour clock into the
USA.

Both date and time inputs should have the option to use a variety of
international formats (not just the browser locale) otherwise, many developers
will have no alternative but to continue using an &lt;input type=&apos;text&apos;&gt;, a
javascript based calendar popup and javascript-based validation.

Posted from: 78.33.209.10</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42958</commentid>
            <who name="Philip Jägenstedt">philipj@opera.com</who>
            <bug_when>2010-12-01 14:47:20 +0000</bug_when>
            <thetext>Surely this is a presentation issue which should be addressed using CSS? Maybe a date-format property which takes a formatting string of some kind?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42960</commentid>
            <who name="Kornel Lesinski">kornel@geekhood.net</who>
            <bug_when>2010-12-01 16:25:17 +0000</bug_when>
            <thetext>It&apos;s not the first time I see someone confused about format of date UI and internal date representation.

I think the spec needs to have big flashing banner that says &quot;This is format submitted to the server. Browsers are not required to *display* it like that, and can use localized date format in the UI.&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42961</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-12-01 18:26:33 +0000</bug_when>
            <thetext>As Kornel says, the specified format is the format that the *data submitted to the server* must be in.  It has absolutely nothing to do with the actual display of the date or time; browsers are free to display them to the user in whatever format they wish.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42963</commentid>
            <who name="Shelley Powers">shelleyp@burningbird.net</who>
            <bug_when>2010-12-01 18:50:08 +0000</bug_when>
            <thetext>The original request was for the web developers to be able to determine the date and time format, not have it be controlled by the browser.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42964</commentid>
            <who name="Kornel Lesinski">kornel@geekhood.net</who>
            <bug_when>2010-12-01 19:16:39 +0000</bug_when>
            <thetext>(In reply to comment #4)

Sorry if I misunderstood.

In that case, why is it important to override implementations?

I&apos;m assuming that browsers will read preferred date format from system&apos;s locale, so Large USA Corporates and Government departments would get date displayed in mm/dd/yyyy format and 12-hour time automatically.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42966</commentid>
            <who name="Shelley Powers">shelleyp@burningbird.net</who>
            <bug_when>2010-12-01 20:04:47 +0000</bug_when>
            <thetext>(In reply to comment #5)
&gt; (In reply to comment #4)
&gt; 
&gt; Sorry if I misunderstood.
&gt; 
&gt; In that case, why is it important to override implementations?
&gt; 
&gt; I&apos;m assuming that browsers will read preferred date format from system&apos;s
&gt; locale, so Large USA Corporates and Government departments would get date
&gt; displayed in mm/dd/yyyy format and 12-hour time automatically.

I&apos;m not the original filer. Unfortunately, it&apos;s one of those from the inline comments, which means the person is now disconnected from what is happening with their request. I hope they follow up on the discussion.

I believe, though, that what you&apos;re saying is not what the original filer was asking. They were asking for the ability to specify something other than have the browser default to system locale. At least, that&apos;s how I read:

&quot;Both date and time inputs should have the option to use a variety of
international formats (not just the browser locale)...&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42969</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2010-12-01 20:14:02 +0000</bug_when>
            <thetext>Shelley is right -- I think the contributor was confused about display vs. internal formats, but he&apos;s still asking for the ability to choose specific output formats other than the browser locale.  This is probably a good feature to have, but as Philip says in comment 1, it&apos;s probably a CSS thing.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42972</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-12-01 21:36:06 +0000</bug_when>
            <thetext>(In reply to comment #7)
&gt; Shelley is right -- I think the contributor was confused about display vs.
&gt; internal formats, but he&apos;s still asking for the ability to choose specific
&gt; output formats other than the browser locale.  This is probably a good feature
&gt; to have, but as Philip says in comment 1, it&apos;s probably a CSS thing.

I don&apos;t believe that can be reliably inferred from the OP.  The OP had the standard confusion between displayed value and submitted value.  The request for more control over the displayed value is sufficiently vague that it can easily be interpreted to be satisfied by the existing spec text.

However, if we assume that the OP *was* asking for direct author control over the display of dates and times, then, well, that&apos;s a horrible idea.  The entire *point* of the datetime inputs is to offer the display in whatever fashion the user most desires.  Giving control over this to the author defeats that and is directly and explicitly bad for i18n.  If I were European and was used to seeing dates as &quot;DD/MM/YYYY&quot;, I would *not* want an ignorant American developer setting the displayed value to use the format &quot;MM-DD-YYYY&quot;, *especially* if I&apos;m used to other sites leaving the displayed value to the default so the browser respects my locale conventions.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>42998</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2010-12-02 17:52:38 +0000</bug_when>
            <thetext>(In reply to comment #8)
&gt; However, if we assume that the OP *was* asking for direct author control over
&gt; the display of dates and times, then, well, that&apos;s a horrible idea.  The entire
&gt; *point* of the datetime inputs is to offer the display in whatever fashion the
&gt; user most desires.  Giving control over this to the author defeats that and is
&gt; directly and explicitly bad for i18n.  If I were European and was used to
&gt; seeing dates as &quot;DD/MM/YYYY&quot;, I would *not* want an ignorant American developer
&gt; setting the displayed value to use the format &quot;MM-DD-YYYY&quot;, *especially* if I&apos;m
&gt; used to other sites leaving the displayed value to the default so the browser
&gt; respects my locale conventions.

I think consistency within a site is much more expected and valuable than consistency between sites, for things that visually appear to be part of the site.  More generally, lack of styleability is a clear deficiency of the new HTML5 inputs compared to existing solutions, and we might need to give authors a lot of control before the inputs will be widely used.

However, I don&apos;t think there&apos;s any way to say for sure what&apos;s needed until browsers have basic implementation down.  In all likelihood, there will be some companies or governments that demand some particular formatting, but it will probably be the same formatting that their browser uses by default, and they won&apos;t realize people in other locales will see things differently, so they won&apos;t care.

I&apos;d reclose the bug as LATER, but I&apos;m not actually sure people other than the editor should really be resolving bugs that aren&apos;t clearly garbage.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43002</commentid>
            <who name="Shelley Powers">shelleyp@burningbird.net</who>
            <bug_when>2010-12-02 19:13:02 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; (In reply to comment #8)
&gt; &gt; However, if we assume that the OP *was* asking for direct author control over
&gt; &gt; the display of dates and times, then, well, that&apos;s a horrible idea.  The entire
&gt; &gt; *point* of the datetime inputs is to offer the display in whatever fashion the
&gt; &gt; user most desires.  Giving control over this to the author defeats that and is
&gt; &gt; directly and explicitly bad for i18n.  If I were European and was used to
&gt; &gt; seeing dates as &quot;DD/MM/YYYY&quot;, I would *not* want an ignorant American developer
&gt; &gt; setting the displayed value to use the format &quot;MM-DD-YYYY&quot;, *especially* if I&apos;m
&gt; &gt; used to other sites leaving the displayed value to the default so the browser
&gt; &gt; respects my locale conventions.
&gt; 
&gt; I think consistency within a site is much more expected and valuable than
&gt; consistency between sites, for things that visually appear to be part of the
&gt; site.  More generally, lack of styleability is a clear deficiency of the new
&gt; HTML5 inputs compared to existing solutions, and we might need to give authors
&gt; a lot of control before the inputs will be widely used.
&gt; 
&gt; However, I don&apos;t think there&apos;s any way to say for sure what&apos;s needed until
&gt; browsers have basic implementation down.  In all likelihood, there will be some
&gt; companies or governments that demand some particular formatting, but it will
&gt; probably be the same formatting that their browser uses by default, and they
&gt; won&apos;t realize people in other locales will see things differently, so they
&gt; won&apos;t care.
&gt; 
&gt; I&apos;d reclose the bug as LATER, but I&apos;m not actually sure people other than the
&gt; editor should really be resolving bugs that aren&apos;t clearly garbage.


I agree that it is difficult to determine author and developer acceptance of the form controls until we have wider implementation. We still do not have a date implementation in the two browsers people use most, Firefox and IE, and the implementation in the other browsers is still undergoing change.

A LATER status would enable us to re-visit this issue once there is wider implementation.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43003</commentid>
            <who name="Shelley Powers">shelleyp@burningbird.net</who>
            <bug_when>2010-12-02 19:16:43 +0000</bug_when>
            <thetext>One quick PS

Of course, at a later time, it is going to be difficult to get any changes into the spec, or implementations. In addition, there is a very real possibility that developers and web site authors will just reject the HTML5 form elements (or many of them) in favor of existing libraries, making acceptance of even changed specs and implementation that much less guaranteed. 

In the end, if the people don&apos;t use the HTML5 functionality, because it&apos;s too restricting or too inflexible, it doesn&apos;t matter who implements what.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44063</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-11 00:13:56 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r5761.
Check-in comment: Date/time form controls: Add notes saying that the UI doesn&apos;t have to match the submission format. Some day we&apos;ll add graphics to make it more obvious, but for now I don&apos;t want to bias implementations.
http://html5.org/tools/web-apps-tracker?from=5760&amp;to=5761</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44064</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 00:20:57 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: see above.
Rationale: I&apos;ve tried to clarify the spec as suggested in comment 2, but beyond that I don&apos;t understand exactly what is being requested here.

Original poster: please feel free to reopen the bug as described in the &quot;EDITOR&apos;S RESPONSE&quot; paragraph above.

Others: please file new bugs if you have specific ideas or suggestions stemming from the discussion above.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52642</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:21 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11459</bug_id>
          
          <creation_ts>2010-12-02 23:31:00 +0000</creation_ts>
          <short_desc>&quot;If the image argument is an HTMLImageElement object that is not fully decodable ... then the implementation must return without drawing anything.&quot; This is terrible!  It completely prohibits displaying images incrementally.  When I&apos;m loading a 5 MB 3000x3</short_desc>
          <delta_ts>2011-08-04 05:03:31 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>philipj@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-8585ee5befa49bb1457ae67ec4e93114</token>

      

      

          <long_desc isprivate="0">
            <commentid>43010</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-02 23:31:12 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#images

Comment:
&quot;If the image argument is an HTMLImageElement object that is not fully
decodable ... then the implementation must return without drawing anything.&quot;
This is terrible!  It completely prohibits displaying images incrementally. 
When I&apos;m loading a 5 MB 3000x3000 image, not being able to draw
partially-loaded images is a serioius problem.	If an image isn&apos;t fully
loaded, allow (don&apos;t require) UA&apos;s to blit what data is available.  Don&apos;t
preemptively destroy all progressive loading!

Posted from: 76.24.235.31</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44069</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 00:34:17 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Could you elaborate on how you would do progressive loading with &lt;canvas&gt;? An example showing how this would work would be great. I&apos;m not sure I follow.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52666</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:31 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11472</bug_id>
          
          <creation_ts>2010-12-04 23:13:00 +0000</creation_ts>
          <short_desc>Add height property for TextMetrics</short_desc>
          <delta_ts>2011-08-04 05:03:48 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>7798</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mail@gossimaniac.net</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-fff9efbd26b6e05233d5a6f8266d843d</token>

      

      

          <long_desc isprivate="0">
            <commentid>43056</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-04 23:13:37 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/2dcontext/
Section: http://www.whatwg.org/specs/web-apps/current-work/#top

Comment:
At the moment I am writing a wordwrap to place text above some boxes and to
make them fit in there. I need text-height for that for not running above the
box on the vertical axis. There is no exposed API to do get that. I expected
TextMetrics to have a height property analog to width and was already
programming with that (without a recheck if this is really existent - foo!).

Could you please think about adding a height property to TextMetrics - thanks.

Posted from: 89.13.161.119</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43057</commentid>
            <who name="gossi">mail@gossimaniac.net</who>
            <bug_when>2010-12-04 23:24:29 +0000</bug_when>
            <thetext>Well, I submitted the issue from the Canvas 2D-Context WD-Page. So, some adjustment to clearify this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44071</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 00:37:10 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 7798 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52715</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:48 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11488</bug_id>
          
          <creation_ts>2010-12-07 00:33:00 +0000</creation_ts>
          <short_desc>drawImage(img), where img is SVG image with % height/width</short_desc>
          <delta_ts>2011-08-04 05:04:15 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>LC</target_milestone>
          
          <blocked>11819</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Jatinder Mann [MSFT]">jmann@microsoft.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>annevk@annevk.nl</cc>
    
    <cc>bzbarsky@mit.edu</cc>
    
    <cc>dbaron@dbaron.org</cc>
    
    <cc>excors@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mjs@apple.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-7f519a40d97a7780dd6a53c4579c7ac8</token>

      

      

          <long_desc isprivate="0">
            <commentid>43113</commentid>
            <who name="Jatinder Mann [MSFT]">jmann@microsoft.com</who>
            <bug_when>2010-12-07 00:33:43 +0000</bug_when>
            <thetext>The Canvas spec states that when using the drawImage() call, If the sx, sy, sw, and sh arguments are omitted, they must default to 0, 0, the image&apos;s intrinsic width in image pixels, and the image&apos;s intrinsic height in image pixels, respectively. However, for the case that the drawImage(img) is called with img, such that img is a SVG image with a percent height and width, the spec is not clear on what the intrinsic dimension should be.

Considering it may be difficult to determine what the intentions of the SVG image creator was, in this case, I recommend the spec indicate that the Canvas width and height should be used.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43119</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-12-07 05:36:28 +0000</bug_when>
            <thetext>I believe that the CSSWG recently agreed that percentage dimensions on the SVG root wouldn&apos;t create any intrinsic dimensions at all; I don&apos;t know whether or not it would create an intrinsic aspect-ratio (depends on what the %s are supposed to be relative to - if they&apos;re relative to the same thing, then it can define an intrinsic aspect-ratio).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44079</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 00:56:10 +0000</bug_when>
            <thetext>If such images don&apos;t have intrinsic dimensions, what should I say the default intrinsic dimensions are? How about the case of intrinsic ration but no intrinsic dimensions?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44085</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-01-11 01:46:28 +0000</bug_when>
            <thetext>I have a general algorithm for resolving intrinsic dimensions into definite dimensions in the Image Values spec &lt;http://dev.w3.org/csswg/css3-images/#sizing&gt;.  Figure out just what intrinsic dimensions/ratio are present, and then resolve them using a &quot;default background sizing area&quot; equal to the size of the canvas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45356</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:26:31 +0000</bug_when>
            <thetext>Is there some terminology I can use to just invoke the existing algorithm? I&apos;d rather not duplicate it...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45416</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-12 00:12:22 +0000</bug_when>
            <thetext>http://krijnhoetmer.nl/irc-logs/whatwg/20110212#l-86</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47811</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-04-29 19:35:11 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47812</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-04-29 19:35:39 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6044.
Check-in comment: Define how an SVG image gets sized in drawImage()
http://html5.org/tools/web-apps-tracker?from=6043&amp;to=6044</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52794</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:15 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11494</bug_id>
          
          <creation_ts>2010-12-07 21:48:00 +0000</creation_ts>
          <short_desc>I would like a simple direct way to say that a table, or all tables in a document, should be drawn using single lines.  I produce puzzles as a business, so the tables that I have on my webpages are crossword diagrams, Sudoku diagrams, chess diagrams, and</short_desc>
          <delta_ts>2011-08-04 05:03:57 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-7365f8d5db108b884d302825b6c13bd4</token>

      

      

          <long_desc isprivate="0">
            <commentid>43157</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-07 21:48:26 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
I would like a simple direct way to say that a table, or all tables in a
document, should be drawn using single lines.  I produce puzzles as a
business, so the tables that I have on my webpages are crossword diagrams,
Sudoku diagrams, chess diagrams, and so forth.	When these are drawn using
double lines, shading, 3-dimensional effects, or other fanciful decoration
this detracts from the purpose and the content of the diagram.	It also wastes
a huge amount of space.  The double lines are 6 pixels wide, instead of the 2
pixels for a normal line.  For a 9x9 Sudoku, that&apos;s 40 wasted pixels. The
reader needs that spce for wing the puzzle.  For a large format 25x25
crossword, that&apos;s 104 wasted pixels in each direction.	Even if the table
contains ordinary text, the ornate borders distract and detract from the
contents.

Posted from: 69.118.33.233</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43158</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2010-12-07 22:05:34 +0000</bug_when>
            <thetext>This is pretty simple with CSS, no?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43165</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2010-12-07 23:01:52 +0000</bug_when>
            <thetext>This is a CSS issue.  It can be trivially achieved with code similar to the following:

table {
  border-collapse: collapse;
  border: 1px solid black;
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52740</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:57 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11543</bug_id>
          
          <creation_ts>2010-12-13 10:25:00 +0000</creation_ts>
          <short_desc>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt; &lt;title&gt;</short_desc>
          <delta_ts>2011-08-04 05:03:58 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-4c80591fbe1ad4613e84ace3c8adea71</token>

      

      

          <long_desc isprivate="0">
            <commentid>43297</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-13 10:25:26 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;
&lt;title&gt;Documento sin t&amp;iacute;tulo&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;!--
body {
	background-color: #999999;
}
--&gt;
&lt;/style&gt;&lt;/head&gt;

&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;


Posted from: 83.56.194.8</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43306</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-12-13 18:30:05 +0000</bug_when>
            <thetext>Given the lack of vim mode line, this is not a dupe of bug 11377.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52744</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:58 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11546</bug_id>
          
          <creation_ts>2010-12-14 08:33:00 +0000</creation_ts>
          <short_desc>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&gt; &lt;!-- 30:47 GMT --&gt; &lt;head&gt; &lt;title&gt;ÐÐ°ÑÐ¾Ð´Ð½ÑÐµ ÑÐµÑÐµÐ¿ÑÑ, Ð¼ÐµÐ´Ð¸ï</short_desc>
          <delta_ts>2011-08-04 05:03:35 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-13294957d4f425d25e5500325cce8911</token>

      

      

          <long_desc isprivate="0">
            <commentid>43322</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-14 08:33:00 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot;&gt;


&lt;!-- 30:47 GMT --&gt;
&lt;head&gt;

&lt;title&gt;Народные рецепты, медицина,&lt;/title&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1251&quot; /&gt;
&lt;meta name=&apos;yandex-verification&apos; content=&apos;7d991eeb642db786&apos; /&gt;
&lt;meta name=&quot;description&quot; content=&quot;Народные рецепты,
медицина&quot; /&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;рецепт, народный,
медицина, болезнь, помочь, целебный,
заболевание, поставить, раздел, излечение,
растение, кожный, природа, женщина,
эффективный, рака, недуг&quot; /&gt;
&lt;meta name=&quot;subject&quot; content=&quot;Рецепты народной
медицины, справочники. Задать вопрос к
специалистам&quot; /&gt;
&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;
&lt;meta name=&quot;revisit-after&quot; content=&quot;1 days&quot; /&gt;

&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1251&quot; /&gt; 

&lt;link rel=&quot;stylesheet&quot; href=&quot;templates/travnik/css/engine.css&quot; type=&quot;text/css&quot;
/&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;templates/travnik/css/style.css&quot; type=&quot;text/css&quot;
/&gt;

&lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
&lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt;
&lt;?php @include_once $_SERVER[&apos;DOCUMENT_ROOT&apos;].&apos;/include/head.php&apos;; ?&gt; 
&lt;/head&gt;
&lt;body&gt;
&lt;?php @include_once $_SERVER[&apos;DOCUMENT_ROOT&apos;].&apos;/include/body.php&apos;; ?&gt; 

&lt;div id=&quot;wrapper&quot;&gt;

	&lt;div id=&quot;header&quot;&gt;
		&lt;img src=&quot;templates/travnik/images/leaf.gif&quot; class=&quot;leaf&quot;
alt=&quot;Народные рецепты, медицина,&quot; /&gt;
		&lt;h2&gt;Народные  &lt;span&gt; рецепты&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a
href=&quot;http://fitohealth-nsp.ru/forum/&quot;&gt; Задать вопрос на
форуме &lt;/h3&gt;
	&lt;/div&gt;
	
	&lt;div id=&quot;container&quot;&gt;
		&lt;div id=&quot;content&quot;&gt;
			&lt;div id=&quot;left&quot;&gt;
&lt;?php @include_once $_SERVER[&apos;DOCUMENT_ROOT&apos;].&apos;/include/left.php&apos;; ?&gt;	      
	 
&lt;/div&gt;
			
		&lt;div id=&quot;main&quot;&gt;&lt;div class=&quot;inside1&quot;&gt;&lt;div class=&quot;inside2&quot;&gt;&lt;div
class=&quot;inside3&quot;&gt;&lt;div class=&quot;inside4&quot;&gt;&lt;div class=&quot;inside5&quot;&gt;&lt;div
class=&quot;inside6&quot;&gt;&lt;div class=&quot;inside7&quot;&gt;
				&lt;span id=&apos;dle-speedbar&apos;&gt;&lt;a
href=&quot;index.html&quot;&gt;Народные рецепты &lt;/a&gt;&lt;/span&gt;
			&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
				
				

				&lt;div id=&quot;main&quot;&gt;&lt;div class=&quot;inside1&quot;&gt;&lt;div
class=&quot;inside2&quot;&gt;&lt;div class=&quot;inside3&quot;&gt;&lt;div class=&quot;inside4&quot;&gt;&lt;div
class=&quot;inside5&quot;&gt;&lt;div class=&quot;inside6&quot;&gt;&lt;div class=&quot;inside7&quot;&gt;
				&lt;span id=&apos;dle-info&apos;&gt;&lt;/span&gt;
				&lt;div id=&apos;dle-content&apos;&gt;&lt;h1&gt;Доброго
дня!&lt;/h1&gt;
&lt;br&gt;
&lt;!-- perviy1 --&gt;
&lt;br&gt;
&lt;div class=&quot;news&quot;&gt;
	&lt;div id=&apos;news-id-48&apos;&gt;&lt;p class=&quot;news&quot;&gt;&lt;b&gt;Народные
рецепты, медицина, &lt;/b&gt; в данное время вполне
заслуженно находится на пике своей
популярности, как и во времена наших
предков. Ведь современный человек
отдалился от природы. Мы повсеместно
используем достижения науки и техники,
перестаем активно двигаться, едим генно
модифицированные продукты, дышим
загрязненным вредными веществами
воздухом. В результате мы приобретаем
новые болезни. Официальная терапия, подняв
1-но заболевание, увечит иное, потому, что
банкет синтетических средств,
антибиотиков, способствует развитию
аллергии, кожных болезней, рушит печень а
также почки.	Но что же делать? Лечиться то
нужно… 
&lt;/p&gt;&lt;p class=&quot;news&quot;&gt;Отличный  медицинский работник,
все-таки учитывая то, то что грызть
доступная, однако вмести с этим
&lt;b&gt;эффективная  медицина - народная,
народные рецепты,&lt;/b&gt;, ставит больному,
кроме медикаментозного излечению,
проверенные «бабушкины» рецепты. Как бы то
ни было, не взирая на техно развитие,
мужчина — маленького ребенка Природы. А
также, выдайся несчастье с самочуаствием,
Народные рецепты, медицина, любезно
выскажет инициативу прибегнуть  дарами
природы —  растениями, минералами а также
камнями,  целебными глинами а также
грязями, природными водами, солнечным
световыми лучами а также запахами.
Необходимо лишь уметь сведуще этим всем
употреблять а также в данном, мы не
сомневаются, вам может помочь новость,
изображенного у нас на портале. Любые
рекомендации а также советы вполне можно
применять в домохозяек условиях, &lt;/p&gt;
&lt;br&gt;&lt;br&gt;&lt;div align=&quot;center&quot;&gt;&lt;h1&gt;Разделы сайта:&lt;/h1&gt;&lt;/div&gt;&lt;br&gt;
&lt;table width=&quot;100%&quot;&gt;
&lt;tr&gt;
&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;
&lt;div class=&quot;glava&quot;&gt;
&lt;div align=&quot;center&quot;&gt;&lt;h3&gt;справочник
заболеваний&lt;/h3&gt;&lt;/div&gt;&lt;/br&gt;
&lt;p class=&quot;news&quot;&gt;   Не стоит забывать про то, то что
поставленный диагноз все же обязан
назначать медицинский работник, и лишь уже
после вынесения вердикта врачей Народные
рецепты, медицина, довольно не только лишь
не опасна, но также может быть полезна а
также эффективна. В области веб-сайта
«Команда хвороб» изображенная новость
насчет крупнейшую компаний недугов. В
частности, псориаз должно шарить в кожных
хворостях, напротив, бронхит — в болезнях
учреждений дыхания. Нежели может помочь
Народные рецепты, медицина,, ежели
поставлен чертов поставленный диагноз —
рак, которые травяные подготовка притащат
поправка а также облегчение лезь болезнях
желудочно-кишечного шляха, добро
сосудистой организации, дыхательных колей
— данный отрасль довольно может быть
полезен а также представителям сильного
пола а также представительницам слабого
пола.  &lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;2%&quot; valign=&quot;top&quot;&gt;
&amp;nbsp
&lt;/td&gt;
&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;
&lt;div class=&quot;glava&quot;&gt;
&lt;div align=&quot;center&quot;&gt;&lt;h3&gt;женская колонка&lt;/h3&gt;&lt;/div&gt;&lt;/br&gt;
&lt;p class=&quot;news&quot;&gt;   Из-под «Женской колонки»,
заботливо написанной ради женщин
населения вселенной, любознательные
женщины спросят, то что советует Народные
рецепты, медицина, ради профилактики
мастопатии, мастита а также молочницы.
Отрасль довольно может быть полезен а
также лезь досадных кожных проблемах: тут
приведены подробные советы, точно 
спастись от перхоти, прыщей, угрей, а еще
точно излечить себорею.	  Ради
продолжательниц семейства
любопытствовать освещена вопрос
бесплодия а также вполне вероятные
технологии а также технологии излечению.
Выявление опухолей, в том количестве а
также белых желез, на ранних этапах
болезни — заклад эффективного
выздоровления а также излечению: в области
подробно описаны признаки рака белой
оковы.  &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;
&lt;div class=&quot;glava&quot;&gt;
&lt;div align=&quot;center&quot;&gt;&lt;h3&gt;истории читателей&lt;/h3&gt;&lt;/div&gt;&lt;/br&gt;
&lt;p class=&quot;news&quot;&gt;   «События из-под существования»
сообщат о бытовавших в реальной
существования происшествиях исцеления
человек,  что предпочли на себе
испробовать то, нежели богата Народные
рецепты, медицина,. Точно спастись от
ненужными килограммов, которую мазь
принимать на вооружение лезь ожогах,
которые частицы могут помочь излечить
катаракту, точно одолеть диабет а также
нежели сделать ниже артериальное нажим —
вот вдалеке не полный список 3, с
какими-нибудь любезно поделились в
прошлом пациенты.      Ежели какой-нибудь
рецепт либо методика ограниченнее
кому-нибудь можно помогли, то отчего ее бы
не испробовать на себе. Вполне вероятно, а
также вы обретете волшебство эксперимент
исцеления. Не забывайте, то что каждое
целебный тем действенней, нежели вяще
вероисповедание в его триумф. Твердость
дядьки, подкрепленная народной мудростью
а также знаниями, вечно может помочь
победить хвори, обрести здоровье а также
умиротворение.    &lt;/p&gt;
&lt;/td&gt;
&lt;td width=&quot;2%&quot; valign=&quot;top&quot;&gt;
&amp;nbsp
&lt;/td&gt;
&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;
&lt;div class=&quot;glava&quot;&gt;
&lt;div align=&quot;center&quot;&gt;&lt;h3&gt;лекарственные
растения&lt;/h3&gt;&lt;/div&gt;&lt;/br&gt;
&lt;p class=&quot;news&quot;&gt;   Целебный травками на Руси
находилось широко распространено снова с
языческих пор. С давних времен в деревнях
избавление от хворей а также недугов люд
имел возможность одержать только лишь у
народных знахарей а также целителей,  что
приумножали а также сохраняли накопленный
почти всеми поколениями эксперимент а
также бесценные рецепты травяных сборов.
Различные травники  существовали известны
снова со пор Владимира Мономаха.  При
правлении  Петра 1  возделывались спец.
огороды с лечебными травками,	что уже
после них созыва попадались в «зелийную
лавку» — предшественницу этой аптеки. В
«Травнике», изображенному у нас на
портале, переданы показа больше всего
пользующихся популярностью а также широко
употребляемых лекарственных растений в
алфавитном строе от Напротив, до Я. В наше
время целебные муравы а также коренья в
превеликом ассортименте продаются в
аптеках либо же возможно сделать попытку
заняться них сбором собственны &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;postfooter&quot;&gt;
	
&lt;/p&gt;
&lt;/div&gt;


				 
			&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; 


		
			
		&lt;/div&gt;&lt;/div&gt;
	
	
		

		


&lt;div id=&quot;sidebar&quot;&gt;&lt;div class=&quot;right-block&quot;&gt;&lt;div class=&quot;inside1&quot;&gt;
&lt;h3&gt;&lt;a
href=&quot;news/1217-infekcii-mochevyvodjashhikh-putejj.html&quot;&gt;Инфекции
мочевыводящих путей&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;news_right&quot;&gt;

&lt;div class=&quot;image&quot;&gt;&lt;a
href=&quot;news/1217-infekcii-mochevyvodjashhikh-putejj.html&quot;&gt;
&lt;img src=&quot;uploads/thumbs/1286968446_mochevyvod.jpg&quot; alt=&quot;Инфекции
мочевыводящих путей&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;  Почувствовав жжение в период
мочеиспускания, вы здесь же предполагаете,
то что вас настигла еще одна инфекция
мочевыводящих путей. У любой 5-й ...	
&lt;/div&gt;


&lt;h3&gt;&lt;a href=&quot;news/1216-razdrazhenie-i-rez-v-glazakh.html&quot;&gt;Резь и
раздражение	в глазах&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;news_right&quot;&gt;

&lt;div class=&quot;image&quot;&gt;&lt;a href=&quot;news/1216-razdrazhenie-i-rez-v-glazakh.html&quot;&gt;
&lt;img src=&quot;uploads/thumbs/1282050225_gaza.jpg&quot; alt=&quot;Раздражение и
резь в глазах&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Когда нашим глазам что-то мешает, Вы
сразу почувствуете , они дадут о себе
знать. Пылинка размером не больше точечки,
попав под веко, ощущается как ...
&lt;/div&gt;


&lt;h3&gt;&lt;a href=&quot;news/1215-skrezhet-zubami-vo-sne.html&quot;&gt;Когда слышно
скрежет зубами во сне&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;news_right&quot;&gt;

&lt;div class=&quot;image&quot;&gt;&lt;a href=&quot;news/1215-skrezhet-zubami-vo-sne.html&quot;&gt;
&lt;img src=&quot;uploads/thumbs/1281948139_bruxism.jpg&quot; alt=&quot;Скрежет
зубами во сне&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;День почти как всегда был полон стрессов,
и, чтобы снять невероятное напряжение, мы
начинаем скрежетать ночью своими зубками -
порой очень громко, что даже будим ничего
рядом  не понимающих ...
&lt;/div&gt;


&lt;h3&gt;&lt;a href=&quot;news/1214-rozovye-ugri.html&quot;&gt;Розовые угри на
теле&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;news_right&quot;&gt;

&lt;div class=&quot;image&quot;&gt;&lt;a href=&quot;news/1214-rozovye-ugri.html&quot;&gt;
&lt;img src=&quot;uploads/thumbs/1281590715_clip.dn.ua-66067_14.jpg&quot;
alt=&quot;Розовые угри&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Ваше лицо выглядит не совсем хорошо,
словно вы постоянно стесняетесь, сгораете
от стыда? Или еще хуже - как лицо юного
подростка, страдающего запущенной угревой
сыпью. Мужайтесь! ...
&lt;/div&gt;


&lt;h3&gt;&lt;a href=&quot;news/1213-vetrjanka.html&quot;&gt;Ветрянка&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;news_right&quot;&gt;

&lt;div class=&quot;image&quot;&gt;&lt;a href=&quot;news/1213-vetrjanka.html&quot;&gt;
&lt;img src=&quot;uploads/thumbs/1281361735_vetrjanka.jpg&quot; alt=&quot;Ветрянка&quot;
width=&quot;100&quot; height=&quot;100&quot;&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Ветрянка проходит за одну неделю,
максимум две недели, но успевает изрядно
намучить идосадить. Если ребенка мучают
боли, снимайте их лекарством,
парацетамолом, но ни в коем случае не ...
&lt;/div&gt;



&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div id=&quot;sidebar&quot;&gt;&lt;div class=&quot;right-block&quot;&gt;&lt;div class=&quot;inside1&quot;&gt;
&lt;h3 align=&quot;center&quot; style=&quot;color:#666666;&quot;&gt;&lt;b&gt;Бесплатная
консультация специалиста&lt;/b&gt;&lt;/h3&gt;
			
  &lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;a
href=&quot;consultation_allergo_immunolog.html&quot;&gt;Аллерго-Иммунолог&lt;/
a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_androlog.html&quot;&gt;Андролог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_venerolog.html&quot;&gt;Венеролог&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_lfk.html&quot;&gt;Врач ЛФК&lt;/a&gt;&lt;br&gt; &lt;a 

href=&quot;consultation_gastroenterolog.html&quot;&gt;Гастроэнтеролог&lt;/a&gt;
&lt;br&gt;&lt;a 

href=&quot;consultation_gepatolog.html&quot;&gt;Гепатолог&lt;/a&gt;&lt;br&gt; &lt;a 

href=&quot;consultation_ginekolog.html&quot;&gt;Гинеколог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_dermotolog.html&quot;&gt;Дерматолог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_dietolog.html&quot;&gt;Диетолог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_kardiolog.html&quot;&gt;Кардиолог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_mammolog.html&quot;&gt;Маммолог&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_manual.html&quot;&gt;Мануальный 

терапевт&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_narkolog.html&quot;&gt;Нарколог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_nevrolog.html&quot;&gt;Невролог&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_onkolog.html&quot;&gt;Онколог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_ortoped.html&quot;&gt;Ортопед&lt;/a&gt;&lt;br&gt;&lt;/td&gt;&lt;td
style=&quot;padding-left:8px;&quot;&gt;&lt;a 

href=&quot;consultation_otolaringolog.html&quot;&gt;Отоларинголог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_oftalmolog.html&quot;&gt;Офтальмолог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_plast_hirurg.html&quot;&gt;Пластический
хирург&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_proktolog.html&quot;&gt;Проктолог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_refleksoterapevt.html&quot;&gt;Рефлексотерапевт&lt;/a&gt;
&lt;br&gt;&lt;a 

href=&quot;consultation_psihoterapevt.html&quot;&gt;Психотерапевт&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_klet_tehn.html&quot;&gt;Клеточные
технологии&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_sexolog.html&quot;&gt;Сексолог&lt;/a&gt; &lt;br&gt;&lt;a 

href=&quot;consultation_stomatolog.html&quot;&gt;Стоматолог&lt;/a&gt;&lt;br&gt;
	   &lt;a href=&quot;consultation_terapevt.html&quot;&gt;Терапевт&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_urolog.html&quot;&gt;Уролог&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_fizioterapevt.html&quot;&gt;Физиотерапевт&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_flebolog.html&quot;&gt;Флеболог&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_hirurg.html&quot;&gt;Хирург&lt;/a&gt;&lt;br&gt;&lt;a 

href=&quot;consultation_endokrinolog.html&quot;&gt;Эндокринолог&lt;/a&gt;&lt;br&gt;&lt;a
href=&quot;consultation_drugoi.html&quot;&gt;Другой 

врач&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

      
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;




	&lt;div class=&quot;clearing&quot;&gt;&lt;/div&gt;

	&lt;div id=&quot;footer&quot;&gt;&lt;div class=&quot;inside1&quot;&gt;
		&lt;?php @include_once
$_SERVER[&apos;DOCUMENT_ROOT&apos;].&apos;/include/copyraid.php&apos;; ?&gt; 

	&lt;/div&gt;&lt;/div&gt;

&lt;/div&gt;


&lt;?php @include_once $_SERVER[&apos;DOCUMENT_ROOT&apos;].&apos;/include/footer.php&apos;; ?&gt; 
&lt;/body&gt;

&lt;!-- 31:26 GMT --&gt;
&lt;/html&gt;


Posted from: 193.110.115.237</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52680</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:35 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11565</bug_id>
          
          <creation_ts>2010-12-17 04:52:00 +0000</creation_ts>
          <short_desc>Add drawImage(in ImageData image, ...) functions to context2d</short_desc>
          <delta_ts>2011-08-04 05:04:09 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>11517</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sirisian">warcraftthreeft@sbcglobal.net</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-8c1c56f4b5939605bbbe3511aaa7e0c3</token>

      

      

          <long_desc isprivate="0">
            <commentid>43445</commentid>
            <who name="Sirisian">warcraftthreeft@sbcglobal.net</who>
            <bug_when>2010-12-17 04:52:31 +0000</bug_when>
            <thetext>Add these two lines:

void drawImage(in ImageData image, in double dx, in double dy, in optional double dw, in double dh);
void drawImage(in ImageData image, in double sx, in double sy, in double sw, in double sh, in double dx, in double dy, in double dw, in double dh);

to:
http://www.w3.org/TR/2dcontext/#conformance-requirements

Usage scenario. You have a large image that you want to render a portion to the screen without overwriting the whole canvas. (Pretend part of it is transparent). You also want the ability to change pixel info quickly and ImageData allows that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44092</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-01-11 05:12:45 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 11517 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52775</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:09 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11575</bug_id>
          
          <creation_ts>2010-12-18 16:07:00 +0000</creation_ts>
          <short_desc>i dont understand why people hate me</short_desc>
          <delta_ts>2011-08-04 05:03:26 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-414a450375d328890bcfc2c8fa83a686</token>

      

      

          <long_desc isprivate="0">
            <commentid>43464</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-18 16:07:18 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
i dont understand

why people hate me

Posted from: 116.99.32.230</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43465</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2010-12-18 16:47:46 +0000</bug_when>
            <thetext>Me neither, Shelley.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52657</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:26 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11628</bug_id>
          
          <creation_ts>2010-12-31 18:24:00 +0000</creation_ts>
          <short_desc>What I want to know is where to find the software so that I may experiment with learning how to utilize it and create stuff with it.  Do you know where I might find a website to download this software to develop stuff in HTML5 with might be?  Thanks!</short_desc>
          <delta_ts>2011-08-04 05:04:20 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-f3c983b3dd7c46ac3ff816fc1080eec9</token>

      

      

          <long_desc isprivate="0">
            <commentid>43701</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2010-12-31 18:24:43 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
What I want to know is where to find the software so that I may experiment
with learning how to utilize it and create stuff with it.  Do you know where I
might find a website to download this software to develop stuff in HTML5 with
might be?  Thanks!  

Posted from: 99.160.12.70</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44009</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-01-10 18:13:24 +0000</bug_when>
            <thetext>This is not a help forum.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52804</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:20 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11657</bug_id>
          
          <creation_ts>2011-01-04 04:22:00 +0000</creation_ts>
          <short_desc>More text and font control</short_desc>
          <delta_ts>2012-02-29 22:43:27 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-font</bug_file_loc>
          <status_whiteboard>canvas RFE</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>cam@mcc.id.au</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-47f0565b9d73d61a9bbae64398f88f3b</token>

      

      

          <long_desc isprivate="0">
            <commentid>43787</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-04 04:22:10 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-font

Comment:
My worry is that this doesn&apos;t cover all the different kinds of textual
transformations.  Yes, it does cover obliqueness and weight, it does not cover
letter spacing and other textual attributes that may be of some use to
developers.

Posted from: 66.169.241.62</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43788</commentid>
            <who name="Cameron McCormack">cam@mcc.id.au</who>
            <bug_when>2011-01-04 04:41:42 +0000</bug_when>
            <thetext>It seems to me that a reasonable solution to this is to allow the rendering of an arbitrary HTML element to the canvas.  I don&apos;t think you want to duplicate all of CSS&apos;s text functionality in the canvas 2D context itself.  You probably want to allow some size to be passed in when doing this (so that text could wrap), too.

And it would be pretty handy if you could also just pass in a string to be parsed:

  var ctx = ...;
  ctx.drawHTML(&quot;&lt;span style=&apos;letter-spacing: -0.1; font-weight: 100&apos;&gt;Well &lt;i&gt;hello&lt;/i&gt; there!&quot;, 100, 100, 500);

where the (100, 100) is the top-left corner of the area in which to lay out the CSS boxes, and 500 is the width.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44010</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-01-10 18:26:26 +0000</bug_when>
            <thetext>(In reply to comment #1)
&gt; It seems to me that a reasonable solution to this is to allow the rendering of
&gt; an arbitrary HTML element to the canvas.  I don&apos;t think you want to duplicate
&gt; all of CSS&apos;s text functionality in the canvas 2D context itself.  You probably
&gt; want to allow some size to be passed in when doing this (so that text could
&gt; wrap), too.
&gt; 
&gt; And it would be pretty handy if you could also just pass in a string to be
&gt; parsed:
&gt; 
&gt;   var ctx = ...;
&gt;   ctx.drawHTML(&quot;&lt;span style=&apos;letter-spacing: -0.1; font-weight: 100&apos;&gt;Well
&gt; &lt;i&gt;hello&lt;/i&gt; there!&quot;, 100, 100, 500);
&gt; 
&gt; where the (100, 100) is the top-left corner of the area in which to lay out the
&gt; CSS boxes, and 500 is the width.

You&apos;d need a height as well (though a value that means &apos;auto&apos; would be useful for both).  Don&apos;t forget about vertical languages.  ^_^

Anyway, +1 on an idea in this direction.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44011</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-01-10 18:28:11 +0000</bug_when>
            <thetext>I should provide more than a +1.

Drawing arbitrary text into a canvas lets you do a lot of things, like render text with sub/superscripts, ruby, etc.  These require either structured rendering, like HTML+CSS would provide, or a lot more work to measure text widths and position things yourself.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44019</commentid>
            <who name="Cameron McCormack">cam@mcc.id.au</who>
            <bug_when>2011-01-10 20:29:55 +0000</bug_when>
            <thetext>Yes, good point.  The width &amp; height arguments should be strings, which are parsed as CSS lengths.  They could be optional and default to &apos;auto&apos;.

Another thing to consider is how style resolution would work.  Would style rules in the document apply to the elements that are parsed from the argument?  Would properties be inherited from somewhere (the &lt;canvas&gt; element, maybe)?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44024</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-01-10 21:24:17 +0000</bug_when>
            <thetext>(In reply to comment #4)
&gt; Yes, good point.  The width &amp; height arguments should be strings, which are
&gt; parsed as CSS lengths.  They could be optional and default to &apos;auto&apos;.

Strings or numbers.  Numbers would be canvas pixels, presumably (or maybe CSS px).


&gt; Another thing to consider is how style resolution would work.  Would style
&gt; rules in the document apply to the elements that are parsed from the argument? 
&gt; Would properties be inherited from somewhere (the &lt;canvas&gt; element, maybe)?

Ooh, didn&apos;t think of that.  Inheriting from the &lt;canvas&gt; is an interesting idea.  Either that, or no inheritance at all - all values are set to initial.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45287</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-08 20:40:23 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: More features for rendering text, and more features for rendering arbitrary markup, are things on the cards for a revision of the canvas API once the rest of the spec is more firmly implemented. We don&apos;t want to get too far ahead of the implementations.

As such, I&apos;ve marked this LATER, so that it doesn&apos;t drop off the radar.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52768</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:07 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64764</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 21:35:25 +0000</bug_when>
            <thetext>This bug is a bit open-ended. It might be better to file separate bugs for specific things that you think we should offer control over.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64780</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:43:27 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: I&apos;m going to add the ability to draw text to a path, which gives you some more control. I&apos;m not sure what specifically else should be added; text spacing is the only other thing listed in this bug but you can fake that with just drawing each character at a time if you&apos;re willing to lose kerning information. (We might want to add kerning metrics to TextMetrics, file a separate bug if you want that.) In short, I&apos;m not really sure what to do here. See also comment 8.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11670</bug_id>
          
          <creation_ts>2011-01-05 16:16:00 +0000</creation_ts>
          <short_desc>&quot;The setTransform(a, b, c, d, e, f) method must [...] invoke the transform(a, b, c, d, e, f) method&quot; - so if I set CanvasRenderingContext2D.prototype.transform=function(){alert()}, then calling setTransform would trigger the alert? Probably this shouldn&apos;t</short_desc>
          <delta_ts>2011-08-04 05:04:04 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#transformations</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-66fe584122e58c4c62d9248f5083467d</token>

      

      

          <long_desc isprivate="0">
            <commentid>43822</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-05 16:16:16 +0000</bug_when>
            <thetext>Specification: 
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#transformations

Comment:
&quot;The setTransform(a, b, c, d, e, f) method must [...] invoke the transform(a,
b, c, d, e, f) method&quot; - so if I set
CanvasRenderingContext2D.prototype.transform=function(){alert()}, then calling
setTransform would trigger the alert? Probably this shouldn&apos;t be defined in
terms of method invocation

Posted from: 128.232.100.193</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>43940</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-01-08 11:35:52 +0000</bug_when>
            <thetext>DOM Core has

&gt; When a method or an attribute is said to call another method or attribute, the
&gt; user agent must invoke its internal API for that attribute or method so that
&gt; e.g. the author can&apos;t change the behavior by overriding attributes or methods
&gt; with custom properties or functions in ECMAScript.

I thought it came from HTML, but it seems I was wrong. (It&apos;s been present since the time Simon was editing the spec.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45226</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-08 00:59:54 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: The spec says to invoke the transform() method, and links to the definition of that method; it doesn&apos;t say to [[Call]] the Function object currently assigned to the &apos;transform&apos; property.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52759</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:04 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11695</bug_id>
          
          <creation_ts>2011-01-07 20:21:00 +0000</creation_ts>
          <short_desc>import java.util.*; public class GeneralCalculation { static Scanner reader = new Scanner(System.in); public static void main(String[] args) { int Spearman, Slinger, Swordman, Planx, Archer, Sniper, Giro, Giant, Bomber, Ram, Catapult, Mortar, Doctor, Cook</short_desc>
          <delta_ts>2011-08-04 05:03:33 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>VERIFIED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-3070972551232be07b1f143d071fb5ce</token>

      

      

          <long_desc isprivate="0">
            <commentid>43917</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-07 20:21:21 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/spec/Overview.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
import java.util.*;
public class GeneralCalculation
{
static Scanner reader = new Scanner(System.in);
public static void main(String[] args)
{
int Spearman, Slinger, Swordman, Planx, Archer, Sniper, Giro, Giant, Bomber,
Ram, Catapult, Mortar, Doctor, Cook;
int RamShip, PaddleWheelRam, BallistaShip, FireShip, MortarShip, CatapultShip,
DivingShip;
double totalLand, totalSea, total;
System.out.println(&quot;כמה נושאי חנית יש לך?&quot;);
Spearman = reader.nextInt();
System.out.println(&quot;כמה קלעים יש לך?&quot;);
Slinger = reader.nextInt();
System.out.println(&quot;כמה נושאי חרב יש לך?&quot;);
Swordman = reader.nextInt();
System.out.println(&quot;כמה פלנקסים יש לך?&quot;);
Planx = reader.nextInt();
System.out.println(&quot;כמה קשתים יש לך?&quot;);
Archer = reader.nextInt();
System.out.println(&quot;כמה רובאים יש לך?&quot;);
Sniper = reader.nextInt();
System.out.println(&quot;כמה גירוקוטפרים יש לך?&quot;);
Giro = reader.nextInt();
System.out.println(&quot;כמה ענקי קיטור יש לך?&quot;);
Giant = reader.nextInt();
System.out.println(&quot;כמה מפציצים יש לך?&quot;);
Bomber = reader.nextInt();
System.out.println(&quot;כמה איילי ניגוח יש לך?&quot;);
Ram = reader.nextInt();
System.out.println(&quot;כמה קטפולות יש לך?&quot;);
Catapult = reader.nextInt();
System.out.println(&quot;כמה מרגמות יש לך?&quot;);
Mortar = reader.nextInt();
System.out.println(&quot;כמה רופאים יש לך?&quot;);
Doctor = reader.nextInt();
System.out.println(&quot;כמה טבחים יש לך?&quot;);
Cook = reader.nextInt();
totalLand = Spearman*0.6 + Slinger*0.4 + Swordman*1.2 + Planx*1.4 + Archer*1.1
+ Sniper*4 + Giro*2.5 + Giant*6.2 + Bomber*5.8 + Ram*4.4 + Catapult*10.2 +
Mortar*31 + Doctor*10 + Cook*4;
System.out.println(&quot;החיילים שלך שווים &quot; + totalLand + &quot;
גנרלים.&quot;);
System.out.println(&quot;~~~~~~~~~~&quot;);
System.out.println(&quot;כמה ספינות אייל ברזל יש לך?&quot;);
RamShip = reader.nextInt();
System.out.println(&quot;כמה ספינות אייל ברזל מושט יש
לך?&quot;);
PaddleWheelRam = reader.nextInt();
System.out.println(&quot;כמה ספינות בליסטרה יש לך?&quot;);
BallistaShip = reader.nextInt();
System.out.println(&quot;כמה ספינות להביור יש לך?&quot;);
FireShip = reader.nextInt();
System.out.println(&quot;כמה ספינות מרגמה יש לך?&quot;);
MortarShip = reader.nextInt();
System.out.println(&quot;כמה ספינות קטפולה יש לך?&quot;);
CatapultShip = reader.nextInt();
System.out.println(&quot;כמה צוללות יש לך?&quot;);
DivingShip = reader.nextInt();
totalSea = RamShip*5.4 + PaddleWheelRam*36 + BallistaShip*6.8 + FireShip*6.2 +
MortarShip*22.4 + CatapultShip*6.4 + DivingShip*18.2 ;
System.out.println(&quot;הצי הימי שלך שווה &quot; + totalSea + &quot;
גנרלים.&quot;);
System.out.println(&quot;~~~~~~~~~~&quot;);
total = totalLand + totalSea;
System.out.println(&quot;הצבא שלך שווה בסך הכל &quot; + total + &quot;
גנרלים.&quot; );
System.out.println(&quot; &quot;);
System.out.println(&quot;קרדיט ל-eliranisrael, יוצר הקוד.&quot;);
}

} 

__________________


Posted from: 109.65.203.17</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52672</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:33 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11705</bug_id>
          
          <creation_ts>2011-01-09 14:24:00 +0000</creation_ts>
          <short_desc>Why does the definition of &quot;middle&quot; differ from the one in SVG 1.1 10.9.2?</short_desc>
          <delta_ts>2011-08-04 05:03:54 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-textbaseline-middle</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-b828d854fcc55543a3f05b25ceffcd47</token>

      

      

          <long_desc isprivate="0">
            <commentid>43964</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-09 14:24:13 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-textbaseline-middle

Comment:
Why does the definition of &quot;middle&quot; differ from the one in SVG 1.1 10.9.2?

Posted from: 212.61.239.181</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45231</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-08 01:35:12 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: Because the SVG definition, and more importantly the CSS definition on which the SVG one is based, is esoteric and isn&apos;t what people think of when they think of &apos;middle&apos;.

What do browsers implement? If browsers use the same definition for &apos;middle&apos; here as for CSS and SVG, we can change it. (It looks like Opera does &apos;middle&apos; per CSS/SVG, and Gecko/WebKit do it per the HTML spec. Haven&apos;t figured out how to test IE9 yet.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45232</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-08 01:45:58 +0000</bug_when>
            <thetext>boogyman helped out. IE9 also does it per spec. So I think it&apos;s probably too late to change.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52731</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:54 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11744</bug_id>
          
          <creation_ts>2011-01-12 20:52:00 +0000</creation_ts>
          <short_desc>setPixel (x,y, color)and getPixel(x,y)  should be implemented. getPixel should return color value</short_desc>
          <delta_ts>2011-08-04 05:03:17 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#pixel-manipulation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mounir@lamouri.fr</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-56d2390cf1700cf8c7c33dab95cda245</token>

      

      

          <long_desc isprivate="0">
            <commentid>44297</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-12 20:52:55 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#pixel-manipulation

Comment:
setPixel (x,y, color)and getPixel(x,y)	should be implemented. getPixel should
return color value

Posted from: 59.177.81.142</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45358</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:27:49 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: Use getImageData() and then setImageData() with a dirty region.

If there&apos;s a compelling use case for which the above is insufficient, please let me know.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52631</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:17 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11819</bug_id>
          
          <creation_ts>2011-01-20 07:33:00 +0000</creation_ts>
          <short_desc>var c = document.getElementById(&apos;canvas&apos;); var ctx = c.getContext(&apos;2d&apos;); ctx.drawSvg(SVG_XML_OR_PATH_TO_SVG, dx, dy, dw, dh);</short_desc>
          <delta_ts>2011-08-04 05:04:18 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>11488</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-e17deb6a54c2754d68ada2235334d750</token>

      

      

          <long_desc isprivate="0">
            <commentid>44502</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-20 07:33:14 +0000</bug_when>
            <thetext>Specification: http://www.w3.org/TR/2dcontext/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
var c = document.getElementById(&apos;canvas&apos;);
var ctx = c.getContext(&apos;2d&apos;);
ctx.drawSvg(SVG_XML_OR_PATH_TO_SVG, dx, dy, dw, dh);

Posted from: 113.162.168.144</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44511</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-01-20 13:00:29 +0000</bug_when>
            <thetext>Wouldn&apos;t it make more sense to support passing an &lt;svg&gt; node to drawImage?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44512</commentid>
            <who name="Simon Pieters">simonp@opera.com</who>
            <bug_when>2011-01-20 13:49:34 +0000</bug_when>
            <thetext>(In reply to comment #1)
&gt; Wouldn&apos;t it make more sense to support passing an &lt;svg&gt; node to drawImage?

Opera supports that, FWIW.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44515</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-01-20 15:13:45 +0000</bug_when>
            <thetext>So does Gecko.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>44517</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-01-20 18:51:54 +0000</bug_when>
            <thetext>Time to spec it?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45360</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:30:12 +0000</bug_when>
            <thetext>What are the intrinsic dimensions of an &lt;svg&gt; node? What should it render, exactly? e.g. what time should it use for animations, should filters that are based on content outside the &lt;svg&gt; be recomputed, should any scripts or events run?

See also bug 11488.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>46387</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-03-05 01:25:05 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Without solid answers to the questions in comment 5, I&apos;m not sure what to do here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52798</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:18 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11890</bug_id>
          
          <creation_ts>2011-01-27 13:41:00 +0000</creation_ts>
          <short_desc>Sometimes we need a pixel(x,y) method. createImageData(1,1) anj put it is slow. javascript is not as fast as c/c++</short_desc>
          <delta_ts>2011-08-04 05:03:23 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-a2e6c80e64f17f57584f94bf572d000b</token>

      

      

          <long_desc isprivate="0">
            <commentid>44797</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-27 13:41:37 +0000</bug_when>
            <thetext>Specification: http://dev.w3.org/html5/2dcontext/
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
Sometimes we need a pixel(x,y) method.
createImageData(1,1) anj put it is slow.
javascript is not as fast as c/c++

Posted from: 163.5.2.210</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45362</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:32:03 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: What is the use case?

See also bug 11744.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52647</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:23 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11900</bug_id>
          
          <creation_ts>2011-01-28 01:40:00 +0000</creation_ts>
          <short_desc>it would be nice to specify a range for the lineWidth, eg, [1, 5], which means that the line starts at width 1, and gradually moves to width 5 at the end point</short_desc>
          <delta_ts>2011-08-04 05:03:42 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-linewidth</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-149cc3ecc47a5c1162e7f9339d9193cd</token>

      

      

          <long_desc isprivate="0">
            <commentid>44819</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-28 01:40:01 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-linewidth

Comment:
it would be nice to specify a range for the lineWidth, eg, [1, 5], which means
that the line starts at width 1, and gradually moves to width 5 at the end
point

Posted from: 173.69.204.228</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45363</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:33:01 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: I&apos;m marking proposals for new features as LATER so that we can examine them when we next go through adding new features.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52696</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:42 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11924</bug_id>
          
          <creation_ts>2011-01-30 18:16:00 +0000</creation_ts>
          <short_desc>&quot;The ImageData object return must be filled with transparent black.&quot;: s/return/returned/</short_desc>
          <delta_ts>2011-08-04 05:04:00 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#pixel-manipulation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-b8b95f99981193b2df052ecb39bdb717</token>

      

      

          <long_desc isprivate="0">
            <commentid>44896</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-01-30 18:16:40 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#pixel-manipulation

Comment:
&quot;The ImageData object return must be filled with transparent black.&quot;:
s/return/returned/

Posted from: 91.181.22.76</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45365</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:33:47 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45366</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-11 01:34:41 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r5872.
Check-in comment: typo
http://html5.org/tools/web-apps-tracker?from=5871&amp;to=5872</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52751</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:00 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11955</bug_id>
          
          <creation_ts>2011-02-02 11:00:00 +0000</creation_ts>
          <short_desc>The canvas should be tainted when drawing text with a cross-origin font (unless CORS was used to allow it)</short_desc>
          <delta_ts>2011-08-04 05:04:18 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-filltext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>annevk@annevk.nl</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>simonp@opera.com</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-901137b04b9cc68206074949f968c33f</token>

      

      

          <long_desc isprivate="0">
            <commentid>45005</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-02 11:00:26 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/complete/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-filltext

Comment:
The canvas should be tainted when drawing text with a cross-origin font
(unless CORS was used to allow it)

Posted from: 88.131.66.80 by simonp@opera.com</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45368</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-11 01:48:58 +0000</bug_when>
            <thetext>I&apos;ve done this, but if we&apos;re worried about fonts leaking information, this is not going to stop it. You can already measure glyphs using regular CSSOM mechanisms like .clientWidth, for instance.

EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45369</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-11 01:49:11 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r5873.
Check-in comment: Make sure cross-origin fonts can&apos;t leak data via &lt;canvas&gt;.
http://html5.org/tools/web-apps-tracker?from=5872&amp;to=5873</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45370</commentid>
            <who name="Jonas Sicking">jonas@sicking.cc</who>
            <bug_when>2011-02-11 02:01:15 +0000</bug_when>
            <thetext>Disclaimer: The outcome of this bug doesn&apos;t matter to gecko one way or another since we don&apos;t allow cross-origin fonts at all unless CORS is used. So fixing our code to align with this change is a no-op.

This seems to close the window when the door is already opened. As you point out, you can get lots of information using CSSOM, and likely more as time goes on. Additionally, using things like pointer-events and SVG filters, you can get the actual pixel data in the font too.

So the result of this bug seems to be solely to require implementations to add code. No actual security or privacy improvements are archived.

The only benefit I can see is if is there is a long term plan to close the other holes too. Is that the case?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52799</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:18 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>11994</bug_id>
          
          <creation_ts>2011-02-07 02:17:00 +0000</creation_ts>
          <short_desc>lulwut? i am 12 year old and what isthis?</short_desc>
          <delta_ts>2011-08-04 05:03:25 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>miket@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-435eb2168a8401c4a0f781d09cb26151</token>

      

      

          <long_desc isprivate="0">
            <commentid>45166</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-07 02:17:25 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#images

Comment:
lulwut? i am 12 year old and what isthis? 

Posted from: 71.65.4.84</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52651</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:25 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12018</bug_id>
          
          <creation_ts>2011-02-09 10:42:00 +0000</creation_ts>
          <short_desc>hello world !!</short_desc>
          <delta_ts>2011-08-04 05:04:07 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#2dcontext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>miket@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-b1aa8c43635aad34568f9f48f6edf36c</token>

      

      

          <long_desc isprivate="0">
            <commentid>45320</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-09 10:42:38 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#2dcontext

Comment:
hello world !!

Posted from: 212.163.145.170</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45325</commentid>
            <who name="">miket@opera.com</who>
            <bug_when>2011-02-09 14:01:58 +0000</bug_when>
            <thetext>*** Bug 12019 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52770</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:07 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12019</bug_id>
          
          <creation_ts>2011-02-09 10:42:00 +0000</creation_ts>
          <short_desc>hello world !!</short_desc>
          <delta_ts>2011-08-04 05:03:34 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>12018</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#2dcontext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>miket@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054510-43c4044d1679de1e8732438635e33453</token>

      

      

          <long_desc isprivate="0">
            <commentid>45321</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-09 10:42:45 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#2dcontext

Comment:
hello world !!

Posted from: 212.163.145.170</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45324</commentid>
            <who name="">miket@opera.com</who>
            <bug_when>2011-02-09 14:01:58 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 12018 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52677</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:34 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12044</bug_id>
          
          <creation_ts>2011-02-12 00:08:00 +0000</creation_ts>
          <short_desc>Feature request: Give developers an option to disable a context&apos;s image smoothing</short_desc>
          <delta_ts>2012-03-28 21:46:15 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#top</bug_file_loc>
          <status_whiteboard>canvas v5</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>stack413@gmail.com</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-2588f6f3dfd536db230f4397bd065c09</token>

      

      

          <long_desc isprivate="0">
            <commentid>45414</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-12 00:08:25 +0000</bug_when>
            <thetext>Specification: 
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#top

Comment:
This is a new feature request.

Request overview: Give developers an option to disable a context&apos;s image
smoothing (ie, anti-assailing).

Problem: When scaling up images, most user agents smooth the output. This is
fine for most use cases, but is undesirable when &quot;pixel-perfect&quot; output is
desired. Unfortunately, there is nothing in the spec that allows a user to
turn off this smoothing. 

I ran into this issue when I was creating a canvas based image editor. In
particular, it more or less torpedoed my first attempt at creating a zoom
feature. Simply put, when I tried to show a &quot;zoomed in&quot; view of a smaller base
image, the &quot;pixels&quot; of the zoomed view were anti-assailed and bled into each
other. The effect was ugly and (more importantly) non-representative of the
actual image being edited, which nicely defeated the purpose of an image
editor. 

Currently the only solution is to roll your own scaling algorithms based on
imageData, which is less than ideal.

Use cases: Any application where a developer needs &quot;pixel perfect&quot; scaling.
Examples include image editors, pixel art, pixel animations, and cases where
developers want to avoid any computational overhead associated with smoothing.



Solution: Codify an existing implementation (see below). My image editor
looked great in Firefox! 

A more complicated solution could allow a developer to specify a specific
smoothing algorithm. Something along the lines of
&quot;context.smoothing(&apos;bicubic&apos;).&quot;

Existing implementation: &quot;Gecko 1.9.2 introduced the mozImageSmoothingEnabled
property to the canvas element; if this Boolean value is false, images won&apos;t
be smoothed when scaled. This property is true by default.&quot; Source:
https://developer.mozilla.org/en/Canvas_tutorial/Using_images#Controlling_imag
e_scaling_behavior

Posted from: 65.185.139.106</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45417</commentid>
            <who name="Scott A">stack413@gmail.com</who>
            <bug_when>2011-02-12 00:14:13 +0000</bug_when>
            <thetext>Sorry this clobbeed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45420</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-02-12 00:30:48 +0000</bug_when>
            <thetext>This is handled in CSS through the &apos;image-rendering&apos; property &lt;http://dev.w3.org/csswg/css3-images/#image-rendering&gt;.  It would be nice to hook into this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45659</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-02-16 08:27:18 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: none yet
Rationale: I don&apos;t usually like this kind of feature, because it relies on authors making good judgements and that has historically not been a successful strategy for Web browser vendors. However, in this particular case the issue isn&apos;t really about optimisation (as it is for &apos;image-rendering&apos;), it&apos;s about a very concrete desire to actually see the pixels blown up. This is something we probably _should_ address.

I&apos;ve marked this &quot;LATER&quot;, so we don&apos;t lose track of it. However, now is not a great time to add this, because before adding more new features we should first let the browsers catch up to what we&apos;ve already specced.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52660</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:28 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64750</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 18:53:22 +0000</bug_when>
            <thetext>Just adding context.imageSmoothingEnabled = boolean seems reasonable.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64786</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:50:14 +0000</bug_when>
            <thetext>Current proposal at: http://wiki.whatwg.org/wiki/Canvas#Image_smoothing</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>66188</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-03-28 21:46:15 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: imageSmoothingEnabled for drawImage
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12088</bug_id>
          
          <creation_ts>2011-02-15 17:43:00 +0000</creation_ts>
          <short_desc>Under 4.8.11.1.2, Transformations, the specification reads: The transformations must be performed in reverse order. For instance, if a scale transformation that doubles the width is applied, followed by a rotation transformation that rotates drawing opera</short_desc>
          <delta_ts>2011-08-04 05:03:45 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>12089</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#transformations</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-552a654c87271cc4cd085fb97279799f</token>

      

      

          <long_desc isprivate="0">
            <commentid>45606</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-15 17:43:41 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#transformations

Comment:
Under 4.8.11.1.2, Transformations, the specification reads: The
transformations must be performed in reverse order. For instance, if a scale
transformation that doubles the width is applied, followed by a rotation
transformation that rotates drawing operations by a quarter turn, and a
rectangle twice as wide as it is tall is then drawn on the canvas, the actual
result will be a square.

Posted from: 67.116.239.5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45629</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-02-15 20:32:47 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 12089 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52704</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:45 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12089</bug_id>
          
          <creation_ts>2011-02-15 17:57:00 +0000</creation_ts>
          <short_desc>Under 4.8.11.1.2, Transformations, the specification reads: The transformations must be performed in reverse order. For instance, if a scale transformation that doubles the width is applied, followed by a rotation transformation that rotates drawing opera</short_desc>
          <delta_ts>2011-08-04 05:03:41 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#transformations</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-dd27e99807ef60a227e28be083abde7c</token>

      

      

          <long_desc isprivate="0">
            <commentid>45614</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-15 17:57:33 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#transformations

Comment:
Under 4.8.11.1.2, Transformations, the specification reads: The
transformations must be performed in reverse order. For instance, if a scale
transformation that doubles the width is applied, followed by a rotation
transformation that rotates drawing operations by a quarter turn, and a
rectangle twice as wide as it is tall is then drawn on the canvas, the actual
result will be a square. ...  This is incorrect. Rotation and scaling are
commutative. When a rectangle is rotated a quarter turn by changing the
coordinate space, the x-axis is vertical, and scaling up the x direction will
not compress the rectangle into a square. Instead, it will make it 4x as tall
as it is wide, just as it does if you scale first, then rotate.

Posted from: 67.116.239.5</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45630</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-02-15 20:32:47 +0000</bug_when>
            <thetext>*** Bug 12088 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45639</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-02-16 00:49:11 +0000</bug_when>
            <thetext>Rotation and scaling are not commutative.  E.g.,

[ 0 -1 ] [ 2 0 ] = [ 0 -1 ]
[ 1  0 ] [ 0 1 ] = [ 2  0 ],

but

[ 2 0 ] [ 0 -1 ] = [ 0 -2 ]
[ 0 1 ] [ 1  0 ] = [ 1  0 ],

which is different.  One of those matrices is a rotation matrix, and the other is a &quot;scaling&quot; matrix (meaning diagonal for our purposes, I guess).

In the particular example given, take a rectangle twice as wide as it is tall.  Do a quarter turn, so now it&apos;s twice as tall as it is wide.  Double the width, and it&apos;s square.  The spec is correct.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47894</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-03 20:11:17 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: see comment 2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52691</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:41 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12134</bug_id>
          
          <creation_ts>2011-02-19 13:15:00 +0000</creation_ts>
          <short_desc>Supporting dotted/dashed lines is definitely necessary</short_desc>
          <delta_ts>2011-08-04 05:04:12 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>9301</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#canvasrenderingcontext2d</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-cb6f5739347b2777a3a315cb53d31673</token>

      

      

          <long_desc isprivate="0">
            <commentid>45860</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-19 13:15:07 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#canvasrenderingcontext2d

Comment:
Supporting dotted/dashed lines is definitely necessary

Posted from: 95.244.107.165</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48000</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-04 23:33:30 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 9301 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52782</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:12 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12140</bug_id>
          
          <creation_ts>2011-02-19 19:10:00 +0000</creation_ts>
          <short_desc>Why is there no getTransform() method?</short_desc>
          <delta_ts>2012-03-28 21:49:04 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#transformations</bug_file_loc>
          <status_whiteboard>canvas v5</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>eoconnor@apple.com</cc>
    
    <cc>graveltech@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-676327fa30d7156573361abb02b46c9f</token>

      

      

          <long_desc isprivate="0">
            <commentid>45867</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-19 19:10:25 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#transformations

Comment:
Why is there no getTransform() method?

Posted from: 173.52.179.61</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45868</commentid>
            <who name="andrew morton">graveltech@gmail.com</who>
            <bug_when>2011-02-19 19:17:46 +0000</bug_when>
            <thetext>My use case is a LOGO interpreter in Javascript that does the drawing on the canvas. I&apos;m able to use transformations to draw the path of the turtle but if I draw the turtle then I need to clear the canvas before running the next command to avoid leaving a series of turtles. If I was able to load the transformation matrix I believe I could use it as a CSS transformation to position an image on top of the canvas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>45869</commentid>
            <who name="andrew morton">graveltech@gmail.com</who>
            <bug_when>2011-02-19 19:29:35 +0000</bug_when>
            <thetext>I guess I&apos;m not the only one wondering this:
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-July/027394.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48010</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-04 23:44:26 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: see diff given below
Rationale: This might make sense, but first we need to wait for implementations to catch up with what we&apos;ve implemented so far. I&apos;ve marked this &quot;LATER&quot; so that we will remember to revisit this in the future.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52720</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:50 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64774</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:29:33 +0000</bug_when>
            <thetext>Mozilla proposes &quot;attribute SVGMatrix currentTransform&quot; in:
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-November/033745.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64787</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 22:51:44 +0000</bug_when>
            <thetext>Adopted that as proposal: http://wiki.whatwg.org/wiki/Canvas#Misc_other_proposals</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>65856</commentid>
            <who name="Edward O&apos;Connor">eoconnor@apple.com</who>
            <bug_when>2012-03-20 18:05:49 +0000</bug_when>
            <thetext>See also Dean&apos;s unified-css-and-svg matrix proposal:

http://lists.w3.org/Archives/Public/public-fx/2012JanMar/0007.html

which was in response to

http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0376.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>66193</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-03-28 21:49:04 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: I&apos;ve used SVGMatrix for now.
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12187</bug_id>
          
          <creation_ts>2011-02-25 16:27:00 +0000</creation_ts>
          <short_desc>should drawImage throw for dw/dh==0?</short_desc>
          <delta_ts>2011-08-04 05:03:33 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-faf45ceefcf7b9e7b63c8184a8fed6dc</token>

      

      

          <long_desc isprivate="0">
            <commentid>46058</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-02-25 16:27:45 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#images

Comment:
should drawImage throw for dw/dh==0?

Posted from: 91.181.186.46 by ms2ger@gmail.com</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48063</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-05 08:08:04 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: No, why would it? Is this a trick question?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48181</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-05-06 12:05:20 +0000</bug_when>
            <thetext>Not sure what I thought when I filed this bug (it&apos;s been a while), but I noticed now that the domintro box states

&gt; If the numeric arguments don&apos;t make sense (e.g. the destination is a 0×0
&gt; rectangle), throws an INDEX_SIZE_ERR exception.

whereas the normative text requires this when the *source* is 0×0. It seems like either would likely be a mistake by the author, where debugging could be helped by an exception, though.

&gt; Is this a trick question?

Of course it is. Otherwise I wouldn&apos;t have asked.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48235</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-06 20:23:40 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Yeah that non-normative text is wrong. FIxed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48236</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-06 20:24:16 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6107.
Check-in comment: fix domintro block
http://html5.org/tools/web-apps-tracker?from=6106&amp;to=6107</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52674</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:33 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12239</bug_id>
          
          <creation_ts>2011-03-04 15:22:00 +0000</creation_ts>
          <short_desc>DrawImage() typographic error</short_desc>
          <delta_ts>2011-08-04 05:03:45 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="xham">graham.clift@am.sony.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-0d190fbb01bf68858b6f4560c3695010</token>

      

      

          <long_desc isprivate="0">
            <commentid>46328</commentid>
            <who name="xham">graham.clift@am.sony.com</who>
            <bug_when>2011-03-04 15:22:55 +0000</bug_when>
            <thetext>I believe there is a missing optional declaration in front of the dh parameter when dw is specified as optional.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>46337</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-03-04 16:57:22 +0000</bug_when>
            <thetext>Nope, according to WebIDL, any arguments following an optional argument are optional as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52706</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:45 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12260</bug_id>
          
          <creation_ts>2011-03-07 19:02:00 +0000</creation_ts>
          <short_desc>a a a a a a a</short_desc>
          <delta_ts>2011-08-04 05:04:04 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#shadows</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-f2f49cbc86d42effcde762728f0d7f50</token>

      

      

          <long_desc isprivate="0">
            <commentid>46463</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-03-07 19:02:50 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#shadows

Comment:
a a a a a a a

Posted from: 189.22.92.18
User agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.13 (KHTML, like Gecko) Chrome/9.0.597.107 Safari/534.13</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>46487</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-03-08 00:36:37 +0000</bug_when>
            <thetext>http://uncyclopedia.wikia.com/wiki/AAAAAAAAA!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52761</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:04 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12309</bug_id>
          
          <creation_ts>2011-03-15 18:55:00 +0000</creation_ts>
          <short_desc>Need to taint canvas when a non-CORS cross-site font is in the .font</short_desc>
          <delta_ts>2011-08-04 05:03:59 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonas Sicking">jonas@sicking.cc</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-4fc2bbf2c921da0fe32ca1afadac6582</token>

      

      

          <long_desc isprivate="0">
            <commentid>46727</commentid>
            <who name="Jonas Sicking">jonas@sicking.cc</who>
            <bug_when>2011-03-15 18:55:02 +0000</bug_when>
            <thetext>I can&apos;t currently find the text that defines how tainting works, but I seem to recall that the spec recently defined that if text was drawn using a cross-site font which was loaded without CORS opt-in, then the canvas should be tainted as to prevent getting pixel data from it.

However this needs to happen also if such a font wasn&apos;t actually used to draw into the canvas, but was attempted to be used. I.e. if you do something like

cx.font = &quot;fontA, fontB&quot;;
cx.fillText(str, 0, 0);

if fontA is a non-CORS cross-site font, but fontB isn&apos;t. Even if the text ends up being drawn using only fontB, that leaks information about which characters are in fontA and thus the canvas should be tainted.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48224</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-06 20:03:05 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Well, ok, but seriously, who&apos;s putting sensitive information into a font that&apos;s so sensitive that the very presence of a character gives something away? It&apos;s not like non-font files are going to accidentally be interpreted as fonts, either, this information has to have actually been put in a font somehow.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48225</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-06 20:03:39 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6105.
Check-in comment: taint canvas if we even _consider_ a cross-site font
http://html5.org/tools/web-apps-tracker?from=6104&amp;to=6105</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52747</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:59 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12394</bug_id>
          
          <creation_ts>2011-03-29 09:15:00 +0000</creation_ts>
          <short_desc>THis is good here</short_desc>
          <delta_ts>2011-08-04 05:04:17 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#interpolation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-6dd7fab63cd03443766d136c6bab00d6</token>

      

      

          <long_desc isprivate="0">
            <commentid>47024</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-03-29 09:15:43 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#interpolation

Comment:
THis is good here

Posted from: 122.162.121.204
User agent: Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.517.44 Safari/534.7</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47026</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-03-29 12:05:53 +0000</bug_when>
            <thetext>Very.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52796</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:17 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12410</bug_id>
          
          <creation_ts>2011-04-02 03:57:00 +0000</creation_ts>
          <short_desc>fillText needs stricter definitions so that it&apos;s 100% uniform</short_desc>
          <delta_ts>2011-12-02 17:56:13 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sirisian">warcraftthreeft@sbcglobal.net</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>excors@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-c459477ef8c3756cf56409b034867b78</token>

      

      

          <long_desc isprivate="0">
            <commentid>47097</commentid>
            <who name="Sirisian">warcraftthreeft@sbcglobal.net</who>
            <bug_when>2011-04-02 03:57:59 +0000</bug_when>
            <thetext>I tried to say this before about the problems with bilinear vs nearest neighbor rendering with images, but I think that Canvas 2D should define what fillText does in a stricter way so that it is more uniform across browsers.

Here&apos;s a simple pixel font example using a truetype font
http://assaultwars.com/javascript/fontface.html

IE9 currently handles this in a very sane way. It renders without cleartype support when using fillText which I believe should be the defined standard. That is when you render text it should fill the text with exactly the color you define without applying transformations for LCD striping (by using patented techniques).

Currently things look like this on each major browser:
IE9:
http://assaultwars.com/pictures/04b_03ComparisonIE9.png
http://assaultwars.com/pictures/04b_03ComparisonIE9Magnified.png
Chrome 10:
http://assaultwars.com/pictures/04b_03ComparisonChrome10.png
http://assaultwars.com/pictures/04b_03ComparisonChrome10Magnified.png
FF4:
http://assaultwars.com/pictures/04b_03ComparisonFF4.png
http://assaultwars.com/pictures/04b_03ComparisonFF4Magnified.png

This would also allow pixel fonts to be legible since they&apos;re currently not in most browsers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52726</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:51 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57076</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-21 17:17:53 +0000</bug_when>
            <thetext>Philip, any input on this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>60800</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-02 17:56:13 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: I don&apos;t really see why this is a canvas problem and not a TrueType problem. As far as Canvas goes, we don&apos;t define the anti-aliasing-level rendering detail, because that would be insane and would preclude optimisations for specific display types. If this makes for illegible text, please file bugs with the browsers.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12441</bug_id>
          
          <creation_ts>2011-04-06 21:40:00 +0000</creation_ts>
          <short_desc>Can arg1 of drawImage be just Element? If so, it can capture some of rendered subtree elements.</short_desc>
          <delta_ts>2011-08-04 05:03:14 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-78d1b35c6136d9ddbaf0c012b6b9e944</token>

      

      

          <long_desc isprivate="0">
            <commentid>47216</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-04-06 21:40:24 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#images

Comment:
Can arg1 of drawImage be just Element? If so, it can capture some of rendered
subtree elements.

Posted from: 72.44.133.133
User agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.34 Safari/534.24</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47266</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-04-08 11:56:08 +0000</bug_when>
            <thetext>FWIW, this is what Gecko implements.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49974</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:33:50 +0000</bug_when>
            <thetext>In non-chrome contexts? Isn&apos;t that a huge security vulnerability?

The number of ways this can go wrong seem quite spectacular  iframes are the obvious example, but also cross-origin videos, reflections of cross-origin images, plug-ins, SVG filter effects...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51063</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-07-14 22:31:01 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: see comment 2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52626</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:14 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12444</bug_id>
          
          <creation_ts>2011-04-07 21:56:00 +0000</creation_ts>
          <short_desc>Canvas rendering should be done in linear color space (gamma 1) and the result displayed in sRGB color space (approximately gamma 2.2)</short_desc>
          <delta_ts>2011-09-21 17:54:34 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Hugues De Keyzer">w3c@hugues.info</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>franko@microsoft.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-335b0f556724666e5bc473a098976ba4</token>

      

      

          <long_desc isprivate="0">
            <commentid>47240</commentid>
              <attachid>975</attachid>
            <who name="Hugues De Keyzer">w3c@hugues.info</who>
            <bug_when>2011-04-07 21:56:29 +0000</bug_when>
            <thetext>Created attachment 975
This image shows a comparison of a series of images computed incorrectly (ignoring the gamma) and correctly (done in linear space).

Canvas rendering should be done in linear color space (gamma 1) and the result displayed in sRGB color space (approximately gamma 2.2)

Conventional CRT monitors have a non-linear response of intensity to input voltage. This response is characterized by a power function. The displayed intensity is the input value raised to a power of about 2.5. This 2.5 value is called the gamma of the monitor. The input value represents the color value sent by the graphics adapter to the monitor. It can be represented by a value ranging from 0 (that represents black) to 1 (that represents the full intensity, white, (255 in unsigned 8-bit terms)).

Other computer monitors, like LCD monitors, also follow this gamma law. LCD monitors dont have the same physical response as CRT monitors, but computer LCD monitors emulate the CRT response to display values similarly to CRT monitors.

This gamma function completely changes how intensities (and thus colors) are displayed on the screen. All color values that are not exactly 0 or 1 (since applying a power function to these values leaves them unaffected) will be much darker than one might expect from their value. For example, a color of 0.5 will not be half as bright as 1, but actually 0.5^2.5 times, that is 0.177. This is much less than 0.5, almost 3 times darker. The color that is half as bright as white would be 0.5^(1 / 2.5), that is 0.758.

Most users are completely unaware of this, and this is actually not a problem at all. When they pick a color using a color picker, they choose a color by how it is displayed, not by its numerical value, thus unwittingly compensating the gamma.

Moreover, the human visual system is not linear but logarithmic. Because of this, a value will /feel/ for example half as bright when it is actually much darker. This is also why gamma is actually a good thing. Thanks to it, there is more data precision for darker values, to which the human eye is more sensitive. With only 8 bits of precision per color channel, it is not possible to store linear values without noticeable precision artifacts, while storing gamma-encoded values gives reasonable results.

As long as the system only directly displays colors chosen by users on the monitor, the gamma is not a problem. Where things become more tricky, is when gamma-encoded color values are used in computations. When this happens, problems arise. The bad news is that the vast majority of software that manipulate color values is doing this.

Yes. Averaging two color values by simply adding them and dividing the result by 2 will not give the correct result at all. For example, to compute the average of color values 0.01 and 0.79, simply doing 0.01 * 0.5 + 0.79 * 0.5, what would give 0.4, is incorrect. Indeed, the values must first be converted to their linear intensity by applying the gamma power. Then, the computation can be done. At the end, the result must be converted to be displayed on the screen, by applying the inverse of the gamma (this is called gamma correction). This gives the following computation: (0.01^2.5 * 0.5 + 0.79^2.5 * 0.5)^(1 / 2.5), what gives almost 0.6. That is a difference of 50%!

It is thus essential to take gamma into account when making computations with color values to have a correct result displayed on the monitor. When drawing on canvas, a lot of such computations is done: blending colors together, drawing antialiased shapes or text, scaling images,

Lets repeat this: antialiasing will not give good results if the gamma is not taken into account. Just open your favorite image editing software. Create a new image with a pure green background (0, 255, 0). Now select the most aggressive fuchsia (255, 0, 255). Draw antialiased text. Do you see dark edges around your characters? If you dont, I would like to know the name of your software :).

Now the good news is that because we are now aware of the situation, we can now handle things correctly.

The Internet has chosen sRGB as its standard color space. This color space has been defined in such a way that the vast majority of computers, that use a conventional computer monitor and dont do any color management, will comply (more or less) to the standard. sRGB defines an overall gamma of approximately 2.2. The reason it is 2.2 and not 2.5 is because the viewing conditions of sRGB assume a dimly lit environment (such as an office), which require a resulting gamma slightly above 1 for best results.

The sRGB gamma is not exactly 2.2, though. The standard defines a transformation that approximates a gamma 2.2 curve. The following functions should be used:

float sRGB_to_linear(float c)
{
    if (c &lt;= 0.04045)
    {
        return c / 12.92;
    }

    return pow((c + 0.055) / 1.055, 2.4);
}

float linear_to_sRGB(float c)
{
    if (c &lt;= 0.0031308)
    {
        return 12.92 * c;
    }

    return 1.055 * pow(c, 1 / 2.4) - 0.055;
}

To make computations with sRGB color values, the first step is to convert them all to linear with the first function. Then, the computation can be done (in a linear space, where all math works as expected :)). At the end, the result is converted from linear to sRGB with the second function and can be displayed. (The computations above done with a 2.5 gamma can easily be adapted to sRGB. The results will vary slightly, but the idea is the same. This is left as an exercise to the reader :).)

The attachment shows a comparison of a series of images computed incorrectly (ignoring the gamma) and correctly (done in linear space).

Now, about canvas. Because canvas can do all sort of interesting computations with colors, including alpha blending, antialiasing and image scaling, it should definitely do all those computations in a linear space.

The best way to achieve this, is to store all canvas pixels in floating-point in linear space. All sRGB input colors (being a single value or pixels from an image) would be converted to linear space and all operations would be done in floating-point. At display, the resulting image would be converted to sRGB. The problem with this approach is that it has high memory requirements and would maybe not be suitable for embedded devices.

Another possibility is to keep the canvas pixels stored in 8-bit sRGB (thus gamma-encoded), ready for display, but all operations that read from the canvas would receive color values converted on-the-fly to linear space. Like with the previous method, all computations would of course be done in linear space (preferably in floating-point), so any input sRGB color value (including image pixels) must be converted to linear, but this can of course be done one pixel at a time. When storing a pixel in the canvas, it would be converted on-the-fly to sRGB. Hardware acceleration already exists for this, as exposed by the GL_ARB_framebuffer_sRGB OpenGL extension (promoted to the core in OpenGL 3.0). The GL_EXT_texture_sRGB extension provides on-the-fly sRGB-to-linear color conversion and linear filtering for sRGB textures stored with 8 bits per color channel.

Functions giving access to pixel values (reading and writing) should exist in two variants: one using 8-bit sRGB values, and one using floating-point (or 16-bit integer) linear values.

With the above features, canvas would ensure the best possible rendering results, giving the web a powerful high-quality graphical component (even better than what most stand-alone applications frameworks are providing).


Here are some references on the subject.

Wikipedia - sRGB
http://en.wikipedia.org/wiki/SRGB

GPU Gems 3
The Importance of Being Linear
http://http.developer.nvidia.com/GPUGems3/gpugems3_ch24.html

Gamma Correction in Computer Graphics
http://www.teamten.com/lawrence/graphics/gamma/

Gamma error in picture scaling
http://www.4p8.com/eric.brasseur/gamma.html

John Hable - Uncharted 2: HDR Lighting
http://darkchris.ath.cx/papers/Uncharted%202%20-%20HDR%20Lighting.pdf

Gamma FAQ
http://www.poynton.com/GammaFAQ.html

Frequently-questioned answers about gamma - Gamma FQA
http://www.poynton.com/notes/color/GammaFQA.html

Wikipedia - Gamma correction
http://en.wikipedia.org/wiki/Gamma_correction

Simon&apos;s Graphics Blog
Gamma-Correct Rendering
http://www.sjbrown.co.uk/2004/05/14/gamma-correct-rendering/

What&apos;s wrong with 8-bit linear RGB?
(or, gamma is a feature, not a bug!)
http://tulrich.com/webgl/rgb/linear_vs_srgb.html

Martin Breidt - Be gamma correct!
http://scripts.breidt.net/tutorials.html#gamma

PNG Specification - Gamma Tutorial
http://www.libpng.org/pub/png/spec/1.2/PNG-GammaAppendix.html

Why use sRGB to store images?
http://mysite.verizon.net/spitzak/conversion/whysrgb.html

Yet Another Gamma Correction Page
http://www.graphics.cornell.edu/~westin/gamma/gamma.html


Hugues De Keyzer</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47242</commentid>
            <who name="Frank Olivier">franko@microsoft.com</who>
            <bug_when>2011-04-07 22:52:32 +0000</bug_when>
            <thetext>Please see http://lists.w3.org/Archives/Public/public-html/2010Mar/0144.html
for a discussion on HTML5 and color management. 
Also,
http://lists.w3.org/Archives/Public/public-canvas-api/2009OctDec/0001.html for
a discussion on color management and drawing images to canvas.

WRT &quot;and the result displayed in sRGB color space (approximately gamma 2.2)&quot;
from the bug title:

Based on data we collected some time ago, sRGB set as the display profile on
~70% of Windows PCs; the other 30% have a (non-sRGB) monitor-appropriate
profile assigned via Windows Update (most common) or the user calibration (less
common)

Wrt
http://www.w3.org/TR/html5/the-canvas-element.html#color-spaces-and-color-correction
It would be more useful to define a working color space for canvas elements to
clarify canvas element color management.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47275</commentid>
            <who name="Hugues De Keyzer">w3c@hugues.info</who>
            <bug_when>2011-04-08 17:45:57 +0000</bug_when>
            <thetext>(In reply to comment #1)
&gt; Please see http://lists.w3.org/Archives/Public/public-html/2010Mar/0144.html
&gt; for a discussion on HTML5 and color management. 
&gt; Also,
&gt; http://lists.w3.org/Archives/Public/public-canvas-api/2009OctDec/0001.html for
&gt; a discussion on color management and drawing images to canvas.

Hi,

Thanks for your reply.

Please note that the subject explained here indeed relates to color management, but it also differs highly from what color management usually implies. As far as I know, the goal of color management is to precisely define colors and ensure that colors are correctly interpreted, displayed and transfered from one device to the other. It will define how to convert from one color profile to another, but doesnt define how colors must be produced or interpreted as part of rendering computations. This is not only about interpreting and displaying colors, but more importantly, about how to correctly create them.

The subject of using a linear space for rendering is rather new (less than 10 years), is relatively hard to understand well, and is spreading slowly because of this. Once it is understood, it becomes obvious that this is clearly the way to go. It is now relatively well known and used by the film industry, and little by little also by the video game industry.

&gt; WRT &quot;and the result displayed in sRGB color space (approximately gamma 2.2)&quot;
&gt; from the bug title:
&gt; 
&gt; Based on data we collected some time ago, sRGB set as the display profile on
&gt; ~70% of Windows PCs; the other 30% have a (non-sRGB) monitor-appropriate
&gt; profile assigned via Windows Update (most common) or the user calibration (less
&gt; common)

The title should have been more correctly stated as  and the result output in sRGB color space. sRGB being the standard color space of the Internet, the resulting image should use the same color space as other colors on the page, like those used in CSS. If the computer display is using another color profile, the colors should be converted to that profile for display, like the other colors of the page (possibly in one conversion from linear to that color space).

&gt; Wrt
&gt; http://www.w3.org/TR/html5/the-canvas-element.html#color-spaces-and-color-correction
&gt; It would be more useful to define a working color space for canvas elements to
&gt; clarify canvas element color management.

What do you mean by working color space? If it is the color space in which the pixels are stored internally, I would advise either gamma-encoded sRGB in 8-bit or linear color space in floating-point (with the same primaries as sRGB, but with a gamma of 1). In either case, all rendering operations should be done in linear space, preferably in floating-point.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47340</commentid>
            <who name="Frank Olivier">franko@microsoft.com</who>
            <bug_when>2011-04-11 19:27:51 +0000</bug_when>
            <thetext>&gt; Please note that the subject explained here indeed relates to color management,
&gt; but it also differs highly from what color management usually implies. As far
&gt; as I know, the goal of color management is to precisely define colors and
&gt; ensure that colors are correctly interpreted, displayed and transfered from one
&gt; device to the other. It will define how to convert from one color profile to
&gt; another, but doesnt define how colors must be produced or interpreted as part
&gt; of rendering computations. This is not only about interpreting and displaying
&gt; colors, but more importantly, about how to correctly create them.
The change you are asking for has color management implications, which is why a discussion of the implicit color space of a canvas element is relevant.

&gt; The title should have been more correctly stated as  and the result output in
&gt; sRGB color space. sRGB being the standard color space of the Internet, the
&gt; resulting image should use the same color space as other colors on the page,
&gt; like those used in CSS. If the computer display is using another color profile,
&gt; the colors should be converted to that profile for display, like the other
&gt; colors of the page (possibly in one conversion from linear to that color
&gt; space).
It seems odd to ask for a floating point linear gamma representation of canvas pixels - only to output the result via sRGB? Why the arbitrary clamp?

&gt; What do you mean by working color space?
The implicit color space of a canvas element.

&gt; If it is the color space in which the pixels are stored internally...
Correct

&gt; I would advise either gamma-encoded sRGB in 8-bit
AFAIK this is how all user agents treat canvas today.

&gt; or linear color space in floating-point (with the same primaries as sRGB,
&gt; but with a gamma of 1).
This would a large architectural change for user agents; canvas elements would use a lot more memory and render slower.

&gt; In either case, all rendering operations should be done
&gt; in linear space, preferably in floating-point.
The author can do this with sRGB-to-linear conversions, if the color space of the canvas is known or assumed to be sRGB - IOW authors do create linear gamma drawing operations by calculating the &apos;correct&apos; color values themselves.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47454</commentid>
            <who name="Hugues De Keyzer">w3c@hugues.info</who>
            <bug_when>2011-04-14 20:12:57 +0000</bug_when>
            <thetext>(In reply to comment #3)
&gt; The change you are asking for has color management implications, which is why a
&gt; discussion of the implicit color space of a canvas element is relevant.

Yes, of course. I just wanted to point out that it is not limited to color management.

&gt; It seems odd to ask for a floating point linear gamma representation of canvas
&gt; pixels - only to output the result via sRGB? Why the arbitrary clamp?

A linear floating point color data representation represents the best possibility in terms of quality. This is what is used thoroughly now in computer graphics. For example, one of the most used file formats to store rendered images is OpenEXR, which stores pixel data in 16-bit floating point. Most high-end video games do all their rendering in floating-point off-screen textures that are composited and post-processed before being displayed in 8-bit sRGB.

Storing image data in floating-point has actually two advantages. The first advantage is precision. Because floating-point numbers have a precision that is relative to their value, they are very well suited for storing logarithmic values, and light intensity is perceived as logarithmic by the human visual system. The precision advantage is why I am recommending floating-point here (if possible).

The second advantage is the possible range of values. Floating-point numbers are not limited to a range from 0 to 1 (or 0 to 255). They can be thousands of times higher than 1, and even negative. Now, what is the point of such values, when displayed values will anyway be between 0 and 1? Indeed, the final result will have values between 0 and 1, but because image pixels are used in computations (blending, etc.), such values are important as intermediate values. With only values clamped between 0 and 1, (1 + 1) / 2 would be equal to 0.5 instead of 1, because no intermediate result higher than 1 can be stored. This can give ugly results. Fading out a picture containing out-of-range highlights (such as a picture of a landscape where the sun is visible) will make these highlights appear gray, while they should stay bright white. Take a look at the 4th OpenEXR sample picture (a desk in front of tainted glass) on the bottom of this page: http://www.openexr.com/samples.html. It represents the same image where values are scaled down. This would be impossible to do with values clamped between 0 and 1. These high dynamic range features are actually out of the scope of the subject of my first message, but if we really want the best possible results, they should be considered.

&gt; This would a large architectural change for user agents; canvas elements would
&gt; use a lot more memory and render slower.

Yes, indeed. That is why I propose the alternative method where conversions are done on-the-fly. This would require less memory but would be actually probably more CPU-intensive. Lookup tables can possibly be used to accelerate these operations. Ideally, this should be implemented in hardware.

&gt; &gt; In either case, all rendering operations should be done
&gt; &gt; in linear space, preferably in floating-point.
&gt; The author can do this with sRGB-to-linear conversions, if the color space of
&gt; the canvas is known or assumed to be sRGB - IOW authors do create linear gamma
&gt; drawing operations by calculating the &apos;correct&apos; color values themselves.

Indeed, some computations can be done manually. What I propose is that the results would be good by default. Most programmers are unaware of these gamma problems. Currently, simply drawing a circle or text gives wrong antialiasing (try with fuchsia on a green background, you get dark edges). Same thing for linear gradients (going from red to green shows a dark part in the middle). Same thing for everything actually, even if it not always obvious to detect. It would clearly be better if users had not to worry about it and get good results, optionally bypassing the system if they want more control.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52728</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:52 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57083</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-21 17:54:34 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: 

&lt;canvas&gt; has to use the same colour space as the rest of the Web, and that&apos;s already pretty much been resolved to be sRGB.

The spec does cover this:

http://www.whatwg.org/specs/web-apps/current-work/complete.html#color-spaces-and-color-correction</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>975</attachid>
            <date>2011-04-07 21:56:00 +0000</date>
            <delta_ts>2011-04-07 21:56:29 +0000</delta_ts>
            <desc>This image shows a comparison of a series of images computed incorrectly (ignoring the gamma) and correctly (done in linear space).</desc>
            <filename>sRGB_gamma_aware_rendering_comparison.png</filename>
            <type>image/png</type>
            <size>406396</size>
            <attacher>w3c@hugues.info</attacher>
            
              <token>1354054511-a9e5903a249f0bab4c1d532edb352a56</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>12520</bug_id>
          
          <creation_ts>2011-04-18 15:22:00 +0000</creation_ts>
          <short_desc>Why the word dirty for the arguments to putImageData? Normally, dirty refers to something that has changed, and I think that connotation infers that the rectangle may not be copied if it hasn&apos;t changed. However, that is not the case, as far as I can tell</short_desc>
          <delta_ts>2011-08-04 05:03:19 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#pixel-manipulation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-b8c312ce6931a47109cb114df19e37c5</token>

      

      

          <long_desc isprivate="0">
            <commentid>47528</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-04-18 15:22:31 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#pixel-manipulation

Comment:
Why the word dirty for the arguments to putImageData? Normally, dirty refers
to something that has changed, and I think that connotation infers that the
rectangle may not be copied if it hasn&apos;t changed. However, that is not the
case, as far as I can tell the rectangle is simply the source rectangle inside
the image. If that&apos;s the case, why not just name the variables sx, sy, sw, and
sh, which both avoids the confusing dirty connotation, and is consistent with
the other methods in CanvasRenderingContext2D?

Posted from: 184.96.136.128 by sabreware@gmail.com
User agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_4) AppleWebKit/534.29 (KHTML, like Gecko) Chrome/12.0.733.0 Safari/534.29</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49973</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:28:54 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: The idea is you&apos;re telling the browser what parts have changed, so that the browser knows which parts to copy.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52637</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:19 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12524</bug_id>
          
          <creation_ts>2011-04-19 23:11:00 +0000</creation_ts>
          <short_desc>It would be nice if you could see the pretty glowing lines</short_desc>
          <delta_ts>2011-08-04 05:03:46 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#examples</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-c475a2e8f0b0fe607a275005ed62196c</token>

      

      

          <long_desc isprivate="0">
            <commentid>47558</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-04-19 23:11:53 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#examples

Comment:
It would be nice if you could see the pretty glowing lines

Posted from: 67.180.99.41
User agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47968</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-04 18:27:49 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Who can argue with that.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47969</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-04 18:28:02 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6062.
Check-in comment: by request
http://html5.org/tools/web-apps-tracker?from=6061&amp;to=6062</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47989</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-04 23:15:01 +0000</bug_when>
            <thetext>Why is it base64-encoded in the source?  That makes me sad.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48002</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-04 23:34:21 +0000</bug_when>
            <thetext>What would make you happy?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48125</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-05 22:56:30 +0000</bug_when>
            <thetext>Not base64-encoding it, so it&apos;s readable in the source.  base64 data URLs are only really needed for binary formats, not HTML.  So just do something like

&lt;a href=&quot;data:text/html,&lt;!DOCTYPE HTML&gt;
&lt;html lang=en&gt;
 &lt;head&gt;
  &lt;title&gt;Pretty Glowing Lines&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
&lt;canvas width=800 height=450&gt;&lt;/canvas&gt;
&lt;script&gt;

 var context = document.getElementsByTagName(&apos;canvas&apos;)[0].getContext(&apos;2d&apos;);

 var lastX = context.canvas.width * Math.random();
 var lastY = context.canvas.height * Math.random();
 var hue = 0;
 function line() {
   context.save();
   context.translate(context.canvas.width/2, context.canvas.height/2);
   context.scale(0.9, 0.9);
   context.translate(-context.canvas.width/2, -context.canvas.height/2);
   context.beginPath();
   context.lineWidth = 5 + Math.random() * 10;
   context.moveTo(lastX, lastY);
   lastX = context.canvas.width * Math.random();
   lastY = context.canvas.height * Math.random();
   context.bezierCurveTo(context.canvas.width * Math.random(),
                         context.canvas.height * Math.random(),
                         context.canvas.width * Math.random(),
                         context.canvas.height * Math.random(),
                         lastX, lastY);

   hue = hue + 10 * Math.random();
   context.strokeStyle = &apos;hsl(&apos; + hue + &apos;, 50%, 50%)&apos;;
   context.shadowColor = &apos;white&apos;;
   context.shadowBlur = 10;
   context.stroke();
   context.restore();
 }
 setInterval(line, 50);

 function blank() {
   context.fillStyle = &apos;rgba(0,0,0,0.1)&apos;;
   context.fillRect(0, 0, context.canvas.width, context.canvas.height);
 }
 setInterval(blank, 40);

&lt;/script&gt;
 &lt;/body&gt;
&lt;/html&gt;&quot;&gt;pretty glowing lines&lt;/a&gt;

Or is that invalid for some reason?  I don&apos;t see why it should be.  It works fine in browsers.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48126</commentid>
            <who name="Simon Pieters">simonp@opera.com</who>
            <bug_when>2011-05-05 23:10:22 +0000</bug_when>
            <thetext>Pretty sure that&apos;s not a valid URL (for one it has spaces in it). V.nu says

Error: Bad value data:text/html,&lt;!DOCTYPE HTML&gt;... for attribute href on element a: Illegal character in path component.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48187</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-06 16:03:46 +0000</bug_when>
            <thetext>Why should it not be a valid URL, if it works in all browsers (assuming they support data URLs at all in this situation)?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48232</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-05-06 20:18:40 +0000</bug_when>
            <thetext>The script is _right there_ in the spec already.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48242</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-06 20:42:35 +0000</bug_when>
            <thetext>Um.  Well, okay, that&apos;s true.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52708</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:46 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12536</bug_id>
          
          <creation_ts>2011-04-20 22:01:00 +0000</creation_ts>
          <short_desc>measureText() needs to return the height as well as the width.</short_desc>
          <delta_ts>2011-08-04 05:03:41 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>7798</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#text-0</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-37345f53a927839e9182464daeff9d42</token>

      

      

          <long_desc isprivate="0">
            <commentid>47583</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-04-20 22:01:26 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#text-0

Comment:
measureText() needs to return the height as well as the width.

Posted from: 63.255.173.99
User agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49975</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:44:08 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 7798 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52695</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:41 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12580</bug_id>
          
          <creation_ts>2011-05-02 01:28:00 +0000</creation_ts>
          <short_desc>This sentence is a comma splice</short_desc>
          <delta_ts>2011-08-04 05:03:26 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#complex-shapes-(paths)</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-e2c2377e35d3ba16ba362e90917e7c03</token>

      

      

          <long_desc isprivate="0">
            <commentid>47837</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-02 01:28:22 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#complex-shapes-(paths)

Comment:
This sentence is a comma splice

Posted from: 64.131.13.109
User agent: Mozilla/5.0 (X11; Linux x86_64; rv:2.0) Gecko/20110404 Firefox/4.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49977</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:45:31 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Which sentence?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52656</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:26 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12583</bug_id>
          
          <creation_ts>2011-05-02 20:34:00 +0000</creation_ts>
          <short_desc>(sx, sy), (sx+sw, sy), (sx+sw, sy+sh), (sx, sy+sh) -&gt; should this not be (sx + sw - 1) etc?</short_desc>
          <delta_ts>2011-08-04 05:03:30 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#pixel-manipulation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-cabc6c4f0c4d38bd496ca3e637e59c89</token>

      

      

          <long_desc isprivate="0">
            <commentid>47840</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-02 20:34:50 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#pixel-manipulation

Comment:
 (sx, sy), (sx+sw, sy), (sx+sw, sy+sh), (sx, sy+sh) -&gt; should this not be (sx
+ sw - 1) etc?

Posted from: 198.54.202.250
User agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.60 Safari/534.24</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49978</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:49:59 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: No. The points are points, not pixels. They&apos;re giving the precise coordinates of the rectangle to copy; they&apos;re not giving pixel coordinates of the data in that rectangle. In fact there might be more or less than one pixel per unit coordinate.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52665</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:30 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12586</bug_id>
          
          <creation_ts>2011-05-03 02:13:00 +0000</creation_ts>
          <short_desc>Suggest using Typed Array for ImageData pixels. Add a new &apos;buffer&apos; attribute that references ArrayBuffer of the pixel data. Convert &apos;data&apos; (CanvasPixelArray) to Uint8Array view of &apos;buffer&apos;.</short_desc>
          <delta_ts>2012-02-29 23:32:09 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#canvaspixelarray</bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          <dependson>13800</dependson>
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>bzbarsky@mit.edu</cc>
    
    <cc>cam@mcc.id.au</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>kbr@google.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>travil@microsoft.com</cc>
    
    <cc>w3.org@martintribe.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-fab24710687d13e5b1832970ead75d72</token>

      

      

          <long_desc isprivate="0">
            <commentid>47856</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-03 02:13:48 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#the-canvas-state

Comment:
Suggest using Typed Array for ImageData pixels. Add a new &apos;buffer&apos; attribute
that references ArrayBuffer of the pixel data. Convert &apos;data&apos;
(CanvasPixelArray) to Uint8Array view of &apos;buffer&apos;.

Posted from: 99.20.208.90
User agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47857</commentid>
            <who name="Joel Martin">w3.org@martintribe.org</who>
            <bug_when>2011-05-03 02:20:07 +0000</bug_when>
            <thetext>If necessary &apos;CanvasPixelArray&apos; could be alias for Uint8Array type if it is believed that scripts are actually checking the type of CanvasPixelArray.

This accomplishes a couple things:
- consolidate binary array data types (focus browser optimization resources)
- allows developers to create a Uint32Array from the raw ArrayBuffer to access whole pixels at a time.

Typed Array views and the CanvasPixelArray definition are largely compatible (with the typed array definition actually having more power).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>47858</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-05-03 02:28:41 +0000</bug_when>
            <thetext>Note that Uint8Array doesn&apos;t have the same overflow/rounding semantics that CanvasPixelArray does.

In Gecko, CanvasPixelArray is implemented as a new typed array type called Uint8ClampedArray.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51721</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-07-29 01:30:21 +0000</bug_when>
            <thetext>It&apos;s not quite a typed array. For example, some of the TypedArray constructors don&apos;t make much sense, since the canvas pixel array is based on the underlying buffer and so the same dimensions can have different buffer sizes.

It might make sense to define some sort of relationship, though.

What&apos;s the implementation status of CanvasPixelArray in the various browsers, in terms of their relationship to TypedArrays? Does anyone else have an underlying ArrayBuffer like Gecko?

bz: Is the TypedArrayness of CanvasPixelArray in Gecko visible to JS in any way?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51725</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-07-29 02:29:14 +0000</bug_when>
            <thetext>&gt; bz: Is the TypedArrayness of CanvasPixelArray in Gecko visible to JS in any
&gt; way?

Yep.  The CanvasPixelArray is just a typed array, and you can do all the normal typed array stuff to it from JS: get the underlying ArrayBuffer, create other views on the data, construct subarrays, etc.  In fact, there is no CanvasPixelArray interface in Gecko at all at the moment; if you ask the .data of an imageData whether it&apos;s instanceof Uint8ClampedArrays you should get back true.

Furthermore, you can create Uint8ClampedArrays using the normal typed array constructors and then work with them.  And since the .data of imagedata is not readonly in Gecko at the moment you can assign one of those (or some other typed array, or a regular array) to it.

I&apos;m not sure all of this necessarily makes sense from a spec point of view; just describing what Gecko does right now.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51754</commentid>
            <who name="Joel Martin">w3.org@martintribe.org</who>
            <bug_when>2011-07-29 14:13:34 +0000</bug_when>
            <thetext>Actually, I think the gecko approach makes a lot of sense from a spec consistency and usefulness perspective. Typed arrays are the native data format for 3D Canvas (WebGL) interaction. It seems consistent that 2D Canvas data formats would also be typed arrays.

As I noted in comment #1 it would be really useful/efficient in some situations to be able to address 2D image data as whole pixels (Uint32Array or Uint32ClampedArray or whatever). Also, being able to move data back and forth easily between 2D Canvas and WebSockets, File API, etc seems like another plus from a spec consistency/simplicity perspective.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51800</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2011-07-30 00:40:51 +0000</bug_when>
            <thetext>In WebKit, CanvasPixelArray is currently a distinct type from the rest of the typed arrays. It owns its storage, which is distinct from that of the Canvas&apos;s backing store, and it doesn&apos;t expose it in the form of an ArrayBuffer. It would definitely be possible to respecify it as Uint8ClampedArray and add aliases (i.e., CanvasPixelArray == Uint8ClampedArray) for backward compatibility.

I&apos;d be glad to see this unification for all of the reasons mentioned here. If we do go down this route, I would strongly prefer to add only Uint8ClampedArray to the typed array spec, and not clamped versions of the other typed arrays, to avoid an explosion of the typed array types.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52772</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:07 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54667</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 03:12:52 +0000</bug_when>
            <thetext>Ok, Kenneth, can you add Uint8ClampedArray? Then I&apos;ll redefine the canvas in those terms.

No need to make an alias, I doubt anyone is relying on the old name since not everyone implements it anyway.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>56685</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2011-09-13 01:09:28 +0000</bug_when>
            <thetext>I apologize for the delay. Uint8ClampedArray has been added to the typed array editor&apos;s draft:

https://www.khronos.org/registry/typedarray/specs/latest/

Please send me any feedback, in particular any concerns over inheriting from Uint8Array (which made the IDL for both types slightly simpler).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>56688</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-09-13 04:06:22 +0000</bug_when>
            <thetext>There&apos;s an open item on whether after clamping Uint8ClampedArray should round or truncate.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58495</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2011-10-20 02:02:50 +0000</bug_when>
            <thetext>(In reply to comment #10)
&gt; There&apos;s an open item on whether after clamping Uint8ClampedArray should round
&gt; or truncate.

(Sorry for the delay, I didn&apos;t see this comment until now.)

After clamping, it should not matter; the values are guaranteed to be within the range that Uint8ClampedArray can represent internally. Rounding and truncation should produce the same results. Am I missing something?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58496</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-10-20 02:16:14 +0000</bug_when>
            <thetext>Yes, you are.  Consider a computation that in fact always produces values in the range 0-255 but is subject to the usual floating point rounding errors.  If you truncate, you will never get 255 out of it.

For many computations the end result of this as the computation is iterated is for all the color channels to collapse to 0...

So you really do want rounding.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58497</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2011-10-20 02:33:55 +0000</bug_when>
            <thetext>(In reply to comment #12)
&gt; Yes, you are.  Consider a computation that in fact always produces values in
&gt; the range 0-255 but is subject to the usual floating point rounding errors.  If
&gt; you truncate, you will never get 255 out of it.
&gt; 
&gt; For many computations the end result of this as the computation is iterated is
&gt; for all the color channels to collapse to 0...
&gt; 
&gt; So you really do want rounding.

Sorry for missing this on first glance.

It looks like this was fixed with the [Clamp] tweaks in the September 27 update to the Web IDL editors&apos; draft. See http://dev.w3.org/2006/webapi/WebIDL/#changes .</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58545</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-10-20 14:59:07 +0000</bug_when>
            <thetext>Yeah, IDL [Clamp] does the right thing.  If the typed array spec is defined via WebIDL, then we&apos;re probably all set.  (Though if it does, it needs various verbiage about sets of supported indices and such that it seems to be missing.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61362</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:26:48 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: part of the trunk merge
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64795</commentid>
            <who name="Kenneth Russell">kbr@google.com</who>
            <bug_when>2012-02-29 23:32:09 +0000</bug_when>
            <thetext>(In reply to comment #14)
&gt; Yeah, IDL [Clamp] does the right thing.  If the typed array spec is defined via
&gt; WebIDL, then we&apos;re probably all set.  (Though if it does, it needs various
&gt; verbiage about sets of supported indices and such that it seems to be missing.)

Sorry for letting this go so long, but the editor&apos;s draft of the typed array spec now defines the supported indexed properties. https://www.khronos.org/registry/typedarray/specs/latest/#7</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12705</bug_id>
          
          <creation_ts>2011-05-19 15:10:00 +0000</creation_ts>
          <short_desc>setTransform spec silent on what to do with singular matrices</short_desc>
          <delta_ts>2011-12-10 00:05:36 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Benjamin Peterson">benjamin@python.org</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>excors@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-9b7e284b28c2647a2f690ec9af783069</token>

      

      

          <long_desc isprivate="0">
            <commentid>48637</commentid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-19 15:10:37 +0000</bug_when>
            <thetext>The 2dcontext.setTransform method specification doesn&apos;t say how to react when passed a singular matrix.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48639</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-19 17:21:04 +0000</bug_when>
            <thetext>I&apos;d expect that if the transformation matrix is singular, nothing that&apos;s affected by the transformation matrix should be displayed, since it would make everything zero pixels thick.  What do browsers do?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48641</commentid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-19 17:44:26 +0000</bug_when>
            <thetext>WebKit apparently notes that it has a singular matrix and ignores every operation. Firefox doesn&apos;t handle it at all. Personally, I&apos;d like to see it throw an error, since using a singular matrix as a transform doesn&apos;t make much sense.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48642</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-19 17:56:06 +0000</bug_when>
            <thetext>Yeah, it probably does make the most sense to ignore it or throw an exception or something.  Problem: how do you define &quot;singular&quot;?  The arguments are doubles.  Do you require that the determinant of {{a, c}, {b, d}} be within epsilon of 0 for some specific epsilon?  What happens if you call transform() when the existing matrix and the matrix you passed to transform() both have determinants greater than epsilon in absolute value, but their product has a determinant smaller than epsilon?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48643</commentid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-19 18:04:20 +0000</bug_when>
            <thetext>Let
a b
c d
be a matrix where a, b, c, d are some floating point data type. We&apos;ll say it&apos;s singular iff a*d == c*b. This mostly defeats mistakes like passing the zero matrix or a simple non-invertible one. I&apos;m not sure why we&apos;d have to worry about them being close to equal. It should only arise with pathological matrices.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48649</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-19 22:16:38 +0000</bug_when>
            <thetext>You can *never* rely on equality for floating-point.  Rounding errors mean that basic mathematical identities don&apos;t hold, like (a*b)*c == a*(b*c) or (a/b)*b == a.  Having a determinant almost exactly zero wouldn&apos;t have to be pathological at all, it could be any matrix that went through some numeric operations.  For instance:

data:text/html,&lt;!doctype html&gt;&lt;script&gt;alert((10/3000 - 2 + 2)*3000 == 10)&lt;/script&gt;

alerts false in Firefox 4.0, Chrome 12 dev, and Opera 11.10.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48650</commentid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-19 23:49:58 +0000</bug_when>
            <thetext>I realize floating comparisons are bad, but it&apos;s what browsers currently use afaict.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48665</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-20 18:48:46 +0000</bug_when>
            <thetext>Do you have a specific test-case?  I don&apos;t know enough about canvas to easily make one, but I&apos;d be interested in fiddling and seeing how browsers behave here.  Your description in comment 2 makes it sound like WebKit doesn&apos;t handle singular matrices specially at all, it just draws everything with zero width.  If that&apos;s correct, presumably it behaves the same if the eigenvalues are both very small, not just if they&apos;re zero (since the width will round down to zero).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48666</commentid>
              <attachid>989</attachid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-20 20:29:25 +0000</bug_when>
            <thetext>Created attachment 989
singular and almost singular matrix example

Here is an example of a almost singular matrix and a singular matrix being used to transform.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48667</commentid>
            <who name="Benjamin Peterson">benjamin@python.org</who>
            <bug_when>2011-05-20 20:31:41 +0000</bug_when>
            <thetext>WebKit &quot;handles&quot; singular matrices by detecting when there are in effect and ignoring every operation on the canvas while they are.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48682</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-22 22:38:28 +0000</bug_when>
            <thetext>Your &quot;almost singular&quot; matrix isn&apos;t very close to singular at all.  It has a determinant of .00002.  That&apos;s quite a lot, since your lineWidth is 1999999.  Try something like this instead:

http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1002

If I set e to 0.0000001, Firefox draws the red square successfully.  If I add one more zero, so it&apos;s 0.00000001, Firefox doesn&apos;t draw anything, even though w(1 - e == 1) logs &quot;false&quot;.  WebKit seems to have the same magic threshold, after which it just ignores the operation (even though the width variable is large enough that it should really draw the big black line).  So it doesn&apos;t seem to be just testing whether it&apos;s actually singular, it looks like they&apos;re testing that it&apos;s just &quot;close&quot; to singular.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49966</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-06-21 06:14:13 +0000</bug_when>
            <thetext>Why can&apos;t implementations just do the maths as suggested by the spec? I don&apos;t understand why a special case is needed here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50116</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-06-22 20:51:52 +0000</bug_when>
            <thetext>I don&apos;t understand why either, but it seems like implementations do have the special case.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52790</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:14 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54671</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 05:49:15 +0000</bug_when>
            <thetext>This was also discussed on the WHATWG list:
   http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-June/thread.html#32229

Philip, any advice?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61361</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:26:24 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see recent diffs (sorry I don&apos;t have a specific revision to point to at this time)
Rationale: Concurred with reporter&apos;s comments.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>989</attachid>
            <date>2011-05-20 20:29:00 +0000</date>
            <delta_ts>2011-05-20 20:29:25 +0000</delta_ts>
            <desc>singular and almost singular matrix example</desc>
            <filename>singular.html</filename>
            <type>text/html</type>
            <size>858</size>
            <attacher>benjamin@python.org</attacher>
            
              <token>1354054511-40954cd31927fff506fc7f3e40368971</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>12716</bug_id>
          
          <creation_ts>2011-05-22 05:27:00 +0000</creation_ts>
          <short_desc>Porter duff names are confusing and currently not implemented consistently. Suggest using A*B + C*D formula. Where A,B,C,D can be Source, Destination, Source Alpha, DestAlpha, 0, 1, Inverse Source Alpha, Inverse Dest Alpha, and so on, similar to OpenGL/We</short_desc>
          <delta_ts>2011-08-11 02:57:44 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-globalcompositeoperation</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-4ded97c227c8349dbe941383e5869d1c</token>

      

      

          <long_desc isprivate="0">
            <commentid>48676</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-22 05:27:45 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-globalcompositeoperation

Comment:
Porter duff names are confusing and currently not implemented consistently.
Suggest using A*B + C*D formula. Where A,B,C,D can be Source, Destination,
Source Alpha, DestAlpha, 0, 1, Inverse Source Alpha, Inverse Dest Alpha, and
so on, similar to OpenGL/WebGL alpha blending.

Posted from: 76.97.146.128
User agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52764</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:04 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54664</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 02:57:44 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Please provide exact suggested replacement text. I&apos;m not qualified to write it.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12824</bug_id>
          
          <creation_ts>2011-05-30 22:11:00 +0000</creation_ts>
          <short_desc>This doesn&apos;t say how to serialize non-zero alpha values: how many digits should be used?  The correct answer is the minimum number necessary so that the resulting string evaluates to the same floating-point number as you started with.</short_desc>
          <delta_ts>2011-08-10 22:34:12 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#colors-and-styles</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>bzbarsky@mit.edu</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-009b6d9b75ea35c614ed2dd0b4cac0f7</token>

      

      

          <long_desc isprivate="0">
            <commentid>48936</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-30 22:11:46 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#colors-and-styles

Comment:
This doesn&apos;t say how to serialize non-zero alpha values: how many digits
should be used?  The correct answer is the minimum number necessary so that
the resulting string evaluates to the same floating-point number as you
started with.

Posted from: 68.175.61.233
User agent: Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.772.0 Safari/535.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48941</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-05-31 02:09:56 +0000</bug_when>
            <thetext>Actually, the correct answer may be to use however many are needed to ensure that your round-trip back to the same value you have now if you parse the result.

For example, consider a UA that stores alpha internally as an integer in the range [0, 255] (a very common thing to do; Presto, WebKit nightly, and Gecko all do it).  It most certainly cannot produce the original floating-point number when asked.  What it _can_ produce is a floating-point number which when parsed and converted to an integer in that range will produce the integer you start with.  In practice that means either 2 or 3 digits of precision.

I agree that this should be specified.

I&apos;ll attach a simple testcase that tests what browsers do right now for alpha values of 0 to 1 in steps of 0.001; it shows that Presto, Gecko, and WebKit all step up their serialized value only once every 0.004 or so, which means they&apos;re storing 250-ish distinct values, as I said above.

Note that of the three Gecko is the only one that even tries to make the serialized value look &quot;nice&quot; (in the sense of using the smallest number of digits that will round-trip to the same integer; this means that 0.1 ends up serialized as &quot;0.1&quot; and not &quot;0.09804&quot; (Chrome) or &quot;0.10196&quot; (Presto and Safari)).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48942</commentid>
              <attachid>991</attachid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-05-31 02:10:21 +0000</bug_when>
            <thetext>Created attachment 991
Testcase</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48956</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-05-31 14:20:49 +0000</bug_when>
            <thetext>(In reply to comment #1)
&gt; Actually, the correct answer may be to use however many are needed to ensure
&gt; that your round-trip back to the same value you have now if you parse the
&gt; result.

Good catch.

&gt; For example, consider a UA that stores alpha internally as an integer in the
&gt; range [0, 255] (a very common thing to do; Presto, WebKit nightly, and Gecko
&gt; all do it).

Should this be standardized?  It has some author-visible implications.  To start with, if alpha values are serialized as you suggest, setting and then reading back strokeStyle or fillStyle will give you a different number of digits in different UAs for the alpha, depending on how much internal precision they have.

More than that, presumably it will also be detectable by drawing some non-opaque things on top of each other and measuring the exact color of the result.  If everything gets clamped to 8-bit integers, the rounding will be different from if you use actual floats.

&gt; Note that of the three Gecko is the only one that even tries to make the
&gt; serialized value look &quot;nice&quot; (in the sense of using the smallest number of
&gt; digits that will round-trip to the same integer; this means that 0.1 ends up
&gt; serialized as &quot;0.1&quot; and not &quot;0.09804&quot; (Chrome) or &quot;0.10196&quot; (Presto and
&gt; Safari)).

Actually, this bug was prompted by the fact that WebKit just changed to more Gecko-like behavior here:

http://trac.webkit.org/changeset/87512

The commit summary said &quot;The number of decimals for alpha values between 0 and 1 is not specified, so match Gecko and Presto by returning the lowest number of decimals needed to represent the number&quot;, so my immediate reaction was to get the number of decimal places standardized.  (I don&apos;t know why it says &quot;and Presto&quot; -- I get the same results in Opera as you do.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>48961</commentid>
            <who name="Boris Zbarsky">bzbarsky@mit.edu</who>
            <bug_when>2011-05-31 15:58:36 +0000</bug_when>
            <thetext>&gt; setting and then reading back strokeStyle or fillStyle will give you a
&gt; different number of digits in different UAs for the alpha, depending on how
&gt; much internal precision they have.

Yep.  And if you required the same number of digits, then you could still detect the limited internal precision.

If you&apos;re asking whether the fact that alpha is stored as an integer in the range 0-255 should be standardized, the answer is &quot;maybe&quot;.  Right now the way floats are converted to such integers is not the same across UAs either, last I checked...  Standardizing makes some sense, but we need to be careful to not overconstrain future implementations that may want to allow a wider range of alpha values, assuming anyone would want that.  Worth a mailing list thread.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52635</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:18 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54643</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-10 22:34:01 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Accepted
Change Description: see diff given below
Rationale: Concurred with comments above.

I tried. Not sure I like the result.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54644</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-10 22:34:12 +0000</bug_when>
            <thetext>Checked in as WHATWG revision r6411.
Check-in comment: Try to tighten up the definition of how to serialise rgba() in canvas.
http://html5.org/tools/web-apps-tracker?from=6410&amp;to=6411</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>991</attachid>
            <date>2011-05-31 02:10:00 +0000</date>
            <delta_ts>2011-05-31 02:10:21 +0000</delta_ts>
            <desc>Testcase</desc>
            <filename>test.html</filename>
            <type>text/html</type>
            <size>485</size>
            <attacher>bzbarsky@mit.edu</attacher>
            
              <token>1354054511-933509d71bdcc81ac2bc829c2125232e</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>12826</bug_id>
          
          <creation_ts>2011-05-31 02:52:00 +0000</creation_ts>
          <short_desc>Changes the transformation matrix to apply a scaling transformation with the given characteristics.</short_desc>
          <delta_ts>2011-08-10 23:29:32 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#transformations</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-b833dd73394687f4f25c5dbc624d8702</token>

      

      

          <long_desc isprivate="0">
            <commentid>48944</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-05-31 02:52:42 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/complete/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#transformations

Comment:
Changes the transformation matrix to apply a scaling transformation with the
given characteristics.

Posted from: 218.66.13.65
User agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.82 Safari/534.16</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52693</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:41 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54650</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-10 23:29:32 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: I don&apos;t understand. Could you elaborate?</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12920</bug_id>
          
          <creation_ts>2011-06-09 07:00:00 +0000</creation_ts>
          <short_desc>Move caretBlinkRate from canvas context to a navigator interface</short_desc>
          <delta_ts>2011-12-09 23:25:25 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-70056f7171b327d164f833287b2b6f6d</token>

      

      

          <long_desc isprivate="0">
            <commentid>49365</commentid>
            <who name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</who>
            <bug_when>2011-06-09 07:00:15 +0000</bug_when>
            <thetext>We should move caretBlinkRate from the canvas context interface to a navigator interface, as it&apos;s a general system attribute that would be as useful when hacking up UI in SVG as in canvas.

See also previous discussion:

http://lists.w3.org/Archives/Public/public-html/2011Apr/0719.html

http://lists.w3.org/Archives/Public/public-canvas-api/2011JanMar/0049.html

NavigatorUserPreferences seems a reasonable name for such an interface.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52730</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:54 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61358</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:25:25 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: dropped it entirely</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12921</bug_id>
          
          <creation_ts>2011-06-09 07:04:00 +0000</creation_ts>
          <short_desc>Make caretBlinkRate a property not a method</short_desc>
          <delta_ts>2011-12-09 23:25:50 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-1435dafb7972b099752681bcdde2c26d</token>

      

      

          <long_desc isprivate="0">
            <commentid>49367</commentid>
            <who name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</who>
            <bug_when>2011-06-09 07:04:58 +0000</bug_when>
            <thetext>caretBlinkRate should be a property not a method for consistency with other DOM/BOM features (e.g. document.compatMode, navigator.userAgent) that query state rather than take action and do not need refinement with arguments.

See also previous discussion at:

http://lists.w3.org/Archives/Public/public-canvas-api/2011JanMar/0049.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52733</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:55 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61360</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:25:50 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: dropped it entirely</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12922</bug_id>
          
          <creation_ts>2011-06-09 07:10:00 +0000</creation_ts>
          <short_desc>Allow privacy exemption for caretBlinkRate</short_desc>
          <delta_ts>2011-12-09 23:25:42 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</reporter>
          <assigned_to>contributor@whatwg.org</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-5425a64fc0b0a358aa3a46d2a9077919</token>

      

      

          <long_desc isprivate="0">
            <commentid>49368</commentid>
            <who name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</who>
            <bug_when>2011-06-09 07:10:03 +0000</bug_when>
            <thetext>The HTML5 specification allows privacy exemptions to reporting navigator attributes in order to allow UAs to avoid fingerprinting.

As caretBlinkRate could be used for profiling, conformance requirements for caretBlinkRate should include such an exemption.

See also previous discussion at:

http://lists.w3.org/Archives/Public/public-html/2011Apr/0747.html

http://lists.w3.org/Archives/Public/public-canvas-api/2011JanMar/0049.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>49369</commentid>
            <who name="Jonas Sicking">jonas@sicking.cc</who>
            <bug_when>2011-06-09 07:14:19 +0000</bug_when>
            <thetext>It seems to me that the privacy implications of this property will overshadow its usefulness. Therefor I think it should instead be completely removed.

I personally have no plans to implement this feature in Firefox at this time. (Though since there is no such thing as an &quot;official mozilla position&quot;, this isn&apos;t an official mozilla position).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52645</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:23 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61359</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:25:42 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Partially Accepted
Change Description: no spec change
Rationale: dropped it entirely</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12932</bug_id>
          
          <creation_ts>2011-06-10 12:39:00 +0000</creation_ts>
          <short_desc>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In molestie sagittis nisl, eu porttitor magna lacinia ac. Suspendisse bibendum mattis massa, pulvinar sodales ante rhoncus a. Praesent semper, nisl sed ullamcorper vestibulum, ante ipsum posuere leo</short_desc>
          <delta_ts>2011-08-04 05:04:02 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#dom-context-2d-beginpath</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>julian.reschke@gmx.de</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-6cea8a448906d9f36878c521475a0775</token>

      

      

          <long_desc isprivate="0">
            <commentid>49415</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-06-10 12:39:05 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Section: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-context-2d-beginpath

Comment:
Lorem ipsum dolor sit amet, consectetur adipiscing elit. In molestie sagittis
nisl, eu porttitor magna lacinia ac. Suspendisse bibendum mattis massa,
pulvinar sodales ante rhoncus a. Praesent semper, nisl sed ullamcorper
vestibulum, ante ipsum posuere leo, nec blandit augue urna eu risus.
Pellentesque feugiat neque ac nunc pulvinar a sodales diam pretium. Maecenas
quis ullamcorper nibh. Pellentesque eu libero lorem, sed vestibulum nunc.
Donec id nisi tempus massa consequat ultrices consectetur fringilla risus.
Nullam sit amet nisi lacus, ac lacinia tellus. Class aptent taciti sociosqu ad
litora torquent per conubia nostra, per inceptos himenaeos. Vivamus sapien
neque, porttitor quis fringilla vel, pretium ac quam. Nunc aliquet accumsan
augue vitae posuere. Ut pharetra mauris sit amet lacus convallis id vehicula
arcu placerat. Donec sit amet erat arcu. Pellentesque a ligula velit.
Vestibulum dignissim mi nec arcu ornare sed rhoncus quam mollis. Cras turpis
libero, pharetra eget cursus vel, condimentum in velit. Nunc placerat mauris
sed massa consectetur sagittis.  Cras elit nibh, adipiscing sed elementum ac,
hendrerit vel nibh. Cras tempor ante id turpis vestibulum et varius tortor
tincidunt. Fusce convallis tempus arcu, quis placerat mi rutrum vel. Fusce
auctor est in mauris adipiscing vel commodo ligula vehicula. Cras vitae elit
purus. Cras vitae fermentum urna. Aliquam posuere faucibus ultrices. Proin
luctus venenatis ullamcorper. Cras ultrices vulputate mauris, quis dictum
purus blandit eget. Suspendisse risus orci, vestibulum sed vestibulum in,
dapibus id lacus. In sed rutrum turpis. Cras sit amet enim nisi, quis sagittis
sem. Donec id libero vel massa rutrum faucibus facilisis quis tellus.
Pellentesque in tincidunt erat. Integer sed placerat felis. Morbi vitae
tincidunt tortor.  Aenean sit amet tempus mi. In hac habitasse platea
dictumst. Mauris in molestie risus. Phasellus pharetra quam a lectus faucibus
ullamcorper. Ut convallis, sapien eu interdum sollicitudin, metus leo luctus
elit, quis scelerisque arcu est suscipit tortor. Proin et lorem vitae lectus
cursus condimentum. In metus tellus, mollis at fringilla vitae, accumsan id
sem. Cras nec quam lacus, sit amet feugiat tellus. Sed ac ligula elit. Nulla
vitae lorem orci, nec pulvinar est. Ut ultrices purus a erat gravida nec
molestie purus hendrerit. Vestibulum imperdiet commodo erat a tempor.
Phasellus a libero lectus. Vestibulum ante ipsum primis in faucibus orci
luctus et ultrices posuere cubilia Curae; Curabitur suscipit mi eget tortor
tempor pulvinar. Nam pharetra porta rhoncus. Nullam dolor nibh, ornare quis
elementum nec, commodo in tellus. Ut aliquet mollis facilisis. Vestibulum vel
arcu quam.  Aliquam vestibulum, tortor eget hendrerit semper, mauris leo
vehicula nulla, sed congue lacus magna in arcu. Praesent et lectus eu dui
bibendum tempor at et lacus. Ut ac ullamcorper tellus. Curabitur vestibulum
pellentesque purus, non facilisis turpis mattis molestie. Donec egestas
imperdiet purus ac tincidunt. Vestibulum euismod vehicula sollicitudin.
Aliquam in purus quis augue aliquet bibendum et eu dui. Quisque euismod leo
sed lectus tincidunt volutpat. Nullam sed pretium justo. In hac habitasse
platea dictumst. Sed semper, magna sed tempus sodales, lacus magna dapibus
nisl, et congue nisl mauris ut ipsum.  Sed a risus sapien, quis ullamcorper
risus. In cursus nunc vel nisi malesuada ultricies. Aliquam sit amet enim et
lectus ornare vehicula. Vivamus rutrum mollis erat in elementum. In hac
habitasse platea dictumst. Etiam porta egestas fermentum. Cras a enim nisl,
vel rhoncus mauris. Pellentesque viverra dolor augue, eu posuere nisl.
Maecenas tempor metus vel ante viverra blandit. Nullam eget est et metus
mattis rutrum. Ut rhoncus egestas urna vitae egestas. 

Posted from: 113.21.69.221
User agent: Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52758</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:02 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12960</bug_id>
          
          <creation_ts>2011-06-15 19:47:00 +0000</creation_ts>
          <short_desc>Self-referential annoyance</short_desc>
          <delta_ts>2011-08-04 05:03:39 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Samuel Bronson">naesten@gmail.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>annevk@annevk.nl</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-0ae09bc7782fc072af48ddbdacf294b5</token>

      

      

          <long_desc isprivate="0">
            <commentid>49644</commentid>
            <who name="Samuel Bronson">naesten@gmail.com</who>
            <bug_when>2011-06-15 19:47:31 +0000</bug_when>
            <thetext>The version of this document at http://dev.w3.org/html5/2dcontext/ has that annoying &quot;work in progress&quot; box floating at the bottom of the viewport, asking the reader to look at http://dev.w3.org/html5/2dcontext/ instead.

Reminds me of what happens when you google &quot;recursion&quot;...

(Also, the &quot;Feedback Comments&quot; CGI is telling me I need JavaScript enabled when it already is enabled.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50129</commentid>
            <who name="Anne">annevk@annevk.nl</who>
            <bug_when>2011-06-22 22:04:32 +0000</bug_when>
            <thetext>Works fine here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52686</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:39 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>12987</bug_id>
          
          <creation_ts>2011-06-18 10:36:00 +0000</creation_ts>
          <short_desc>u hb  h  jhu uu.</short_desc>
          <delta_ts>2011-08-04 05:04:00 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#2dcontext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>julian.reschke@gmx.de</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-a9a87c3396d3a9ba2d8e35b15965c5e1</token>

      

      

          <long_desc isprivate="0">
            <commentid>49829</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-06-18 10:36:19 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#2dcontext
Complete: http://www.whatwg.org/c#2dcontext

Comment:
u hb  h  jhu uu.

Posted from: 59.145.221.50
User agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.100 Safari/534.30</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52749</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:00 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13022</bug_id>
          
          <creation_ts>2011-06-23 08:23:00 +0000</creation_ts>
          <short_desc>The whitespace formatting of the interface is really inconsistent (tabs vs spaces?)</short_desc>
          <delta_ts>2011-08-04 05:03:26 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#2dcontext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P5</priority>
          <bug_severity>trivial</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>Ms2ger@gmail.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-1156e2f0db20539e5906acd70449bdc3</token>

      

      

          <long_desc isprivate="0">
            <commentid>50146</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-06-23 08:23:49 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#2dcontext
Complete: http://www.whatwg.org/c#2dcontext

Comment:
The whitespace formatting of the interface is really inconsistent (tabs vs
spaces?)

Posted from: 77.170.248.186
User agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_6) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.797.0 Safari/535.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50171</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-06-23 16:47:55 +0000</bug_when>
            <thetext>There are no tabs, but some of the interface elements are indented by eight spaces instead of two.  I can&apos;t see any reason to it, so I assume it&apos;s a mistake.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50263</commentid>
            <who name="Ms2ger">Ms2ger@gmail.com</who>
            <bug_when>2011-06-24 18:33:51 +0000</bug_when>
            <thetext>{
  readonly attribute ...
           attribute unsigned long width;
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50279</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-06-24 20:12:36 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are
satisfied with this response, please change the state of this bug to CLOSED. If
you have additional information and would like the Editor to reconsider, please
reopen this bug. If you would like to escalate the issue to the full HTML
Working Group, please add the TrackerRequest keyword to this bug, and suggest
title and text for the Tracker Issue; or you may create a Tracker Issue
yourself, if you are able to do so. For more details, see this document:

   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: See comment 2.  It&apos;s meant to have the word &quot;attribute&quot; line up when there are both readonly attributes and non-readonly attributes.  Looks weird, but it&apos;s intentional.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52654</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:26 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13085</bug_id>
          
          <creation_ts>2011-06-29 10:44:00 +0000</creation_ts>
          <short_desc>Enhancement: Set component for whole image?</short_desc>
          <delta_ts>2011-12-02 20:56:24 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>under discussion</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="j.chetwynd">j.chetwynd@btinternet.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>plh@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-98349e1c09c25022091320916f3f51e8</token>

      

      

          <long_desc isprivate="0">
            <commentid>50449</commentid>
            <who name="j.chetwynd">j.chetwynd@btinternet.com</who>
            <bug_when>2011-06-29 10:44:11 +0000</bug_when>
            <thetext>CanvasPixelArray requires &quot;pixel&apos;s red, green, blue, and alpha components being given in that order for each pixel.&quot;

However in many cases, anyone one or more of these components may be common to all the pixels in the image, for instance the alpha may be common to all pixels, or as at http://www.peepo.com, only red is varied with green = 127, blue = 127  and alpha = 63 for all canvas pixels.

if this isn&apos;t appropriate please could someone in the WG please clarify why this is best done by setting all four components, for each and every pixel? or perhaps more likely, what aspect I have failed to understand?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50460</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-06-29 18:20:42 +0000</bug_when>
            <thetext>Yes, if a particular component is identical for every pixel in your canvas, just fill it in the same for every pixel.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50466</commentid>
            <who name="j.chetwynd">j.chetwynd@btinternet.com</who>
            <bug_when>2011-06-29 19:46:23 +0000</bug_when>
            <thetext>#1 your solution relates to the current practice, but not this enhancement bug: Set component for whole image.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50468</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-06-29 20:36:20 +0000</bug_when>
            <thetext>Oh, sorry, I misread your email.  You&apos;re asking for clarification as to why setting everything is necessary.

The answer is simplicity.  Most use-cases will be adjusting all four components, so there&apos;s not much value to fixing one or more components steady.

The one case that&apos;s relatively high-value is creating an &quot;opaque&quot; canvas where the alpha is held at 255.  Mozilla is currently handling this with a moz-opaque attribute.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50469</commentid>
            <who name="j.chetwynd">j.chetwynd@btinternet.com</who>
            <bug_when>2011-06-29 21:04:28 +0000</bug_when>
            <thetext>no doubt the alpha case for opacity is most likely to be the popular one currently, see CSS.
However it is readily apparent there is an excellent use case for data visualisation with each of RGB.

peepo.com provides a simple example using canvas, common to many maps, click on the board and observe the change in red saturation, screengrab:
http://www.flickr.com/photos/49932622@N05/5623363217/in/photostream/lightbox/

Screens tend to grow with processor speed, and experience (CSS?) suggests that changing a single component at the browser/graphics chip level would considerably reduce temporal artefacts.

perhaps a more complex example might be similar to colour separation as used in printmaking.
for instance the opacity of each colour layer may more easily be related to the hue.

It is possible to manipulate this all on a pixel basis, it certainly appears slower and more complex than the aformentioned CSS method.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50482</commentid>
            <who name="j.chetwynd">j.chetwynd@btinternet.com</who>
            <bug_when>2011-06-30 04:25:45 +0000</bug_when>
            <thetext>please provide a rationale for changing priority</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50492</commentid>
            <who name="j.chetwynd">j.chetwynd@btinternet.com</who>
            <bug_when>2011-06-30 11:05:44 +0000</bug_when>
            <thetext>bug 13096 - Enhancement: Set single component for pixel is related.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50519</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-06-30 20:33:09 +0000</bug_when>
            <thetext>(In reply to comment #5)
&gt; please provide a rationale for changing priority

See the bug priority policy as announced by the chairs:

http://lists.w3.org/Archives/Public/public-html/2011Jun/0315.html

I usually give P5 to feature requests (because they&apos;ll often be left alone for a long time) and P4 to minor non-technical issues like typos (because they should be fixed sooner), but there&apos;s no real difference and I&apos;m not so consistent.  Normally I&apos;ll give P2 or P3 to feature requests only if they&apos;re particularly important or urgent.

The policy outlines what the bug originator should do if they disagree with the bug&apos;s assigned priority.  I could link to the policy every time I change a bug&apos;s priority, but it would be clutter on almost every new bug, and most people don&apos;t care.

Hope that helps.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>60848</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-02 20:56:24 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Is there a specific change request here? I don&apos;t really understand what the problem is.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13176</bug_id>
          
          <creation_ts>2011-07-07 18:07:00 +0000</creation_ts>
          <short_desc>The bounds of canvas fallback content, as rendered on the canvas, are not provided by the user agent to an assistive technology.</short_desc>
          <delta_ts>2012-10-23 12:45:09 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas RFE</status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas, WGDecision</keywords>
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="Jay Munro">jaymunro@microsoft.com</assigned_to>
          <cc>bhawkeslewis@googlemail.com</cc>
    
    <cc>cabanier@adobe.com</cc>
    
    <cc>chuck@jumis.com</cc>
    
    <cc>eoconnor@apple.com</cc>
    
    <cc>faulkner.steve@gmail.com</cc>
    
    <cc>franko@microsoft.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>mjs@apple.com</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>rubys@intertwingly.net</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-d3070d97f9f9e166eee807931426e0e5</token>

      

      

          <long_desc isprivate="0">
            <commentid>50787</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-07 18:07:07 +0000</bug_when>
            <thetext>In HTML, SVG, desktops, and mobile devices an author has the ability to bind the bounds of object drawn on the screen to the object that provides the accessibility information. The bounds of the object are defined by the path or in less complicated systems - a rectangle. No such feature is provide for natively in canvas.

In canvas, the subtree is used to represent a 1:1 mapping of objects rendered on the physical canvas for the purpose of providing keyboard navigable objects that can expose accessibility semantics to the browser to support platform accessibility APIs. What is missing is the ability to defined the bounds of the associated object drawn on the canvas. 

There are some questionable work arounds where the subtree elements can be rendered transparently, using CSS, with a higher Z order above the canvas element. Yet, this would require the author to manage: 
- bounds transformations based on the canvas transformation matrix
- adjustment of the bounds based on scrolling or moving of the browser on the screen

This is a very expensive management barrier to accessibility when the user agent could simply provide the ability to bind retained paths for bounds of the object on canvas to the subtree element and use it to also perform hit testing. This would allow the user agent to route pointer events directed at the canvas object to the same element in the canvas subtree that processes the keyboard events. It also allows user agents to supply the bounds of the object being drawing to the corresponding accessible object generated from the canvas subtree element like all GUIs today. 

Without the bounds of an object:

- mobile screen readers like VoiceOver cannot detect the existence of accessible objects when you move your finger over them on canvas
- screen magnifiers cannot find the location of the object to zoom to it
- screen readers cannot orient objects on the same line to drive Braille devices

This is a very serious problem that should not be left up to developer hacking. It needs to supported by the user agent transparently to the author which is why employing retained paths, defining the bounds of objects, to the accessible objects in the canvas subtree to support hit testing would be the easiest vehicle for developers to provide the bounds of an object to an assistive technlogy.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50807</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-07 22:43:56 +0000</bug_when>
            <thetext>See also bug: http://www.w3.org/Bugs/Public/show_bug.cgi?id=13181</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50893</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-07-11 09:22:26 +0000</bug_when>
            <thetext>Related:

Argument for the approval of adding setElementPath to the Canvas 2d specification.
http://lists.w3.org/Archives/Public/public-html-comments/2011Jul/0004.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50949</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-07-12 22:24:26 +0000</bug_when>
            <thetext>I don&apos;t understand the subject matter well enough to resolve this, and it seems like none of the other editorial assistants do either (or they&apos;re not interested).  I suspect the eventual resolution will be WONTFIX, so I&apos;ll raise the priority to P1 to get the process moving faster, per the PriorityRequest keyword.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50952</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-07-12 22:41:46 +0000</bug_when>
            <thetext>(In reply to comment #3)
&gt; I don&apos;t understand the subject matter well enough to resolve this, and it seems
&gt; like none of the other editorial assistants do either (or they&apos;re not

Technical summary
http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0187.html

Authors require the ability to pass path information to the UA accessibility API in order to identify the screen location of elements in the shadow dom to assistive technologies.

The most basic information expressed is a bounding box.

An AT may navigate the DOM and select an element of interest (such as selecting a form element), for example: &lt;canvas&gt;&lt;button /&gt;&lt;/canvas&gt; - it may examine the bounding box of the dom element and do something with that information such as drawing a big high contrast ring around the area or scrolling to the area.

When canvas is active, the shadow dom is not visible to the end user, but it can be navigated. Were the canvas author able to run a method, similar to drawFocusRing(element), they could inform the UA accessibility API of the bounds of the element. I&apos;ve proposed setElementPath as the method name.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51571</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-27 18:32:58 +0000</bug_when>
            <thetext>To Areyh, I understand you are not a subject matter expert. Consequently, I put its importance back to major. 

That said, Jonas Sicking has a proposal is close to what I had been asking for on the list. I will be working with Jonas to incorporate what he is changing into the same change proposal:

http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0195.html

The net of this is that the path association with the element is sufficient to allow the user agent to use the path to compute the bounds of an object and set it in the platform accessibility API implementation. Furthermore, a future API modification for web apps might be to scroll an element into view based on the bounds of the object stored in the browser. This capability will be of particular assistance to Google which is targeting AT browser extensions.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51629</commentid>
            <who name="Laura Carlson">laura.lee.carlson@gmail.com</who>
            <bug_when>2011-07-28 13:17:48 +0000</bug_when>
            <thetext>Related WHATWG IRC discussion:
http://krijnhoetmer.nl/irc-logs/whatwg/20110728#l-53</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51684</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-07-28 20:04:33 +0000</bug_when>
            <thetext>Per WHATWG Bugzilla conventions, moving this to &quot;blocker&quot; as &quot;major&quot; is unused.
http://wiki.whatwg.org/wiki/Bugzilla_conventions#Severities

This bug affects Mobile Safari on iOS, making it almost unusable. It also affects vendors targeting the windows desktop, supporting IAccessible / MSAA, as their accessibility trees are lacking sufficient information to respond to accLocation requests. As such, I believe it falls under P1 &quot;blocker&quot; per WHATWG conventions.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52639</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:20 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54669</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 04:59:40 +0000</bug_when>
            <thetext>Wouldn&apos;t SVG be the right solution to this? Surely using &lt;canvas&gt; when you are expecting a user to interact with the app via a tactile interface rather than through sight is just misusing canvas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54682</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-08-11 08:09:05 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; Wouldn&apos;t SVG be the right solution to this? Surely using &lt;canvas&gt; when you are
&gt; expecting a user to interact with the app via a tactile interface rather than
&gt; through sight is just misusing canvas.

Boundaries are used for both sight-oriented and eyes-free UIs. This includes ZoomText and VoiceOver. No, SVG is not an adequate solution for this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54683</commentid>
            <who name="steve faulkner">faulkner.steve@gmail.com</who>
            <bug_when>2011-08-11 08:29:00 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; Wouldn&apos;t SVG be the right solution to this? Surely using &lt;canvas&gt; when you are
&gt; expecting a user to interact with the app via a tactile interface rather than
&gt; through sight is just misusing canvas.

So are you saying that canvas interactvity should not be allowed on touch based interfaces?
If so can you get the browser vendors to remove the ability to make canvas interactive?

If developers can not use canvas to provide interactive content they will be forced to use SVG, if you truly believe that this bugs premises are based on misuse of canvas then convince vendors to remove the ability for developers to misuse it.
Otherwise users with disabilities will be the losers in your moral crusade to dictate to developers how canvas should be used. &apos;Just Say No&apos; didn&apos;t work to stem drug use or promiscuity abd it won&apos;t work for canvas.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54691</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-08-11 12:55:15 +0000</bug_when>
            <thetext>SVG is an alternate solution should someone wish to use vector graphics. Not everyone chooses to do that. SVG accessibility infrastructure is a long way off. What is important is that both SVG and canvas support platform accessibility infrastructure. I have been working both efforts in parallel. That said, due to the ubiquity of HTML it is first in the priority list for accessibility. Canvas is part of HTML.

There has already been extensive discussion on the list for this. I don&apos;t see any point in doing it again here. 

I am going to work with Jonas to provide a change proposal based on one of his posts.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54753</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-08-11 22:46:37 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; Wouldn&apos;t SVG be the right solution to this? Surely using &lt;canvas&gt; when you are
&gt; expecting a user to interact with the app via a tactile interface rather than
&gt; through sight is just misusing canvas.

One more comment on this, because it occurred to me, that perhaps the WWHATWG editor does not understand accessibility testing. There is no expectation that the user will  &quot;interact&quot; via any particular interface, tactile or otherwise. The purpose is to expose information to the operating system / UA, that&apos;s all. From there, we certainly test usability, but that&apos;s a separate issue for app developers, not browser vendors.

Further, eyes-free use does not necessarily mean that the user, or other observers are not looking or able to look at the screen.

Circling back: drawFocusRing is not sufficient for driving screen magnification nor Apple&apos;s VoiceOver. It only works for an element that is in focus, and some magnification and touch-based interfaces do not send focus-events until after the user has initiated one. drawFocusRing works for many use cases, and should be used via onfocus events. It&apos;s not adequate for the remaining cases which rely on IAccessible accLocation and do not trigger focus. By adding a new method to the canvas api, as we have proposed a setClickableRegion(element), similar to drawFocusRing, the information can be exposed to the OS / UA, and used.

I hope that helps. The checkbox example in the WHATWG spec would benefit from setClickableRegion. Currently, it will-not work on VoiceOver in Mobile Safari. It would require only one-line, to fix that, if setClickableRegion were supported.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55008</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-08-14 23:51:52 +0000</bug_when>
            <thetext>This bug was marked as P1 over 30 days ago, and still hasn&apos;t been RESOLVED.

Editors: please RESOLVE it ASAP.  NEEDSINFO and WONTFIX are valid resolutions
for this part of the process.  We simply want to get this bug to a state where
we are prepared to accept change proposals should anybody be inclined to
produce such.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57124</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-21 22:42:35 +0000</bug_when>
            <thetext>For touch and keyboard navigation, it&apos;s up to the author to implement the appropriate feedback mechanisms; it doesn&apos;t need extra help from the system accessibility API. For example, CSS3 UI&apos;s properties can be used to specify the elements in various navigation directions.

Zooming is handled already by the focus ring APIs.

In general, however, using &lt;canvas&gt; for something that can be sanely interacted with in non-visual mediums is completely counter to the point of &lt;canvas&gt;. If your content is media-independent, then use HTML, that&apos;s what it&apos;s for.

EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Rejected
Change Description: no spec change
Rationale: Already sufficiently supported.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57146</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-22 11:38:43 +0000</bug_when>
            <thetext>Ian, screen magnifiers have the requirement to zoom to any object on the canvas without changing focus. This requirement came form AI Squared - the producer of the leading screen magnifier on Windows. To do this they require the bound of an object as they have come to expect from platform accessibility API since 1995. Moving focus does not resolve this issue. 

Touch creates an additional problem in that moving your fingers across the UI, and zooming, would require an association with the bounds of the object on canvas which is also not supplied.  In the case of VoiceOver for screen reading a use is able to move their fingers across HTML content and associate the object with the rendered position so that VoiceOver may speak the object under which the user is pointing. When this occurs, the focus is NOT moved. In fact the user wants to be able to browse without moving focus. In &lt;canvas&gt; no such positioning information exists. Canvas is indeed used to render objects. They don&apos;t even need to be interactive, yet the user still needs to know their position.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57159</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-09-22 16:29:17 +0000</bug_when>
            <thetext>(In reply to comment #15)
&gt; Zooming is handled already by the focus ring APIs.

Zooming is -partially- handled by the focus ring APIs. It&apos;s counter to WCAG to require that an AT focus on an element prior to the user confirming their intent to activate that focus. While authors could plausibly loop through every interactive element, to share that information, such as solution is rather inefficient and also seems counter-indicative of current practices. Generally, when an element loses focus from drawFocusRing, I&apos;d think that the accessibility tree would also remove its &quot;focus&quot; dimensions.

Let me know if that&apos;s unclear.
 
&gt; In general, however, using &lt;canvas&gt; for something that can be sanely interacted
&gt; with in non-visual mediums is completely counter to the point of &lt;canvas&gt;. If
&gt; your content is media-independent, then use HTML, that&apos;s what it&apos;s for.

Begging your re-evaluation here: the purpose is for canvas to be sanely interacted with as a spatial medium. &quot;Non-visual&quot; is a much more broad term.

Canvas is very much a spatial language. Yes, it has paint servers. But most of the data passed around is data about spatial coordinates. These bug reports relate current defects on various ATs relating to spatial navigation. I do not think it&apos;s practical to tell AT vendors that they are &quot;wrong&quot; in their implementations. All accessibility trees share this spatial information as part of their data set.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57366</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-09-26 20:34:31 +0000</bug_when>
            <thetext>We had an agreement for 1 month turn around for P1 bugs, and this is well past that point.  As such, if anybody wishes to escalate this, they can do so at this time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57368</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-09-26 20:52:38 +0000</bug_when>
            <thetext>We confirmed that this is an issue for AT vendors in January:
&quot;[Vendors] need the screen location of all content with or without focus... the bounding rectangle of each element in screen coordinates (or client coordinates if we know the relative top-left)&quot;

http://lists.w3.org/Archives/Public/public-canvas-api/2011JanMar/0000.html

I spoke to several developers at the SVG F2F in Seattle about the issue.
http://lists.w3.org/Archives/Public/public-svg-wg/2011JulSep/0059.html

Perhaps the editor would have an easier time discussing this with Cameron McCormack, as he was present at the meeting. Jonas Sickling has offered a proposal similar to the one that the public-canvas-api group developed in early 2011.

I have since narrowed down that API to one method, instead of three. The very point of this API is to &quot;use HTML&quot;, which is something the editor seems to misunderstand. We are using HTML in the Canvas subtree. We need to inform the system about the spatial positioning of those HTML elements.

This would also inform element.scrollIntoView, in effect, harmonizing the Canvas subtree with the rest of the HTML display DOM.

FWIW: scrollPathIntoView is an interesting response to setCaretSelectionRect, and one I think should be reviewed by the W3C and AT vendors.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57372</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-26 21:25:58 +0000</bug_when>
            <thetext>I was avoiding an escalation as I believe that Ian closed it without having adequate information in his decision. We believe he has that now (see my response below). The task force was waiting a week for a response from Ian before we actually escalated it. 

If you think we need to escalate this to have it resolve then please consider this an escalation. 

Note: I might add that no proposal is being filed on this as I am waiting for Maciej to respond with the last proposal related to Issue 131. Maciej stated that he needs all changes to the spec. be made against the existing one in draft and he wants diffs. We are waiting on that one to be processed first. I understand Maciej is on vacation. 

Please advise.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57455</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-09-27 23:42:26 +0000</bug_when>
            <thetext>(In reply to comment #20)
&gt; 
&gt; If you think we need to escalate this to have it resolve then please consider
&gt; this an escalation. 

If it is not a priority at this time, consider dropping the priority.  If it is a priority, consider writing a Change Proposal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57512</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-29 15:35:18 +0000</bug_when>
            <thetext>Note: I spoke with David Bolter at Mozilla this week and he stated that they plan on implementing a solution for this by Q1 2012. That includes defect:
http://www.w3.org/Bugs/Public/show_bug.cgi?id=13181</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57535</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-29 23:19:39 +0000</bug_when>
            <thetext>I&apos;ll speak with David about what he had in mind.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57551</commentid>
            <who name="steve faulkner">faulkner.steve@gmail.com</who>
            <bug_when>2011-09-30 09:27:21 +0000</bug_when>
            <thetext>(In reply to comment #23)
&gt; I&apos;ll speak with David about what he had in mind.

It would be best for all stakeholders if discussion occurs on a public mailing list not in secret.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57558</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-30 13:02:27 +0000</bug_when>
            <thetext>Ian, 

Great. Specifically, Jonas Sickling has a proposal that we want to work to implement. David knows about it. What we are looking for is something like this proposal from Jonas. I plan on writing the change proposal with input from Jonas. I would like you input on it:

http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0195.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58071</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-10-11 19:43:57 +0000</bug_when>
            <thetext>Reminder: a failure to escalate this bug by January 14th, 2012 will result in this bug no longer being treated as a last call comment:

  http://lists.w3.org/Archives/Public/public-html/2011Jun/0315.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58285</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-10-17 05:28:23 +0000</bug_when>
            <thetext>(In reply to comment #26)
&gt; Reminder: a failure to escalate this bug by January 14th, 2012 will result in
&gt; this bug no longer being treated as a last call comment:
&gt; 
&gt;   http://lists.w3.org/Archives/Public/public-html/2011Jun/0315.html


This is marked as a P1 issue: what further escalation procedures should occur? This issue is holding me up. I&apos;d really like to go out and let Canvas developers know about the a11y layer. Many of the vendor representatives in these discussions do not use Canvas. And it shows.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58286</commentid>
            <who name="Benjamin Hawkes-Lewis">bhawkeslewis@googlemail.com</who>
            <bug_when>2011-10-17 07:44:04 +0000</bug_when>
            <thetext>(In reply to comment #27)
&gt; This is marked as a P1 issue: what further escalation procedures should occur?

Escalation as a Tracker Request as per comment #15.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61125</commentid>
            <who name="Frank Olivier">franko@microsoft.com</who>
            <bug_when>2011-12-07 20:37:20 +0000</bug_when>
            <thetext>I would like to see a mechanism like this...
http://www.w3.org/wiki/Canvas_hit_testing
...added to the spec to address this issue; solving hit testing and the bounds issue with one spec change.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61328</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 21:58:48 +0000</bug_when>
            <thetext>BTW, it would be helpful if this wiki page (or another but with the same structure) could be filled in documenting precisely what it is that needs addressing here:

   http://wiki.whatwg.org/wiki/Canvas#Limitations_of_real-world_use_cases

See also bug 13578.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61478</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-12-13 04:23:56 +0000</bug_when>
            <thetext>(In reply to comment #30) 
&gt;    http://wiki.whatwg.org/wiki/Canvas#Limitations_of_real-world_use_cases

The whatwg wiki to be restricted from accepting new users. Here is a summary from Tab, based on the conversations he and I had on the public-canvas-api list. He is simply summarizing, not advocating any position in this summary. He is acting more as an editor in this case, trimming down the long discussions I had with him -- the &quot;I&quot; in this writing is referring to me.

&quot;&quot;&quot;
Platform accessibility APIs only need a fairly limited amount of
information to communicate with the user.  The information we can
currently expose with a combination of the subtree, drawFocusRing, and
scrollPathIntoView fill in *almost* all of that information.  The only
remaining hole is the location of &quot;active&quot; regions.

This can be somewhat obtained post-facto by focusing everything in the
subtree and seeing what geometry is exposed by drawFocusRing.  This
could, unfortunately, have other side effects (such as actually
drawing focus rings), and amounts to polling, with all the undesirable
details that entails, as the clickable regions may change over time.
Actively declaring the regions up-front produces a much better story
for accessibility and performance purposes.

As with drawFocusRing and scrollPathIntoView, we can attach useful
functionality to this so that authors will use it to help themselves,
and the a11y benefits just come along for the ride.  Specifically, if
you associate a clickable region of the canvas with an element in the
subtree via setClickableRegion(element), we can make clicks within
that region dispatch to the associated element instead of the canvas,
making it easier to listen for clicks on &quot;objects&quot; in the canvas.  I
believe that anything authors would want to use this functionality for
is a useful thing to expose to the AT API.
&quot;&quot;&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62558</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-11 17:58:03 +0000</bug_when>
            <thetext>Provide location information to assistive technology.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62625</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-12 22:28:58 +0000</bug_when>
            <thetext>Issue Title: Provide canvas location and hit testing capability to fallback content 

Issue text: Provide a facility to assign location information for rendered child of fallback content and provide a way to do hit testing within the location of the rendered child such that pointer events may be dispatched to the rendered child. The dimensions defining the location may be provided to an assistive technology, such as a magnifier, to determine the objects location on the screen. 

Both bugs 13181 and 13176 must be associated with this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62702</commentid>
            <who name="Frank Olivier">franko@microsoft.com</who>
            <bug_when>2012-01-13 23:50:55 +0000</bug_when>
            <thetext>[Copying comment from 13578; related bug]
I have written up some proposed spec text at
http://www.w3.org/wiki/Canvas_hit_testing for this change; the text includes
the rationale for this change.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62703</commentid>
            <who name="Frank Olivier">franko@microsoft.com</who>
            <bug_when>2012-01-13 23:51:11 +0000</bug_when>
            <thetext>[Copying comment from 13578; related bug]
I have written up some proposed spec text at
http://www.w3.org/wiki/Canvas_hit_testing for this change; the text includes
the rationale for this change.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62796</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-01-16 23:14:26 +0000</bug_when>
            <thetext>https://www.w3.org/html/wg/tracker/issues/201</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62831</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-01-18 01:55:43 +0000</bug_when>
            <thetext>Changed status per: http://lists.w3.org/Archives/Public/public-html/2012Jan/0087.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64708</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 00:06:05 +0000</bug_when>
            <thetext>Reclosing since this is marked TrackerIssue, but note that I intend to address this very shortly in a pretty comprehensive manner. See http://wiki.whatwg.org/wiki/Canvas#Regions for details.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>73153</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-09-02 14:13:33 +0000</bug_when>
            <thetext>Decision:

  http://lists.w3.org/Archives/Public/public-html/2012Aug/0453.html

Selected Change Proposal:

  http://www.w3.org/html/wg/wiki/index.php?title=User:Eoconnor/ISSUE-201&amp;oldid=13386</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76912</commentid>
            <who name="rcabanie">cabanier@adobe.com</who>
            <bug_when>2012-10-22 17:45:27 +0000</bug_when>
            <thetext>Issue-201 applied - http://lists.w3.org/Archives/Public/public-html/2012Aug/0453.html 

EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are
satisfied with this response, please change the state of this bug to CLOSED. If
you have additional information and would like the Editor to reconsider, please
reopen this bug. If you would like to escalate the issue to the full HTML
Working Group, please add the TrackerRequest keyword to this bug, and suggest
title and text for the Tracker Issue; or you may create a Tracker Issue
yourself, if you are able to do so. For more details, see this document:

   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: resolved as fixed
Description: Added back in the features:
dashed lines
ellipses
path objects &amp; path methods
Additional TextMetrics features

That were removed earlier for issue-201.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76913</commentid>
            <who name="rcabanie">cabanier@adobe.com</who>
            <bug_when>2012-10-22 17:47:46 +0000</bug_when>
            <thetext>Decision applied for Issue-201</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76938</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-10-23 01:27:36 +0000</bug_when>
            <thetext>Rick, Sam, What happens if we don&apos;t get implementation of the path features for HTML5? Is this re-opened. I recall that this feature was &quot;at risk&quot; for HTML5. This is a process question.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76939</commentid>
            <who name="rcabanie">cabanier@adobe.com</who>
            <bug_when>2012-10-23 03:06:55 +0000</bug_when>
            <thetext>(In reply to comment #42)
&gt; Rick, Sam, What happens if we don&apos;t get implementation of the path features
&gt; for HTML5? Is this re-opened. I recall that this feature was &quot;at risk&quot; for
&gt; HTML5. This is a process question.

As far I know, if there is no implementation, this feature will be removed from the spec that is going to LC/RC.
However, it will stay in the spec for the next version of HTML5.1 canvas since the WG resolved to have this feature. (The API&apos;s might change if there is browser/user feedback)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76940</commentid>
            <who name="Maciej Stachowiak">mjs@apple.com</who>
            <bug_when>2012-10-23 03:12:44 +0000</bug_when>
            <thetext>To clarify, removal of features with no implementations will likely only happen towards the end of CR, not necessarily on entry to CR. Though there is a process to request early removal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>76957</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-10-23 12:45:09 +0000</bug_when>
            <thetext>I am satisfied with the response. I have closed the bug. Thank you.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13181</bug_id>
          
          <creation_ts>2011-07-07 22:43:00 +0000</creation_ts>
          <short_desc>Canvas does not allow mouse events to be directed to keyboard accessible objects in fallback content</short_desc>
          <delta_ts>2012-11-15 17:35:26 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>canvas RFE</status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas, NotInW3CSpecYet, TrackerIssue</keywords>
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>eoconnor@apple.com</cc>
    
    <cc>faulkner.steve@gmail.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
    
    <cc>rubys@intertwingly.net</cc>
    
    <cc>tink@tink.co.uk</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-05f687a61977165c39848b128024bba8</token>

      

      

          <long_desc isprivate="0">
            <commentid>50805</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-07 22:43:22 +0000</bug_when>
            <thetext>This is an annoying problem with canvas. You have to have to apply keyboard and and mouse handlers on entirely different objects. The keyboard handler can be applied to a fallback content element that it belongs to, yet the pointing device handlers have to be applied to an entirely different element &lt;canvas&gt; for all the drawing objects in canvas. 

This could be addressed by creating defining drawing paths in canvas and binding them to canvas fallback content that they are associated with. The pointing device events could be dispatched to the fallback content element in response to a hit. If the drawing paths were assigned a z-order a simple pointInPath() call could be used to assess the hit. If no path is hit the event would pass down to the canvas element just as it does today. 

See the related bug: http://www.w3.org/Bugs/Public/show_bug.cgi?id=13176</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>50981</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-07-13 22:14:15 +0000</bug_when>
            <thetext>Didn&apos;t see this.  Promoting to P1 for the same reason as bug 13176 comment 3.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52777</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:09 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54668</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 04:57:19 +0000</bug_when>
            <thetext>Do you have a URL to a page showing this problem?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55007</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-08-14 23:51:48 +0000</bug_when>
            <thetext>This bug was marked as P1 over 30 days ago, and still hasn&apos;t been RESOLVED.

Editors: please RESOLVE it ASAP.  NEEDSINFO and WONTFIX are valid resolutions
for this part of the process.  We simply want to get this bug to a state where
we are prepared to accept change proposals should anybody be inclined to
produce such.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57367</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-09-26 20:34:42 +0000</bug_when>
            <thetext>We had an agreement for 1 month turn around for P1 bugs, and this is well past that point.  As such, if anybody wishes to escalate this, they can do so at this time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57373</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-26 21:34:33 +0000</bug_when>
            <thetext>Ian, the only way to add a mouse handler in canvas is to bind it to the canvas element. However, keyboard events do go to the actual fallback content itself as representations of objects that are drawn on canvas. At this stage I can&apos;t:

place three buttons in fallback content, and  
place them in the keyboard navigation order, and 
produce three corresponding drawing objects on canvas, and
place a on click handler on the individual buttons in fallback content and receive the events when a click occurs on those buttons renderings on canvas directy. 

Rather I would have to place the onclick handler on the canvas element and perform the hit testing to dispatch the onclick to the fallback content elements. That is why the bug is filed.

You don&apos;t have to write an example to prove it. 

Sam, if you feel it is necessary to escalate this please let me know. As far as I can tell this has not been closed or reopened. It is marked new.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57456</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-09-27 23:42:30 +0000</bug_when>
            <thetext>(In reply to comment #6)
&gt; 
&gt; Sam, if you feel it is necessary to escalate this please let me know. As far as
&gt; I can tell this has not been closed or reopened. It is marked new.

If it is not a priority at this time, consider dropping the priority.  If it is a priority, consider writing a Change Proposal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57513</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-29 15:35:55 +0000</bug_when>
            <thetext>Note: I spoke with David Bolter at Mozilla this week and he stated that they plan on implementing a solution for this by Q1 2012. That includes defect:
http://www.w3.org/Bugs/Public/show_bug.cgi?id=13176</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57534</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-29 23:19:35 +0000</bug_when>
            <thetext>I&apos;ll speak with David about what he had in mind.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57552</commentid>
            <who name="steve faulkner">faulkner.steve@gmail.com</who>
            <bug_when>2011-09-30 09:27:52 +0000</bug_when>
            <thetext>(In reply to comment #9)
&gt; I&apos;ll speak with David about what he had in mind.

It would be best for all stakeholders if discussion occurs on a public mailing list not in secret</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>58072</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2011-10-11 19:44:00 +0000</bug_when>
            <thetext>Reminder: a failure to escalate this bug by January 14th, 2012 will result in this bug no longer being treated as a last call comment:

  http://lists.w3.org/Archives/Public/public-html/2011Jun/0315.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61357</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:24:58 +0000</bug_when>
            <thetext>BTW, it would be helpful if this wiki page (or another but with the same
structure) could be filled in documenting precisely what it is that needs
addressing here:

   http://wiki.whatwg.org/wiki/Canvas#Limitations_of_real-world_use_cases

See also bug 13176.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62557</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-11 17:56:56 +0000</bug_when>
            <thetext>Provide location information to assistive technology.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62624</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-12 22:28:43 +0000</bug_when>
            <thetext>Issue Title: Provide canvas location and hit testing capability to fallback content 

Issue text: Provide a facility to assign location information for rendered child of fallback content and provide a way to do hit testing within the location of the rendered child such that pointer events may be dispatched to the rendered child. The dimensions defining the location may be provided to an assistive technology, such as a magnifier, to determine the objects location on the screen. 

Both bugs 13181 and 13176 must be associated with this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62795</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-01-16 23:13:49 +0000</bug_when>
            <thetext>https://www.w3.org/html/wg/tracker/issues/201</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62830</commentid>
            <who name="Sam Ruby">rubys@intertwingly.net</who>
            <bug_when>2012-01-18 01:55:39 +0000</bug_when>
            <thetext>Changed status per: http://lists.w3.org/Archives/Public/public-html/2012Jan/0087.html</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>62968</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2012-01-20 22:58:35 +0000</bug_when>
            <thetext> Additional information for the editor: http://wiki.whatwg.org/wiki/Canvas#Limitations_of_real-world_use_cases</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>64711</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2012-02-29 00:08:33 +0000</bug_when>
            <thetext>Reclosing since this is marked TrackerIssue, but note that I intend to address
this very shortly in a pretty comprehensive manner. See
http://wiki.whatwg.org/wiki/Canvas#Regions for details.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>78363</commentid>
            <who name="Léonie Watson">tink@tink.co.uk</who>
            <bug_when>2012-11-15 17:35:26 +0000</bug_when>
            <thetext>Comment via Rich Schwerdtfeger:

We have a hit testing proposal that includes paths that have been applied to canvas under the section Hit Regions. This allows an author to route mouse events to fallback content where the fallback element is bound to a closed path on canvas. Specifically, the addHitRegion has a control argument which refers to a fallback content element to which the events would be routed.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13261</bug_id>
          
          <creation_ts>2011-07-14 20:31:00 +0000</creation_ts>
          <short_desc>Canvas Clipping</short_desc>
          <delta_ts>2011-08-11 02:31:47 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="David Bradbury">davidmbradbury@gmail.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-5969f9a37409930dae3aa51c414eaae0</token>

      

      

          <long_desc isprivate="0">
            <commentid>51049</commentid>
            <who name="David Bradbury">davidmbradbury@gmail.com</who>
            <bug_when>2011-07-14 20:31:01 +0000</bug_when>
            <thetext>I&apos;m currently developing a mobile application using the canvas element to be deployed for Android, iPad, iPhone, and other mobile devices which support the canvas element. In this application, we are using overhead maps, and to decrease rendering time, we are cropping these maps with the &quot;context.clip();&quot; method (originally we had just rendered the whole map and painted over the outer regions).

This ended up causing some issues, as once you have defined a clipping region, you cannot modify or otherwise change it. Our solution was to use the &quot;context.save();&quot; and &quot;context.restore();&quot; before and after our clipping in order to continue to draw elsewhere, but it seems that there should be either a way to add to the clipping region (such as setting it to the width/height of the canvas element as it does when the element is first initiated), or being able to clear the clip.

I&apos;ve put together some small examples to demonstrate what we tried, and our solution:

What we tried - http://jsfiddle.net/v7e32/

Our solution - http://jsfiddle.net/eCegg/

If there are any other question you have, let me know.

David Bradbury</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51466</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-07-26 03:07:54 +0000</bug_when>
            <thetext>The way to clear the clip is to save() before it and restore() after it. I don&apos;t understand the problem. Can yo elaborate on why that isn&apos;t sufficient?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52711</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:46 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54656</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-11 02:31:47 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: see comment 1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13367</bug_id>
          
          <creation_ts>2011-07-26 14:16:00 +0000</creation_ts>
          <short_desc>The non-normative part says &quot;throws an INVALID_STATE_ERR&quot; but the normative part says &quot;must return&quot;, not mentioning any exceptions.</short_desc>
          <delta_ts>2011-08-04 05:03:22 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-ee07d821e4d6c83c5d2862a54be464ca</token>

      

      

          <long_desc isprivate="0">
            <commentid>51481</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-07-26 14:16:11 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#images
Complete: http://www.whatwg.org/c#images

Comment:
The non-normative part says &quot;throws an INVALID_STATE_ERR&quot; but the normative
part says &quot;must return&quot;, not mentioning any exceptions.

Posted from: 2001:4c28:a030:30:448e:735e:6a30:16e5
User agent: Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51484</commentid>
            <who name="James Graham">jgraham@opera.com</who>
            <bug_when>2011-07-26 14:18:15 +0000</bug_when>
            <thetext>*** Bug 13368 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51506</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-07-26 22:17:02 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are
satisfied with this response, please change the state of this bug to CLOSED. If
you have additional information and would like the Editor to reconsider, please
reopen this bug. If you would like to escalate the issue to the full HTML
Working Group, please add the TrackerRequest keyword to this bug, and suggest
title and text for the Tracker Issue; or you may create a Tracker Issue
yourself, if you are able to do so. For more details, see this document:

   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Additional Information Needed
Change Description: no spec change
Rationale:

The non-normative text says: &quot;If the image has no image data, throws an INVALID_STATE_ERR exception.&quot;

The normative text says: &quot;If the image argument is an HTMLCanvasElement object with either a horizontal dimension or a vertical dimension equal to zero, then the implementation must raise an INVALID_STATE_ERR exception.&quot;

So I don&apos;t see the problem.  Please clarify.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52644</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:22 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13368</bug_id>
          
          <creation_ts>2011-07-26 14:16:00 +0000</creation_ts>
          <short_desc>The non-normative part says &quot;throws an INVALID_STATE_ERR&quot; but the normative part says &quot;must return&quot;, not mentioning any exceptions.</short_desc>
          <delta_ts>2011-08-04 05:04:20 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>13367</dup_id>
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#images</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jgraham@opera.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-defcc78d1ad59b643623fc5bfa11eb83</token>

      

      

          <long_desc isprivate="0">
            <commentid>51482</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-07-26 14:16:17 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#images
Complete: http://www.whatwg.org/c#images

Comment:
The non-normative part says &quot;throws an INVALID_STATE_ERR&quot; but the normative
part says &quot;must return&quot;, not mentioning any exceptions.

Posted from: 2001:4c28:a030:30:448e:735e:6a30:16e5
User agent: Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51483</commentid>
            <who name="James Graham">jgraham@opera.com</who>
            <bug_when>2011-07-26 14:18:15 +0000</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 13367 ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52801</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:04:20 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13391</bug_id>
          
          <creation_ts>2011-07-27 16:53:00 +0000</creation_ts>
          <short_desc>Add a ScrollElementIntoView function</short_desc>
          <delta_ts>2011-09-22 16:33:03 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords>a11y, a11ytf, a11y_canvas</keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rich Schwerdtfeger">schwer@us.ibm.com</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ayg@aryeh.name</cc>
    
    <cc>chuck@jumis.com</cc>
    
    <cc>eoconnor@apple.com</cc>
    
    <cc>ian@hixie.ch</cc>
    
    <cc>jonas@sicking.cc</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-1ee676d536300294467762b786317fbc</token>

      

      

          <long_desc isprivate="0">
            <commentid>51562</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-27 16:53:14 +0000</bug_when>
            <thetext>Canvas drawing elements are associated with elements in fallback content to support accessibility. These elements may be keyboard accessible and they are designed to provide semantics to platform accessibility API in the user agent. Also, these elements must have associated bounds within the canvas drawing space. Native  (in-browser) assistive technologies may wish to zoom these elements into view such that when coupled with the built in magnification features of today&apos;s browsers an in browser magnifier would be able to use this function to assist in zooming to the location of an entire drawing object that does not have focus.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51581</commentid>
            <who name="Aryeh Gregor">ayg@aryeh.name</who>
            <bug_when>2011-07-27 22:06:30 +0000</bug_when>
            <thetext>Is there something wrong with the existing scrollIntoView method defined by CSSOM View?

http://dev.w3.org/csswg/cssom-view/#dom-element-scrollintoview</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>51630</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-07-28 13:18:42 +0000</bug_when>
            <thetext>Aryeh,

Thanks for the question. This is dependent on these two bugs having a change proposal written which I have not submitted yet:

http://www.w3.org/Bugs/Public/show_bug.cgi?id=13181
http://www.w3.org/Bugs/Public/show_bug.cgi?id=13176

Where I plan to write a change proposal based on Jonas&apos; post:
http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0195.html

Here we would be assigning drawing paths to elements. Do you think that the CSS layout will support bound drawing paths? If you think so then we may not need this. If you are sure that it will then I can close this.


Rich</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52629</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:17 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55450</commentid>
            <who name="Jonas Sicking">jonas@sicking.cc</who>
            <bug_when>2011-08-18 23:19:01 +0000</bug_when>
            <thetext>If we add the API that I proposed in
http://lists.w3.org/Archives/Public/public-canvas-api/2011JulSep/0195.html
then no more API would be needed. The normal scrollIntoView API from CSSOM View would be sufficient.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55453</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-08-18 23:58:38 +0000</bug_when>
            <thetext>Do we want to address CSSOM further? It seems getBoundingClientRect / getClientRects would work as well, with Jonah&apos;s proposal.

http://www.w3.org/TR/cssom-view/#the-getclientrects-and-getboundingclientrect-methods</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55454</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-08-19 00:00:28 +0000</bug_when>
            <thetext>(In reply to comment #5)
&gt; Do we want to address CSSOM further? It seems getBoundingClientRect /
&gt; getClientRects would work as well, with Jonah&apos;s proposal.
&gt; 
&gt; http://www.w3.org/TR/cssom-view/#the-getclientrects-and-getboundingclientrect-methods


I meant Jonas&apos; proposal.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55479</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-08-19 13:08:07 +0000</bug_when>
            <thetext>Jonas, so you believe the paths can be tied into the CSS layout engine? ... I don&apos;t know the lower layers of the browsers to answer this. ... If they can that is fantastic and yes I agree we would not need this added API.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55667</commentid>
            <who name="Jonas Sicking">jonas@sicking.cc</who>
            <bug_when>2011-08-23 06:50:16 +0000</bug_when>
            <thetext>Yes they can.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>55694</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-08-23 14:08:08 +0000</bug_when>
            <thetext>Alright, then this can be closed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57077</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-09-21 17:24:17 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: Marking closed per reporter.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57081</commentid>
            <who name="Rich Schwerdtfeger">schwer@us.ibm.com</who>
            <bug_when>2011-09-21 17:46:38 +0000</bug_when>
            <thetext>See thread.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>57161</commentid>
            <who name="Charles Pritchard">chuck@jumis.com</who>
            <bug_when>2011-09-22 16:33:03 +0000</bug_when>
            <thetext>(In reply to comment #10)
&gt; Status: Did Not Understand Request
&gt; Change Description: no spec change
&gt; Rationale: Marking closed per reporter.


The request is similar to the WHATWG proposed method scrollPathIntoView():
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-scrollpathintoview

scrollPathIntoView() works with the current path. scrollIntoView(element) would work with an element present in the Canvas subtree. This is already covered by CSSOM, we simply need to improve UA handling of DOM elements in the Canvas subtree. That work will likely move forward as development of Web Components (and the shadow tree) moves forward.</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13501</bug_id>
          
          <creation_ts>2011-08-01 14:40:00 +0000</creation_ts>
          <short_desc>werwerwer werew w erwe we r</short_desc>
          <delta_ts>2011-08-04 05:03:43 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#2dcontext</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>mike@w3.org</cc>
    
    <cc>miket@opera.com</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-d757c74047f270be53d5639e46515274</token>

      

      

          <long_desc isprivate="0">
            <commentid>51903</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-01 14:40:33 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#2dcontext
Complete: http://www.whatwg.org/c#2dcontext

Comment:
werwerwer werew w erwe we r

Posted from: 213.108.35.158
User agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52698</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:43 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13517</bug_id>
          
          <creation_ts>2011-08-02 09:23:00 +0000</creation_ts>
          <short_desc>Not &apos;type=checkbox&apos; but &apos;type=&quot;checkbox&quot;&apos;</short_desc>
          <delta_ts>2011-08-04 05:03:32 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#drawCustomFocusRingExample</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>jackalmage@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-f2ce5f641d0fbddc5c8e86314279682a</token>

      

      

          <long_desc isprivate="0">
            <commentid>51975</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-02 09:23:54 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#drawCustomFocusRingExample
Complete: http://www.whatwg.org/c#drawCustomFocusRingExample

Comment:
Not &apos;type=checkbox&apos; but &apos;type=&quot;checkbox&quot;&apos;

Posted from: 152.66.140.112
User agent: Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52000</commentid>
            <who name="Tab Atkins Jr.">jackalmage@gmail.com</who>
            <bug_when>2011-08-02 17:46:04 +0000</bug_when>
            <thetext>Unquoted attributes are perfectly valid.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52670</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:32 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13646</bug_id>
          
          <creation_ts>2011-08-03 22:22:00 +0000</creation_ts>
          <short_desc>left unanswered is what happens with 0-length lines</short_desc>
          <delta_ts>2011-08-06 07:25:05 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.whatwg.org/specs/web-apps/current-work/#line-styles</bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>contributor@whatwg.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054511-d5e23ce6097e5cfb55cc2bc36f19072e</token>

      

      

          <long_desc isprivate="0">
            <commentid>52273</commentid>
            <who name="">contributor@whatwg.org</who>
            <bug_when>2011-08-03 22:22:36 +0000</bug_when>
            <thetext>Specification: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html
Multipage: http://www.whatwg.org/C#line-styles
Complete: http://www.whatwg.org/c#line-styles

Comment:
left unanswered is what happens with 0-length lines

Posted from: 68.160.135.221
User agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0) Gecko/20100101 Firefox/6.0</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>52735</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-04 05:03:55 +0000</bug_when>
            <thetext>mass-move component to LC1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>54309</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-08-06 07:25:05 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: I don&apos;t understand. Could you elaborate?</thetext>
          </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>13732</bug_id>
          
          <creation_ts>2011-08-10 03:29:00 +0000</creation_ts>
          <short_desc>canvas accessibility</short_desc>
          <delta_ts>2011-12-09 23:13:36 +0000</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>HTML WG</product>
          <component>LC1 HTML Canvas 2D Context</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>NEEDSINFO</resolution>
          
          
          <bug_file_loc>http://www.w3.org/mid/B6CB855C5769484F862F4FB2CCFA50F402D545A7@VHAISHMSGJ2.vha.med.va.gov</bug_file_loc>
          <status_whiteboard>canvas</status_whiteboard>
          <keywords>a11y, a11y_canvas</keywords>
          <priority>P2</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>13590</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Michael[tm] Smith">mike@w3.org</reporter>
          <assigned_to name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</assigned_to>
          <cc>ian@hixie.ch</cc>
    
    <cc>laura.lee.carlson@gmail.com</cc>
    
    <cc>mike@w3.org</cc>
    
    <cc>public-html-a11y@w3.org</cc>
    
    <cc>public-html-wg-issue-tracking@w3.org</cc>
    
    <cc>public-html@w3.org</cc>
          <qa_contact name="HTML WG Bugzilla archive list">public-html-bugzilla@w3.org</qa_contact>

      
          <token>1354054512-fd6ff4f124839000eb4262c7ebee1286</token>

      

      

          <long_desc isprivate="0">
            <commentid>54569</commentid>
            <who name="Michael[tm] Smith">mike@w3.org</who>
            <bug_when>2011-08-10 03:29:10 +0000</bug_when>
            <thetext>http://www.w3.org/mid/B6CB855C5769484F862F4FB2CCFA50F402D545A7@VHAISHMSGJ2.vha.med.va.gov


The Canvas Element

Other than a reference to providing keyboard accessibility in the
fallback content, there is no reference to providing accessibility for
users with various disabilities.  Visual focus for off-screen elements
is an issue for users of screen magnification and low vision users, with
no visual keyboard indication and no tracking of programmatic focus in
the magnified area.  This makes &quot;fallback content&quot; appear to be the
&quot;text-only alternative&quot; of this decade.  Until there are strong
recommendations for how to make Canvas content accessible, there is a
huge risk of unequal access to interesting and innovative content.

[split out from bug 13590]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61327</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 21:56:47 +0000</bug_when>
            <thetext>Is this just asking for examples of how to use &lt;canvas&gt; in an accessible way?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>61353</commentid>
            <who name="Ian &apos;Hixie&apos; Hickson">ian@hixie.ch</who>
            <bug_when>2011-12-09 23:13:36 +0000</bug_when>
            <thetext>EDITOR&apos;S RESPONSE: This is an Editor&apos;s Response to your comment. If you are satisfied with this response, please change the state of this bug to CLOSED. If you have additional information and would like the editor to reconsider, please reopen this bug. If you would like to escalate the issue to the full HTML Working Group, please add the TrackerRequest keyword to this bug, and suggest title and text for the tracker issue; or you may create a tracker issue yourself, if you are able to do so. For more details, see this document:
   http://dev.w3.org/html5/decision-policy/decision-policy.html

Status: Did Not Understand Request
Change Description: no spec change
Rationale: please see comment 1</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>
